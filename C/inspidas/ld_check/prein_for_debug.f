C
C  *** PRECEP INPUT DATA CREATION PROGRAM ***
C      THIS PROGRAM CREATES PRECEP INPUT DATA
C
C
C      *** INPUT FILE ***
C          11    COORDINATE FILE ( ABE FORMAT )
C          13    DIHEDRAL ANGLE FILE ( ECEPP FORMAT )
C      *** OUTPUT FILE ***
C          12    PRECEP INPUT FILE
C
      SUBROUTINE PREIN
C
C     *** DECLARE ***
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
CMSP  INCLUDE (COMMAND)
      INCLUDE 'inc/command'
CMSP  INCLUDE (MAXSIZE)
      INCLUDE 'inc/maxsize'
CMSP  INCLUDE (UNITNUMS)
      INCLUDE 'inc/unitnums'
CMSP  INCLUDE (ALPHA)
      INCLUDE 'inc/alpha'
CMSP  INCLUDE (SIZE)
      INCLUDE 'inc/size'
CMSP  INCLUDE (CNTL)
      INCLUDE 'inc/cntl'
CMSP  INCLUDE (PRIMRY)
      INCLUDE 'inc/primry'
CMSP  INCLUDE (SSPAIR)
      INCLUDE 'inc/sspair'
CMSP  INCLUDE (VARANG)
      INCLUDE 'inc/varang'
C
      CHARACTER*60 NAME
      CHARACTER*11 FORMA
      CHARACTER*4  SUBTAS,NXTWD
      CHARACTER*4  DAOP
      CHARACTER*1  ENDOP
C
      INTEGER NURESV,NENDN,CENDN
      INTEGER RESNU(MAXRES),NUDA(MAXRES),DANU(MAXRES,10)
C
C     *** VARIABLE LIST ***
C     MAXRES = MAX NUMBER OF RESIDUES
C     MAXSS = MAX NUMBER OF S-S
C     NURES = NUMBER OF RESIDUES ( NUMER OF AMINO ACIDS + 2 )
C     NUSS = NUMBER OF S-S
C     PROP = PRINT OPTION ; 0 : PART OUTPUT  1 : ALL OUTPUT
C]]]]]]]] PROP CHANGED TO IPRNT BY A. KITAO FEB 16, 1990]]]]]]]]]]]]]]]]
C     DAOP = DIHEDRAL ANGLES OPTION ;  'ALL ','BACK','SIDE','SPEC'
C            'ALL ' ; ALL DIHEDRAL ANGLES ARE TO BE VARIED
C            'BACK' ; ALL BACKBONE DIHEDRAL ANGLES AND ALL END GROUP
C                     DIHEDRAL ANGLES ARE TO BE VARIED
C            'SIDE' ; ALL SIDE-CHAIN DIHEDRAL ANGLES ARE TO BE VARIED
C            'SPEC' ; ONLY THOSE DIHEDRAL ANGLES SPECIFIED EXPLICITLY
C                     BY SUBSEQUENT DATA ARE TO BE VARIED
C     ENDOP = END GROUP OPTION ;  'Y ' OR 'N'
C     NURESV = NUMBER OF RESIDUES WHICH HAVE VARIABL DIHEDRAL ANGLES
C     NENDN = N-END GROUP NUMBER WHICN USER SPECIFY
C     CENDN = C-END GROUP NUMBER WHICN USER SPECIFY
C     LIST(I) = RESIDUE SEQUENCE BY NUMBER
C     RESNU(I) = RESIDUE NUMBER WHICH HAS VARIABLE DIHEDRAL ANGLES
C     NUDA(I) = NUMBER OF VARIABLE DIHEDRAL ANGLES OF RESIDUE I
C     DANU(I,J) = DIHEDRAL ANGLE NUMBER OF RESIDUE I
C     CYSPAIR(I,J) = CYS(S-S) RESIDUE NUMBER
C
C    IPRNT IS FIXED TO 0
C    DAOP IS FIXED TO 'ALL '
      IPRNT = 0
      DAOP = 'ALL '
C
C     *** GET SUBTASK
C
  999 CONTINUE
      CALL NXTCMN(SUBTAS)
      WRITE(IOUT02,10) SUBTAS
   10 FORMAT(/5X,' NEXT SUBTASK * ', A4,/)
C
C      *** SUBTASK QUIT
C
      IF(SUBTAS .EQ. 'QUIT') GOTO 629
C
C      *** SUBTASK BUILD
C
      IF(SUBTAS .EQ. 'BUIL') THEN
          CALL NXTWRD(COMLY2, COMLEN, NXTWD, 4)
          IF(NXTWD .EQ. 'PRIM') THEN
C         *** READ PRIMARY STRUCTURE
              CALL PRIM(NUMRES)
          ELSEIF(NXTWD .EQ. 'CROS') THEN
C         *** READ CROSSLINK
              CALL CROSS(NSS,NPAIR)
          ELSEIF(NXTWD .EQ. 'READ') THEN
C         *** READ RESIDUE SEQUENCE DATA
              CALL GTFLNM(NAME)
              FORMA = 'FORMATTED'
              CALL OPENRD(IN11,FORMA,NAME,IOUT06)
              WRITE(IOUT02,20) NXTWD,NAME
   20         FORMAT(5X,A4,' : READ FROM ',A60)
              CALL RDABE(NUMRES,NSS,NPAIR)
              CLOSE(IN11)
          ELSEIF(NXTWD .EQ. 'END ') THEN
C         *** SPECIFY END-GROUP
C           IF YOU DON'T SPECIFY END GROUP , N-END GROUP IS 'H2N'
C           AND C-END GROUP IS 'COOH' .
              ENDOP =  'Y'
C             *** GET N-END NUMBER
              CALL GETPAI(COMLY2, COMLEN, 'NEND',4, ' ', 0, NENDN)
C             *** GET C-END NUMBER
              CALL GETPAI(COMLY2, COMLEN, 'CEND',4, ' ', 0, CENDN)
              WRITE(IOUT02,40)
              WRITE(IOUT02,50)
              WRITE(IOUT02,60) NENDN,CENDN
              WRITE(IOUT06,40)
              WRITE(IOUT06,50)
              WRITE(IOUT06,60) NENDN,CENDN
   40         FORMAT(6X,'*** END GROUP ***    ')
   50         FORMAT(5X,'   DEFAULT     N-END   1  C-END  11')
   60         FORMAT(5X,'   CHANGED TO  N-END  ',I2,'  C-END  ',I2)
              LIST(1)=NENDN
              LIST(NUMRES)=CENDN
          ENDIF
       ENDIF
C
C      *** SUBTASK READ
C
      IF(SUBTAS .EQ. 'READ') THEN
          CALL NXTWRD(COMLY2, COMLEN, NXTWD, 4)
          IF(NXTWD .EQ. 'ANGL') THEN
C     *** READ DIHEDRAL ANGLE DATA
              CALL GTFLNM(NAME)
              FORMA = 'FORMATTED'
              CALL OPENRD(IN13,FORMA,NAME,IOUT06)
              WRITE(IOUT02,20) NXTWD,NAME
              CALL RDANGL(IN13)
              CLOSE(IN13)
           ENDIF
      ENDIF
C
C      *** SUBTASK WRITE
C
      IF(SUBTAS .EQ. 'WRIT') THEN
          CALL NXTWRD(COMLY2, COMLEN, NXTWD, 4)
          IF(NXTWD .EQ. 'ANGL') THEN
C         *** WRITE ANGLE DATA (ECEPP FORMAT)
              CALL GTFLNM(NAME)
              FORMA = 'FORMATTED'
              CALL OPENWT(IOUT14,FORMA,NAME,IOUT06)
              WRITE(IOUT02,30) NXTWD,NAME
              CALL WTANGL(IOUT14)
              CLOSE(IOUT14)
          ELSEIF(NXTWD .EQ. 'ABE ') THEN
C         *** WRITE SEQUENCE DATA (ABE FORMAT)
              WRITE(IOUT02,*) '     NOT SUPPORTEDIN THIS VERSION]]'
          ELSEIF(NXTWD .EQ. 'PREI') THEN
C         *** WRITE INPUT DATA FORT PRECEP
              CALL GTFLNM(NAME)
              FORMA = 'FORMATTED'
              CALL OPENWT(IOUT12,FORMA,NAME,IOUT06)
              WRITE(IOUT02,30) NXTWD,NAME
   30         FORMAT(5X,A4,' : WRITE TO  ',A60)
              CALL WTPRIN(NUMRES,IPRNT,NSS,NPAIR,DAOP,
     1                  NURESV,RESNU,NUDA,DANU)
              CLOSE(IOUT12)
          ENDIF
       ENDIF
C
C      *** RETURN TO THE TOP OF THE LOOP
C
       GOTO 999
C
  629 RETURN
      END
C
C     THIS SUBROUTINE READS TITLE NURES,NUSS,CYSPAIR(I,J),AA(I)
C     FROM C.DATA FILE AND CONVERT AA(I)(4 CHARACTER RESIDUE SEQUENCE)
C     TO LIST(I)(NUMBER RESIDUE SEQUENCE)
C
      SUBROUTINE RDABE(NURES,NUSS,SSPAIR)
C
C     *** DECLARE ***
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
CMSP  INCLUDE (MAXSIZE)
      INCLUDE 'inc/maxsize'
CMSP  INCLUDE (ALPHA)
      INCLUDE 'inc/alpha'
CMSP  INCLUDE (COMMAND)
      INCLUDE 'inc/command'
CMSP  INCLUDE (UNITNUMS)
      INCLUDE 'inc/unitnums'
CMSP  INCLUDE (PRIMRY)
      INCLUDE 'inc/primry'
C
      INTEGER NURES,NUSS,SSPAIR(MAXSS,2)
C
      CHARACTER*4 AA(MAXRES)
      CHARACTER*144 BAA
C
C     *** VARIABLE LIST ***
C     BAA = 36 AMINO ACIDS REPRESENTED BY 4 CHARACTERS
C
      BAA='ALA ASP CYS GLU PHE GLY HIS ILE LYS LEU MET ASN ' //
     1    'PRO GLN ARG SER THR VAL TRP TYR CYE HPR NLE ORN ' //
     2    'ORN+HIS2HIS+LYS+ARG+ASB ASP-GLU-PROUPROFHPRUHPRF'
C
C     *** READ DATA FROM C.DATA FILE ***
C
      READ(IN11,1000)TITLE
 1000 FORMAT(A80)
      READ(IN11,1001)NURES,NUSS
 1001 FORMAT(I5,10X,I5)
      IF(NURES.GT.MAXRES)GO TO 1
      IF(NUSS.GT.MAXSS)GO TO 1
      READ(IN11,1002)(AA(I),I=1,NURES)
 1002 FORMAT(5X,10A4)
      IF(NUSS.NE.0)THEN
        READ(IN11,1003)((SSPAIR(I,J),J=1,2),I=1,NUSS)
 1003   FORMAT(20I4)
      ENDIF
C
C        ** CONVERT AA(I) TO LIST(I) **
C
      DO 10 I=2,NURES-1
        J=INDEX(BAA,AA(I))
        LIST(I)=(J+3)/4
   10 CONTINUE
C
C        ** N-END GROUP IS 'H2N' (1)  **
C        ** C-END GROUP IS 'COOH'(11) **
C
      LIST(1)=1
      LIST(NURES)=11
      RETURN
C
    1 CONTINUE
      WRITE(IOUT02,600)
  600 FORMAT(' ','   NUMBER OVER')
      WRITE(IOUT02,601)NURES,MAXRES,NUSS,MAXSS
  601 FORMAT(' ',' NUMBER OF RESIDUES',I5,'(MAX=',I5,') :'/
     1           ' NUMBER OF S-S     ',I5,'(MAX=',I5,')')
C
      STOP
      END
C
C     THIS SUBROUTINE READS NUSS,SSPAIR(I,J) FROM INPUT FILE
C
      SUBROUTINE CROSS(NUSS,SSPAIR)
C
C     *** DECLARE ***
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
CMSP  INCLUDE (COMMAND)
      INCLUDE 'inc/command'
CMSP  INCLUDE (MAXSIZE)
      INCLUDE 'inc/maxsize'
CMSP  INCLUDE (UNITNUMS)
      INCLUDE 'inc/unitnums'
CMSP  INCLUDE (PRIMRY)
      INCLUDE 'inc/primry'
C
      INTEGER NUSS,SSPAIR(MAXSS,2)
C
C     *** READ CROSS LINK DATA FROM INPUT FILE
C
      DO 10 I=1,99999
         CALL GETPAI(COMLY2, COMLEN, 'CYS1',4, ' ', 0, SSPAIR(I,1))
         CALL GETPAI(COMLY2, COMLEN, 'CYS2',4, ' ', 0, SSPAIR(I,2))
         IF(SSPAIR(I,1) .EQ. 0 .OR. SSPAIR(I,2) .EQ. 0) GOTO 20
         SSPAIR(I,1) = SSPAIR(I,1) + 1
         SSPAIR(I,2) = SSPAIR(I,2) + 1
   10 CONTINUE
C
   20 NUSS = I - 1
C
      WRITE(IOUT02,*)'     *** CROSS LINK ***'
      WRITE(IOUT06,*)'     *** CROSS LINK ***'
      DO 30 I=1,NUSS
      WRITE(IOUT02,*)'       CYS1 : ',SSPAIR(I,1),' CYS2 : ',SSPAIR(I,2)
      WRITE(IOUT06,*)'       CYS1 : ',SSPAIR(I,1),' CYS2 : ',SSPAIR(I,2)
   30 CONTINUE
C
      RETURN
      END
C
C     THIS SUBROUTINE READ AMID ACID SEQUENCE AND GENERATE LIST(I)
C     WHICH ARE AMINO ACID NUMBER
C
      SUBROUTINE PRIM(NURES)
C
C     *** DECLARE ***
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
CMSP  INCLUDE (MAXSIZE)
      INCLUDE 'inc/maxsize'
CMSP  INCLUDE (COMMAND)
      INCLUDE 'inc/command'
CMSP  INCLUDE (UNITNUMS)
      INCLUDE 'inc/unitnums'
CMSP  INCLUDE (PRIMRY)
      INCLUDE 'inc/primry'
C
      INTEGER NURES
      CHARACTER*4 AA(MAXRES)
      CHARACTER*4 RESNAM
      CHARACTER*144 BAA
C
C     *** VARIABLE LIST ***
C     BAA = 36 AMINO ACIDS REPRESENTED BY 4 CHARACTERS
C
      BAA='ALA ASP CYS GLU PHE GLY HIS ILE LYS LEU MET ASN ' //
     1    'PRO GLN ARG SER THR VAL TRP TYR CYE HPR NLE ORN ' //
     2    'ORN+HIS2HIS+LYS+ARG+ASB ASP-GLU-PROUPROFHPRUHPRF'
C
C     *** READ AMINO ACID SEQUENCE FORM INPUT DATA
C
      DO 10 I=2,99999
         CALL NXTWRD(COMLY2, COMLEN, RESNAM, 4)
         IF(RESNAM .EQ. 'END ') THEN
            GOTO 20
         ELSE
            AA(I) = RESNAM
         ENDIF
   10 CONTINUE
C
   20 NURES = I
C
C     *** CONVERT AA(I) TO LIST(I) **
C
      DO 30 I=2,NURES-1
         J = INDEX(BAA,AA(I))
         LIST(I) = (J+3)/4
   30 CONTINUE
C
C      WRITE(IOUT02,* ) '     *** PRIMARY STRUCTURE *** ' //0811
      WRITE(IOUT02,11) (AA(I),  I=2,NURES-1)
      WRITE(IOUT02,21) (LIST(I), I=2,NURES-1)
      WRITE(IOUT06,* ) '     *** PRIMARY STRUCTURE *** '
      WRITE(IOUT06,11) (AA(I),  I=2,NURES-1)
      WRITE(IOUT06,21) (LIST(I), I=2,NURES-1)
   11 FORMAT(8X,10(A4,2X))
   21 FORMAT(7X,10(I4,2X))
C
      RETURN
      END
C
C     THIS SUBROUTINE WRITE DATA TO PRECEP INPUT FILE
C
      SUBROUTINE WTPRIN(NURES,IPRNT,NUSS,SSPAIR,DAOP,NURESV,
     1               RESNU,NUDA,DANU)
C
C     *** DECLARE ***
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
CMSP  INCLUDE (MAXSIZE)
      INCLUDE 'inc/maxsize'
CMSP  INCLUDE (COMMAND)
      INCLUDE 'inc/command'
CMSP  INCLUDE (ALPHA)
      INCLUDE 'inc/alpha'
CMSP  INCLUDE (UNITNUMS)
      INCLUDE 'inc/unitnums'
CMSP  INCLUDE (PRIMRY)
      INCLUDE 'inc/primry'
CMSP  INCLUDE (VARANG)
      INCLUDE 'inc/varang'
C
      CHARACTER*4 DAOP
      INTEGER NURES,IPRNT,SSPAIR(MAXSS,2),NURESV
      INTEGER RESNU(MAXRES),NUDA(MAXRES),DANU(MAXRES,10)
C
C     *** WRITE DATA TO PRECEP INPUT FILE ***
C
C     IOUT02=20
C
      WRITE(IOUT12,2000)TITLE
 2000 FORMAT(A80)
      WRITE(IOUT12,2001)NURES,IPRNT
 2001 FORMAT(I5,'    1',I5,'    6    6')
      WRITE(IOUT12,2002)(LIST(I),I=2,(NURES-1))
 2002 FORMAT(20I3)
      WRITE(IOUT12,2003)LIST(1),LIST(NURES)
 2003 FORMAT(2I3)
      IF(NUSS.NE.0)THEN
        WRITE(IOUT12,2004)NUSS
 2004   FORMAT('   -1',I5)
        WRITE(IOUT12,2005)((SSPAIR(I,J),J=1,2),I=1,NUSS)
 2005   FORMAT(16I5)
      ENDIF
      DO 10 I=1,NURES
        WRITE(IOUT12,2006)(ANGLES(J,I),J=1,10)
 2006   FORMAT(10F8.3)
   10 CONTINUE
      WRITE(IOUT12,2007)DAOP
 2007 FORMAT(A4)
      IF(DAOP.EQ.'SPEC')THEN
        DO 20 I=1,NURESV
          WRITE(IOUT12,2008)RESNU(I),NUDA(I),DANU(I,J)
 2008     FORMAT(16I5)
   20   CONTINUE
        WRITE(IOUT12,2009)
 2009   FORMAT('    0')
      ENDIF
C
      RETURN
      END
