C***********************************************************************
C
C                             I  N  S  P  I  D  A  S
C
C  INSPIDAS DEVELOPMENT TEAM
C
C           MIZUGUCHI
C           SHIRAI
C           KITAO
C           YAMATO
C           IKURA
C           IRISA
C           HIRATA
C           GO
C                                                   JAN. 29, 1990
C
C***********************************************************************
C
C PROGRAM MAIN
C   MAIN PROGRAM FOR INSPIDAS
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*4 (I-N)
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (COMMAND)
C COMMAND.CMN
C
C PURPOSE : COMMON BLOCKS FOR PARSER
C
      COMMON/COMMAN /COMLYN(2000)
      COMMON/COMMSI  /COMLEN,MXCMSZ
      CHARACTER*1 COMLYN
      INTEGER COMLEN
      EQUIVALENCE (COMLYN(1),COMLY2 )
      CHARACTER*2000 COMLY2
C
C     COMLYN  - STORES CHARACTERS IN INPUT (COMMAND) LINE, UP TO 2000
C               CHARACTERS
C     COMLEN  - ACTUAL NUMBER OF NON-BLANK CHARACTERS
C     MXCMSZ  - MAX NUMBER OF CHARACTERS = 2000
C     COMLYN2 - A CHARACTER*2000 REPRESENTATION OF THE COMMAND LINE
C
CMSP  INCLUDE (UNITNUMS)
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (ECHO)
C  ECHO.CMN
C  HOLDS UNIT 1 DATA FOR ECHO
      COMMON/ECHO/INLINE(500)
      CHARACTER*80 INLINE
 
CMSP  INCLUDE (FILEIO)
        COMMON/FILEIO/IPTHSP,IRSTSP
        COMMON/FILECH  /PATHNA ,RSTFLN ,PDBFLN
        CHARACTER*60 PATHNA ,RSTFLN ,PDBFLN
C
C  FILE NAME RELATED VARIABLES
C   PATHNAM - PATH NAME TO THE RESIDUE DATABASE DIRECTORY
C   IPTHSP  - LOCATION IN PATHNAM OF FIRST SPACE
C   RSTFLNM - RESTART FILE NAME
C   IRSTSP  - LOCATION IN RSTFLNM OF FIRST SPACE
C   PDBFLNM - PDB FILENAME
C
CMSP  INCLUDE (WORK)
        COMMON/WORK/WRK(MWORK),IWRK(MIWORK)
        COMMON/WORKST /CWRK(MCHWOR )
        CHARACTER*4 CWRK
C WRK IS LARGE REAL*8 WORK ARRAY
C IWRK IS LARGE INTEGER WORK ARRAY
C CWRK IS LARGE CHARACTER ARRAY
C    IT SHOULD BE PASSED FROM MAIN TO THE SUBROUTINES BY WAY OF
C    CALL STATEMENT ARGUMENTS AND THE NECESSARY PORTIONS DIMENSIONED IN
C    THE SUBROUTINE
C
CMSP  INCLUDE (WORKMANA)
        COMMON/WRKMAN / ILSTRE  ,ILSTIN ,ILSTCH  ,ILSTLO
        COMMON/WRKLOG / PRNTME
        LOGICAL PRNTME
C
C  ILSTREAL - LAST ELEMENT USED IN REAL WORK ARRAY
C  ILSTINT - LAST ELEMENT USED IN INTEGER WORK ARRAY
C  ILSTCHAR - LAST ELEMENT USED IN CHARACTER WORK ARRAY
C  ILSTLOG - LAST ELEMENT USED IN LOGICAL WORK ARRAY
C
      CHARACTER*1 DEL
      CHARACTER*4 TASK
      CHARACTER*5 KEYWOR
      CHARACTER*10 DAY,WHEN
      CHARACTER*80 OUTPUT,TITLE
      CHARACTER*80 UNIT1
      CHARACTER*8  CMCVAX,CMCCVX,CMCCYB,CMCIBM,CMCTTN,VERSN
      LOGICAL ECH
      DATA  CMCVAX,CMCCVX,CMCCYB  /'VAX/VMS ','CONVEX  ','CYBER205'/
      DATA  CMCIBM                /'FACOM   '/
      DATA  CMCTTN                /'TITAN   '/
C
C   ************
      CALL TIMIT(0,0)
      ECH=.TRUE.
      DEL = '*'
C
C INITIALIZE WORKMANAGE COMMON BLOCK
C
        ILSTRE   = 1
        ILSTIN  = 1
        ILSTCH   = 1
        PRNTME  = .FALSE.
C
CVAX  VERSN=CMCVAX
CCVX  VERSN=CMCCVX
CMSP  VERSN=CMCIBM
CCYB  VERSN=CMCCYB
      VERSN=CMCTTN
C
C***********************************************************************
C   ASSIGN ALL I/O UNIT NUMBERS FOR ALL TASKS HERE
C   SEE UNITNUMS.CMN FOR A SUMMARY OF ALL I/O INFORMATION
C
C
      IN1=1
      IN2=2
      IN3=3
      IN4=4
      IFN4=4
      IOUT1=1
      IOUT2=2
      IOUT3=3
C
C  MAIN INPUT AND OUTPUT FILES
C
      IN01=1
        CALL GETARG(1,UNIT1)
        OPEN(IN01,FILE=UNIT1,FORM='FORMATTED',STATUS='OLD')
 
CFH   CALL GETENV('FOR001',UNIT1)
CCVX  OPEN(IN01,FILE=UNIT1,FORM='FORMATTED',STATUS='OLD')
C MAIN INPUT FILE
      IOUT02=2
C MAIN OUTPUT FILE
      IOUT06=6
C MAIN LOG FILE
C
C ----------------------------------------------------------------------
C  TASK PREIN ...
      IN11=11
      IN13=13
      IOUT12=12
      IOUT14=14
C
C  UNIT 11: AMINO ACID SEQUENCE (ABE FORMAT)
C  UNIT 13: DIHEDRAL ANGLE (ECEPP FORMAT)
C  UNIT 12: INPUT FILE TO PRECEP
C  UNIT 14: DIHEDRAL ANGLE (ECEPP FORMAT)
C
C  TASK PRECEP...
       IN21=21
       IN23=23
       IN25=25
       IN27=27
       IN29=29
       IOUT22=22
       IOUT24=24
       IOUT26=26
       IOUT28=28
C  UNIT 21: OUTPUT FROM PREIN
C  UNIT 22: INPUT TO MINIMIZE
C  TASK MINIM...
C
       IN31=31
       IN33=33
       IN35=35
       IN37=37
       IOUT32=32
       IOUT34=34
       IOUT36=36
       IOUT38=38
       IOUT39=39
       IOUT40=40
C UNIT 31:  PRECEP OUTPUT DATA
C UNIT 33:  ENERGY PARAMETERS (BD8)
C UNIT 35:  INITIAL ANGLES IN UNIT OF DEGREES (ECCEP FORMAT)
C UNIT 37:  INITIAL ANGLES IN UNIT OF RADIANS (UNFORMATTED)
C             (RESTART FILE)
C UNIT 32:  FINAL ANGLES (FORMATTED)
C UNIT 34:  FLEX FORMATTED DATA (ANGLES AND COORDINATES)
C UNIT 36:  FIRST AND SECOND DERIVATIVE OF POTENTIAL ENERGY
C               (UNFORMATTED)
C UNIT 38:  FINAL COORDINATES AND ANGLES (FORMATTED)
C UNIT 39:  FINAL COORDINATES (UNFORMATTED)
C UNIT 40:  FINAL ANGLES IN UNITS OF RADIANS (UNFORMATTED)
C             (RESTART FILE)
C  TASK NMA
C
       IN41=41
       IN43=43
       IN45=45
       IN47=47
       IOUT42=42
       IOUT44=44
       IOUT46=46
       IOUT48=48
       IOUT50=50
       IOUT52=52
       IOUT54=54
       IOUT56=56
       IOUT58=58
       IOUT60=60
       IOUT62=62
       IOUT64=64
       IOUT66=66
C UNIT 41:  PRECEP OUTPUT
C UNIT 43:  EIGEN VALUES AND EIGEN VECTORS (UNFORMATTED)
C UNIT 45:  K-MATRIX
C UNIT 42:  EIGEN VALUES AND EIGEN VECTORS (FORMATTED)
C UNIT 44:  EIGEN VALUES AND EIGEN VECTORS (UNFORMATTED)
C UNIT 47:  K-MATRIX * EIGEN VECTORS
C
C  TASK MONT
C
       IN71=71
       IN73=73
       IN75=75
       IN77=77
       IN79=79
       IOUT72=72
       IOUT74=74
       IOUT76=76
       IOUT78=78
C --- INPUT
C UNIT 71:  PRECEP OUTPUT
C UNIT 73:  ENERGY PARAMETERS (BD8)
C UNIT 75:  INITIAL ANGLES IN UNIT OF DEGREES (ECEPP FORMAT)
C UNIT 77:  INITIAL ANGLES IN UNIT OF RADIANS (UNFORMATTED)
C UNIT 79:  THE DATA FOR CONTINUING A PREVIOUS JOB
C --- OUTPUT
C UNIT 72:  THE DATA FOR CONTINUING A PREVIOUS JOB
C UNIT 74:  OUTPUT OF ENERGY
C UNIT 76:  OUTPUT OF ANGLES
C UNIT 78:  OUTPUT OF COORDINATE IN SINGLE PRECISON
C
C***********************************************************************
C READ IN UNIT 1 DATA FOR ECHO AND REWIND UNIT 1
C
      CALL ECHOIN(NLINE)
C***********************************************************************
C
C  TASK LOOP...
C  READ IN THE TASK AND DECIDE WHAT TO DO.
C
    2 CONTINUE
C
      CALL NXTCMN (TASK)
C
C PRINT OUT MEMORY USAGE INFO. FOR THIS TASK?
C
      IF (LCRMST (COMLY2 ,COMLEN,'MEMO',4,'RY',2) .GT. 0) THEN
          PRNTME  = .TRUE.
      ENDIF
C
      IF(TASK.EQ.'WRIT') THEN
        CALL GTFLNM(OUTPUT)
CFHCVAX    CALL DATE(DAY)
CFHCVAX    CALL TIME(WHEN)
        CALL DATE(DAY)
        CALL TIME(WHEN)
CMSP    CALL DATE(DAY)
CMSP    CALL TIME(ITIME)
CMSP        ITIME = ITIME/1000
CMSP        IHOUR = ITIME/3600
CMSP        IMINT = (ITIME-IHOUR*3600)/60
CMSP        ISCND =ITIME-IHOUR*3600-IMINT*60
CFHCCYB    DAY = DATE()
CFHCCYB    WHEN = TIME()
C
        CALL OPENWT(IOUT02,'FORMATTED',OUTPUT,IOUT06)
        REWIND IOUT02
        WRITE(IOUT06,779)OUTPUT
 779    FORMAT(5X,' OUTPUT WRITTEN TO : ',A80,/)
C
        WRITE(IOUT02,766)VERSN,DAY(1:9),WHEN
        WRITE(IOUT06,766)VERSN,DAY,WHEN
CCYB    WRITE(IOUT02,766)VERSN,DAY,WHEN
CCYB    WRITE(IOUT06,766)VERSN,DAY,WHEN
CVAX    WRITE(IOUT02,766)VERSN,DAY,WHEN
CVAX    WRITE(IOUT06,766)VERSN,DAY,WHEN
CMSP    WRITE(IOUT02,769)VERSN,DAY,IHOUR,IMINT,ISCND
CMSP    WRITE(IOUT06,769)VERSN,DAY,IHOUR,IMINT,ISCND
 766    FORMAT(/,5X,'INSPIDAS V 0.0  ',A8,' VERSION :   ',A10,5X,A10,/)
 769    FORMAT(/,5X,'INSPIDAS V 0.0  ',A8,' VERSION :   ',A8,7X,
     .         I2,':',I2,':',I2/)
        CALL GTRMST (COMLY2 ,COMLEN,'TITL',4,'E',1,TITLE,DEL,LENTIT)
        CALL TRIMST (TITLE,LENTIT)
        WRITE(IOUT02,*)
        WRITE(IOUT02,*)'      TITLE : ',TITLE(1:LENTIT)
        WRITE(IOUT02,*)
        WRITE(IOUT02,*)'     INPUT: '
        WRITE(IOUT02,*)
C **  ECHO UNIT 1 DATA
        IF (ECH) THEN
           CALL ECHOOU (NLINE)
           ECH=.FALSE.
        ENDIF
C
        GO TO 2
      ENDIF
C
C  TASK PREIN....
C
      IF(TASK.EQ.'PREI') THEN
        WRITE(IOUT02,10)
        WRITE(IOUT06,10)
 10     FORMAT(/,5X,' NEXT TASK :  PREIN ',/)
        CALL PREIN
        GO TO 2
      ENDIF
C
C  TASK PRECEP....
C
      IF(TASK.EQ.'PREC') THEN
        WRITE(IOUT02,20)
        WRITE(IOUT06,20)
 20     FORMAT(/,5X,' NEXT TASK :  PRECEP ',/)
        CALL PRECEP
        GO TO 2
      ENDIF
C
C  TASK MINIMIZATION....
C
      IF(TASK.EQ.'MINI')THEN
        WRITE(IOUT02,30)
        WRITE(IOUT06,30)
 30     FORMAT(/,5X,' NEXT TASK :  MINIMIZATION ',/)
        CALL MINIM
        GO TO 2
      ENDIF
C
C  TASK NOMAL MODE ANALYSIS....
C
      IF(TASK.EQ.'NMA ') THEN
        WRITE(IOUT02,40)
        WRITE(IOUT06,40)
 40     FORMAT(/,5X,' NEXT TASK :  NORMAL MODE ANALYSIS',/)
        CALL NMA
        GO TO 2
      ENDIF
C
C  TASK MONTE CARLO SIMULATION....
C
      IF(TASK.EQ.'MONT') THEN
        WRITE(IOUT02,70)
        WRITE(IOUT06,70)
 70     FORMAT(/,5X,' NEXT TASK :  MONTE CARLO SIMULATION',/)
        CALL MC
        GO TO 2
      ENDIF
C
C
C  TASK END....
C
      IF(TASK.EQ.'END ')GO TO 5
C
      WRITE(IOUT02,*)' WARNING TASK NOT AVAILABLE ',TASK
      WRITE(IOUT06,*)' WARNING TASK NOT AVAILABLE ',TASK
      GO TO 2
C
  5   CONTINUE
CCYS      CALL TIMIT(IOUT02,1)
      STOP' INSPIDAS CONTROLLER: ALL TASKS COMPLETED'
      END
        INTEGER FUNCTION IREQWR (ISIZE,TYPE)
        IMPLICIT REAL*8 (A-H,O-Z)
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (UNITNUMS)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:12:54   -dc
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (WORKMANA)
        COMMON/WRKMAN / ILSTRE  ,ILSTIN ,ILSTCH  ,ILSTLO
        COMMON/WRKLOG / PRNTME
        LOGICAL PRNTME
C
C  ILSTREAL - LAST ELEMENT USED IN REAL WORK ARRAY
C  ILSTINT - LAST ELEMENT USED IN INTEGER WORK ARRAY
C  ILSTCHAR - LAST ELEMENT USED IN CHARACTER WORK ARRAY
C  ILSTLOG - LAST ELEMENT USED IN LOGICAL WORK ARRAY
C
CMSP  INCLUDE (WORK)
        COMMON/WORK/WRK(MWORK),IWRK(MIWORK)
        COMMON/WORKST /CWRK(MCHWOR )
        CHARACTER*4 CWRK
C WRK IS LARGE REAL*8 WORK ARRAY
C IWRK IS LARGE INTEGER WORK ARRAY
C CWRK IS LARGE CHARACTER ARRAY
C    IT SHOULD BE PASSED FROM MAIN TO THE SUBROUTINES BY WAY OF
C    CALL STATEMENT ARGUMENTS AND THE NECESSARY PORTIONS DIMENSIONED IN
C    THE SUBROUTINE
C
        CHARACTER*4 TYPE
        CHARACTER*4 BLANK
        DATA ZERO,IZERO/0.0D+00,0/
C
C  IREQWRK - RETURNS THE LAST AVAILABLE SPACE IN ONE OF THE WORK COMMON
C            BLOCKS
C  TYPE - CHARACTER STRING - TYPE OF COMMON BLOCK - 'REAL','INTE','CHAR'
C           'LOGI'
C  ISIZE - SIZE OF ARRAY REQUESTED
C
C  ROUTINE CHECKS TO SEE IF ARRAY BOUNDS HAVE BEEN EXCEEDED
C
C  THE ELEMENTS IN THE WORK ARRAY WILL THEN BE BOUNDED BY IREQWRK AND
C    IREQWRK + ISIZE
C
        BLANK = CHAR(0)
        IF (TYPE .EQ. 'REAL') THEN
           ILSTUS  = ILSTRE
           ILSTRE   = ILSTRE   + ISIZE
           IMAXWR  = MWORK + 1
           IF (ILSTRE   .GT. IMAXWR ) THEN
             WRITE(6,*) ' INSUFFICIENT REAL WORK ARRAY SIZE'
             WRITE(6,*) ' REDIMENSION PROGRAM'
         WRITE(6,*) ' REQUESTED SIZE = ',ILSTRE  ,' MWORK SIZE = ',MWORK
             CALL DIE
           ENDIF
           IREQWR  = ILSTUS
CDIR@ IVDEP
           DO 10 I=ILSTUS ,ILSTRE
10         WRK(I) = ZERO
           ILST = ILSTRE
        ELSE IF (TYPE .EQ. 'INTE') THEN
           ILSTUS  = ILSTIN
           ILSTIN  = ILSTIN  + ISIZE
           IIMAX = MIWORK + 1
           IF (ILSTIN  .GT. IIMAX) THEN
             WRITE(6,*) ' INSUFFICIENT INTEGER WORK ARRAY SIZE'
             WRITE(6,*) ' REDIMENSION PROGRAM'
        WRITE(6,*)' REQUESTED SIZE = ',ILSTIN ,' MIWORK SIZE = ',MIWORK
             CALL DIE
           ENDIF
           IREQWR  = ILSTUS
CDIR@ IVDEP
      DO 20 I = 1, ILSTIN - ILSTUS + 1
         IWRK(ILSTUS+I-1) = 0
   20 CONTINUE
           ILST = ILSTIN
        ELSE IF (TYPE .EQ. 'CHAR') THEN
           ILSTUS  = ILSTCH
           ILSTCH   = ILSTCH   + ISIZE
           ICHMAX = MCHWOR  + 1
           IF (ILSTCH   .GT. ICHMAX) THEN
             WRITE(6,*) ' INSUFFICIENT CHARACTER WORK ARRAY SIZE'
             WRITE(6,*) ' REDIMENSION PROGRAM'
         WRITE(6,*)' REQUESTED SIZE = ',ILSTCH  ,
     *       ' MCHWORK SIZE = ',MCHWOR
             CALL DIE
           ENDIF
           IREQWR  = ILSTUS
           DO 30 I=ILSTUS ,ILSTCH
30         CWRK(I) = BLANK
           ILST = ILSTCH
        ELSE
           WRITE(6,*) ' PROGRAMMING ERROR: UNKNOWN WORK ARRAY TYPE '
           CALL DIE
        ENDIF
        IF (PRNTME ) THEN
          WRITE(IOUT02,*)' %I - NEW WORK MEMORY USED: '
          WRITE(IOUT02,*)'   WORK ARRAY: ',TYPE
          WRITE(IOUT02,*)'   STARTING LOCATION : ',ILSTUS
          WRITE(IOUT02,*)'   SIZE: ',ISIZE,' LAST USED ELEMENT: ',ILST
        ENDIF
        RETURN
        END
        INTEGER FUNCTION IRELWR (ISIZE,IBEG,TYPE)
        IMPLICIT REAL*8 (A-H,O-Z)
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (UNITNUMS)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:12:54   -dc
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (WORKMANA)
        COMMON/WRKMAN / ILSTRE  ,ILSTIN ,ILSTCH  ,ILSTLO
        COMMON/WRKLOG / PRNTME
        LOGICAL PRNTME
C
C  ILSTREAL - LAST ELEMENT USED IN REAL WORK ARRAY
C  ILSTINT - LAST ELEMENT USED IN INTEGER WORK ARRAY
C  ILSTCHAR - LAST ELEMENT USED IN CHARACTER WORK ARRAY
C  ILSTLOG - LAST ELEMENT USED IN LOGICAL WORK ARRAY
C
CMSP  INCLUDE (WORK)
        COMMON/WORK/WRK(MWORK),IWRK(MIWORK)
        COMMON/WORKST /CWRK(MCHWOR )
        CHARACTER*4 CWRK
C WRK IS LARGE REAL*8 WORK ARRAY
C IWRK IS LARGE INTEGER WORK ARRAY
C CWRK IS LARGE CHARACTER ARRAY
C    IT SHOULD BE PASSED FROM MAIN TO THE SUBROUTINES BY WAY OF
C    CALL STATEMENT ARGUMENTS AND THE NECESSARY PORTIONS DIMENSIONED IN
C    THE SUBROUTINE
C
        CHARACTER*4 TYPE
C
C ROUTINE WHICH RELEASES MEMORY FROM WORK ARRAYS
C
C ISIZE - AMOUNT OF MEMORY TO BE RELEASED
C IBEG - ELEMENT IN WORK ARRAY WHERE SECTION OF MEMORY BEGINS
C TYPE - CHARACTER STRING WHICH INDICATES WHICH INDICATES THE
C         WHICH WORK ARRAY SHOULD HAVE THE MEMORY RELEASED
C         'REAL','INTE','CHAR' ARE THE ACCEPTABLE VALUES
C
        IF (TYPE .EQ. 'REAL') THEN
           ITMP = ILSTRE
           INEW = ILSTRE   - ISIZE
          IF (INEW .LT. 1) THEN
            WRITE(6,*) ' PROGRAMMING ERROR: CANNOT RELEASE THIS MEMORY '
            WRITE(6,*) ' READ WORK ARRAY'
            CALL DIE
          ENDIF
      IF (ISIZE.GE.0 .OR. (-ISIZE).GE.INEW-IBEG+1) THEN
CDIR@    IVDEP
         DO 10 I = 1, INEW - IBEG + 1
            WRK(IBEG+I-1) = WRK(IBEG+ISIZE+I-1)
   10    CONTINUE
      ELSE
CDIR@    NEXTSCALAR
         DO I = IBEG, INEW
            WRK(I) = WRK(I+ISIZE)
         END DO
      ENDIF
           ILSTRE   = INEW
           IRELWR  = ILSTRE
           ILST = ILSTRE
        ELSE IF (TYPE .EQ. 'INTE') THEN
           ITMP = ILSTIN
           INEW = ILSTIN  - ISIZE
          IF (INEW .LT. 1) THEN
            WRITE(6,*) ' PROGRAMMING ERROR: CANNOT RELEASE THIS MEMORY '
            WRITE(6,*) ' INTEGER WORK ARRAY'
            CALL DIE
          ENDIF
      IF (ISIZE.GE.0 .OR. (-ISIZE).GE.INEW-IBEG+1) THEN
CDIR@    IVDEP
         DO 20 I = 1, INEW - IBEG + 1
            IWRK(IBEG+I-1) = IWRK(IBEG+ISIZE+I-1)
   20    CONTINUE
      ELSE
CDIR@    NEXTSCALAR
         DO I = IBEG, INEW
            IWRK(I) = IWRK(I+ISIZE)
         END DO
      ENDIF
           ILSTIN  = INEW
           IRELWR  = ILSTIN
           ILST = ILSTIN
        ELSE IF (TYPE .EQ. 'CHAR') THEN
           ITMP = ILSTCH
           INEW = ILSTCH   - ISIZE
          IF (INEW .LT. 1) THEN
            WRITE(6,*) ' PROGRAMMING ERROR: CANNOT RELEASE THIS MEMORY '
            WRITE(6,*) ' CHARACTER WORK ARRAY'
            CALL DIE
          ENDIF
          DO 30 I=IBEG,INEW
            CWRK(I) = CWRK(I+ISIZE)
30        CONTINUE
           ILSTCH   = INEW
           IRELWR  = ILSTCH
           ILST = ILSTCH
        ELSE
           WRITE(6,*) ' PROGRAMMING ERROR: UNKNOWN WORK ARRAY TYPE '
           CALL DIE
        ENDIF
        IF (PRNTME ) THEN
          WRITE(IOUT02,*)' %I - WORK MEMORY RELEASED: '
          WRITE(IOUT02,*)'   WORK ARRAY: ',TYPE
          WRITE(IOUT02,*)'   NEW LAST LOCATION : ',ILST
          WRITE(IOUT02,*)'   SIZE: ',ISIZE
        ENDIF
        RETURN
        END
