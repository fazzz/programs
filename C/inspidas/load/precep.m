C*************************************************************
C*    PRECEP                                                 *
C*               VERSION  1.0         ( 27  APRIL    1985)   *
C*               VERSION  2.0         (     DEC      1985)   *
C*                                                           *
C*               BY H. WAKO, ASAHI CHEM. CO. AND H. NAKAMURA *
C*                                                           *
C*************************************************************
C
C        INPUT FILES
C                    23:   SDATX (RESIDUAL DATA FOR 36 KINDS A.A. RES.)
C                    25:   UNITX (UNIT     DATA FOR 36 KINDS A.A. RES.)
C                    21:   MAIN INPUT DATA
C
C        OUTPUT FILES
C                    22:   PRECEP OUTPUT  (IOUT22)
C                    06:   PRINT  LISTING (IOUT06)
C
C
      SUBROUTINE PRECEP
      IMPLICIT REAL*8(A-H,O-Z)
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (COMMAND)
C COMMAND.CMN
C
C PURPOSE : COMMON BLOCKS FOR PARSER
C
      COMMON/COMMAN /COMLYN(2000)
      COMMON/COMMSI  /COMLEN,MXCMSZ
      CHARACTER*1 COMLYN
      INTEGER COMLEN
      EQUIVALENCE (COMLYN(1),COMLY2 )
      CHARACTER*2000 COMLY2
C
C     COMLYN  - STORES CHARACTERS IN INPUT (COMMAND) LINE, UP TO 2000
C               CHARACTERS
C     COMLEN  - ACTUAL NUMBER OF NON-BLANK CHARACTERS
C     MXCMSZ  - MAX NUMBER OF CHARACTERS = 2000
C     COMLYN2 - A CHARACTER*2000 REPRESENTATION OF THE COMMAND LINE
C
CMSP  INCLUDE (FILEIO)
        COMMON/FILEIO/IPTHSP,IRSTSP
        COMMON/FILECH  /PATHNA ,RSTFLN ,PDBFLN
        CHARACTER*60 PATHNA ,RSTFLN ,PDBFLN
C
C  FILE NAME RELATED VARIABLES
C   PATHNAM - PATH NAME TO THE RESIDUE DATABASE DIRECTORY
C   IPTHSP  - LOCATION IN PATHNAM OF FIRST SPACE
C   RSTFLNM - RESTART FILE NAME
C   IRSTSP  - LOCATION IN RSTFLNM OF FIRST SPACE
C   PDBFLNM - PDB FILENAME
C
CMSP  INCLUDE (SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (VARANG)
C VARANG
C
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (UNITNUMS)
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (CNTL)
C CNTL
C
       COMMON /PRINT/IPRNT
C
C   IPRNT :  PRINT OPTION, 0 PART OUTPUT, 1 ALL OUTPUT
C
CMSP  INCLUDE (SSPAIR)
C SSPAIR
C
      COMMON/SSPAIR/KSSPER(6,2,MAXSS),JSS(3,MAXSS),KSS(MAXSS2),
     >              LSS(MAXSS2),NPAIR(MAXSS,2)
C
C  KSSPER:    THE ATOM NUMBERS WHICH BELONG TO THE DISULPHITE BONDS
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      CHARACTER*60 NAME
      CHARACTER*11 FORMA
      CHARACTER*4  SUBTAS,NXTWD
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &              NV(MAXRES)
C     COMMON/CYS001/ KCYS,NCYS
      COMMON/CYS001/ KCYS
C     COMMON/GEN100/ INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/ NPRE(MXRS1)
C     COMMON/IOUNIT/ JREAD
C     COMMON/PRINT/  IPRNT
C     COMMON/PREPAR/ LNUM,JMLAST,KMLAST,LNUMS,LEN,NUMATM
      COMMON/PREPAR/ LNUM,JMLAST,KMLAST,LNUMS,LEN
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
C     DIMENSION  VAR(MAXVAR)
      CHARACTER*4  AANAME(36)
      DATA  AANAME /'ALA','ASP','CYS','GLU','PHE','GLY',
     &  'HIS','ILE','LYS','LEU','MET','ASN','PRO','GLN','ARG','SER',
     &  'THR','VAL','TRP','TYR','CYS','HPR','NLE','ORN','ORN+','HIS2',
     &  'HIS+','LYS+','ARG+','ASB','ASP-','GLU-',
     &  'PROU','PROF','HPRU','HPRF'/
      EXTERNAL   ABLOCK
C     CHARACTER  TITLE*80
C
C ****** GET SUBTASK *****
C
 2000 CONTINUE
      CALL NXTCMN(SUBTAS)
      WRITE(IOUT02,5000) SUBTAS
 5000 FORMAT(/5X,' NEXT SUBTASK * ', A4,/)
C
C ***** SUBTASK QUIT *****
C
      IF(SUBTAS .EQ. 'QUIT') GOTO 3000
C
C ***** SUBTASK READ *****
C
      IF(SUBTAS .EQ. 'READ') THEN
        CALL NXTWRD(COMLY2, COMLEN, NXTWD, 4)
        IF(NXTWD .EQ. 'PARM') THEN
          CALL NXTWRD(COMLY2, COMLEN, NXTWD, 4)
          IF(NXTWD .EQ. 'STAN') THEN
C        *** READ STANDARD RESIDUE DATA ***
              CALL GTFLNM(NAME)
              FORMA = 'FORMATTED'
              CALL OPENRD(IN23,FORMA,NAME,IOUT06)
              CALL  INPUTT
              CLOSE(IN23)
          ELSE IF(NXTWD .EQ. 'UNIT') THEN
C         *** READ UNIT DATA ***
              CALL GTFLNM(NAME)
              FORMA = 'FORMATTED'
              CALL OPENRD(IN25,FORMA,NAME,IOUT06)
              CALL  INPUT
              CLOSE(IN25)
          END IF
        ELSE IF(NXTWD .EQ. 'ANGL') THEN
C       *** READ ANGLES ***
            WRITE(IOUT02,*) '  NOT SUPPORTTED IN THIS VERSION}}'
        ELSE IF(NXTWD .EQ. 'PREI') THEN
C       *** READ OUTPUT FROM PREIN ***
            CALL GTFLNM(NAME)
            FORMA = 'FORMATTED'
            CALL OPENRD(IN21,FORMA,NAME,IOUT06)
            CALL FMPRIN
            CLOSE(IN21)
        END IF
      END IF
C
C ***** SUBTASK RUN *****
C
      IF(SUBTAS .EQ. 'RUN') THEN
      WRITE(IOUT06,100)
C     IN21 = 21
      WRITE(IOUT06,913)  TITLE
C       IF (INUMRS.GT.MAXRES) THEN
        IF (NUMRES.GT.MAXRES) THEN
C         WRITE(6,800)  MAXRES,INUMRS
          WRITE(6,800)  MAXRES,NUMRES
          STOP
        ENDIF
      WRITE(IOUT06,903)
C     WRITE(IOUT06,916)  (LIST(I),I=2,INUMRS-1)
      WRITE(IOUT06,916)  (LIST(I),I=2,NUMRES-1)
      WRITE(IOUT06,914)
C     WRITE(IOUT06,916)  LIST(1),LIST(INUMRS)
      WRITE(IOUT06,916)  LIST(1),LIST(NUMRES)
      WRITE(IOUT06,914)
C     WRITE(IOUT06,915)  (AANAME(LIST(I)),I=2,INUMRS-1)
      WRITE(IOUT06,915)  (AANAME(LIST(I)),I=2,NUMRES-1)
C
      CALL  PARAM(SUM)
C     NUMATM = NPRE(INUMRS+1)
      NUMATM = NPRE(NUMRES+1)
        IF (NUMATM.GT.MAXATM) THEN
          WRITE(6,810)  MAXATM,NUMATM
          STOP
        ENDIF
      CALL  PARAMT
      WRITE(IOUT06,120)  SUM*0.07761505
C
C     CALL  RDCYS
C       IF (NCYS.GT.MAXSS)  THEN
        IF (NSS.GT.MAXSS)   THEN
C         WRITE(6,820)  MAXSS,NCYS
          WRITE(6,820)  MAXSS,NSS
          STOP
        ENDIF
C     IF (NCYS.EQ.0)  GOTO  3
      IF (NSS.EQ.0)   GOTO  3
      WRITE(IOUT06,130)
C     WRITE(IOUT06,140)  ((NPAIR(K,J),J=1,2),K=1,NCYS)
      WRITE(IOUT06,140)  ((NPAIR(K,J),J=1,2),K=1,NSS)
C
   3  RAD = 0.01745329
C     READ(IN21,150)  ((ANGRAD(J,I),J=1,10),I=1,INUMRS)
C     READ(IN21,150)  ((ANGRAD(J,I),J=1,10),I=1,NUMRES)
C     DO  4  I = 1, INUMRS
C     DO  4  I = 1, NUMRES
C     DO  4  J = 1, 10
C  4  ANGRAD(J,I) = ANGRAD(J,I)*RAD
C
      JMLAST=0
      LNUMS = 0
C
      CALL  SPECV
C     CALL  INITOR(VAR)
      CALL  INITOR
        IF (NUMVAR.GT.MAXVAR) THEN
          WRITE(6,830)  MAXVAR,NUMVAR
          STOP
        ENDIF
      LEN = 1
C     CALL  ENERGY (VAR)
      CALL  ENERGY
      LNUM = 4
      CALL  PREP
      CALL RUN1 (LEN)
      CALL OUTMAX
      END IF
C
C ***** SUBTASK WRITE *****
C
      IF(SUBTAS .EQ. 'WRIT') THEN
        CALL NXTWRD(COMLY2, COMLEN, NXTWD, 4)
        IF(NXTWD .EQ. 'ANGL') THEN
C       *** WRITE ANGLE DATA ***
            WRITE(IOUT02,*) '  NOT SUPPORTED IN THIS VERSION}}'
        ELSE IF(NXTWD .EQ. 'PREO') THEN
C       *** WRITE PREOUT ***
            CALL GTFLNM(NAME)
            FORMA = 'FORMATTED'
            CALL OPENWT(IOUT22,FORMA,NAME,IOUT06)
            CALL  OUT1
            CLOSE(IOUT22)
        END IF
      END IF
C
C ***** RETURN TO THE TOP OF THE LOOP
C
      GOTO 2000
 3000 RETURN
  100 FORMAT('1',20X,'***   PRECEPP OUTPUT   ***')
  110 FORMAT(16I5)
  120 FORMAT(/,' NET CHARGE ON PEPTIDE =',F8.3,
     & ' ELECTRONIC CHARGE UNITS')
  130 FORMAT(/,' DISULFIDE BONDS CONNECT THE FOLLOWING RESIDUE PAIRS')
  140 FORMAT((/,4(8X,I3,1X,I3)))
  150 FORMAT(10F8.3)
  903 FORMAT('0***  AMINO ACID SEQUENCE  ***'/)
  904 FORMAT(20I3)
  905 FORMAT(A80)
  913 FORMAT('0    PROTEIN:  ',A80)
  914 FORMAT(' ')
  915 FORMAT(' ',20A4)
  916 FORMAT(6X,20I3)
  800 FORMAT('0 ***ERROR MESSAGE FROM MAIN.'/
     &  '    * MAXRES.LT.INUMRS *    CORRECT MAXRES IN PARAMETER'/
     &  '        MAXRES=',I4,',   INUMRS=',I4)
  810 FORMAT('0 ***ERROR MESSAGE FROM MAIN.'/
     &  '    * MAXATM.LT.NUMATM *    CORRECT MAXATM IN PARAMETER'/
     &  '        MAXATM=',I5,',   NUMATM=',I5)
  820 FORMAT('0 ***ERROR MESSAGE FROM MAIN.'/
     &  '    * MAXSS.LT.NCYS *    CORRECT MAXSS IN PARAMETER'/
     &  '        MAXSS=',I3,',   NCYS=',I3)
  830 FORMAT('0 ***ERROR MESSAGE FROM MAIN.'/
     &  '    * MAXVAR.LT.NUMVAR *    CORRECT MAXVAR IN PARAMETER'/
     &  '        MAXVAR=',I4,',   NUMVAR=',I4)
      END
C*********************************************************************
C                                                                    *
C            ECEPP                                                   *
C                                                                    *
C*********************************************************************
      BLOCK DATA ABLOCK
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBPROGRAM INITIALIZES SOME DATA PASSED BY COMMON BLOCKS
C IPRNT CONTROLS SOME PRINT STATEMENTS
C
      REAL*8  IDENT, PROANG(3)
CMSP  INCLUDE (UNITNUMS)
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (CNTL)
C CNTL
C
       COMMON /PRINT/IPRNT
C
C   IPRNT :  PRINT OPTION, 0 PART OUTPUT, 1 ALL OUTPUT
C
      COMMON/GEN005/  IDENT(9)
      COMMON/GEN006/  PROANG
      COMMON/GEN007/  LBG(3),LEN(3)
C     COMMON/IOUNIT/  JREAD
      COMMON/PRAM/  NREG,NEND,LR(6,20),LRT1(7,36)
C     COMMON/PRINT/ IPRNT
      DATA  IDENT /1.D0,3*0.D0,1.D0,3*0.D0,1.D0/
      DATA  IPRNT /0/
      DATA  IN23,IOUT06,IOUT22 /23,06,22/
      DATA  PROANG/2.1366663D0, 1.9620810D0, 1.8325949D0/
C     PROANG(1) = 122.422 * 0.0174532925
C     PROANG(2) = 112.419 * 0.0174532925
C     PROANG(3) = 105.000 * 0.0174532925
      DATA  LBG /3,8,5/
      DATA  LEN /10,10,7/
      DATA  NREG /36/
      DATA  NEND /20/
      END
      SUBROUTINE FMPRIN
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE READS OUTPUT FROM PREIN
C
      EXTERNAL   ABLOCK
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (CNTL)
C CNTL
C
       COMMON /PRINT/IPRNT
C
C   IPRNT :  PRINT OPTION, 0 PART OUTPUT, 1 ALL OUTPUT
C
CMSP  INCLUDE (SSPAIR)
      COMMON/SSPAIR/KSSPER(6,2,MAXSS),JSS(3,MAXSS),KSS(MAXSS2),
     >              LSS(MAXSS2),NPAIR(MAXSS,2)
C
C  KSSPER:    THE ATOM NUMBERS WHICH BELONG TO THE DISULPHITE BONDS
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &              NV(MAXRES)
C     COMMON/CYS001/ KCYS,NCYS
      COMMON/CYS001/ KCYS
C     COMMON/GEN100/ INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/ NPRE(MXRS1)
C     COMMON/IOUNIT/ JREAD
C     COMMON/PRINT/  IPRNT
C     COMMON/PREPAR/ LNUM,JMLAST,KMLAST,LNUMS,LEN,NUMATM
      COMMON/PREPAR/ LNUM,JMLAST,KMLAST,LNUMS,LEN
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
C     DIMENSION  VAR(MAXVAR)
      CHARACTER*4  AANAME(36)
      DATA  AANAME /'ALA','ASP','CYS','GLU','PHE','GLY',
     &  'HIS','ILE','LYS','LEU','MET','ASN','PRO','GLN','ARG','SER',
     &  'THR','VAL','TRP','TYR','CYS','HPR','NLE','ORN','ORN+','HIS2',
     &  'HIS+','LYS+','ARG+','ASB','ASP-','GLU-',
     &  'PROU','PROF','HPRU','HPRF'/
C     CHARACTER  TITLE*80
C
      IN21 = 21
      READ(IN21,905)  TITLE
C     WRITE(IOUT06,913)  TITLE
C     READ(IN21,110)  INUMRS,NUMCON,IPRNT,I1,I2
      READ(IN21,110)  NUMRES,NUMCON,IPRNT,I1,I2
C       IF (INUMRS.GT.MAXRES) THEN
C       IF (NUMRES.GT.MAXRES) THEN
C         WRITE(6,800)  MAXRES,INUMRS
C         WRITE(6,800)  MAXRES,NUMRES
C         STOP
C       ENDIF
C     READ(IN21,904)  (LIST(I),I=2,INUMRS-1)
      READ(IN21,904)  (LIST(I),I=2,NUMRES-1)
C     READ(IN21,904)   LIST(1),LIST(INUMRS)
      READ(IN21,904)   LIST(1),LIST(NUMRES)
C     WRITE(IOUT06,903)
C     WRITE(IOUT06,916)  (LIST(I),I=2,INUMRS-1)
C     WRITE(IOUT06,916)  (LIST(I),I=2,NUMRES-1)
C     WRITE(IOUT06,914)
C     WRITE(IOUT06,916)  LIST(1),LIST(INUMRS)
C     WRITE(IOUT06,916)  LIST(1),LIST(NUMRES)
C     WRITE(IOUT06,914)
C     WRITE(IOUT06,915)  (AANAME(LIST(I)),I=2,INUMRS-1)
C     WRITE(IOUT06,915)  (AANAME(LIST(I)),I=2,NUMRES-1)
C
C     CALL  PARAM(SUM)
C     NUMATM = NPRE(INUMRS+1)
C     NUMATM = NPRE(NUMRES+1)
C       IF (NUMATM.GT.MAXATM) THEN
C         WRITE(6,810)  MAXATM,NUMATM
C         STOP
C       ENDIF
C     CALL  PARAMT
C     WRITE(IOUT06,120)  SUM*0.07761505
C
      CALL  RDCYS
C       IF (NCYS.GT.MAXSS)  THEN
C       IF (NSS.GT.MAXSS)   THEN
C         WRITE(6,820)  MAXSS,NCYS
C         WRITE(6,820)  MAXSS,NSS
C         STOP
C       ENDIF
C     IF (NCYS.EQ.0)  GOTO  3
C     IF (NSS.EQ.0)   GOTO  3
C     WRITE(IOUT06,130)
C     WRITE(IOUT06,140)  ((NPAIR(K,J),J=1,2),K=1,NCYS)
C     WRITE(IOUT06,140)  ((NPAIR(K,J),J=1,2),K=1,NSS)
C
C  3  RAD = 0.01745329
      RAD = 0.01745329
C     READ(IN21,150)  ((ANGRAD(J,I),J=1,10),I=1,INUMRS)
      READ(IN21,150)  ((ANGRAD(J,I),J=1,10),I=1,NUMRES)
C     DO  4  I = 1, INUMRS
CDIR@ IVDEP
      DO I = 1, 10*NUMRES
         ANGRAD(I,1) = ANGRAD(I,1)*RAD
      END DO
C
C     JMLAST=0
C     LNUMS = 0
C
C     CALL  SPECV
C     CALL  INITOR(VAR)
C     CALL  INITOR
C       IF (NUMVAR.GT.MAXVAR) THEN
C         WRITE(6,830)  MAXVAR,NUMVAR
C         STOP
C       ENDIF
C     LEN = 1
C     CALL  ENERGY (VAR)
C     CALL  ENERGY
C     LNUM = 4
C     CALL  PREP
CC+++++++
C     CALL  RUN1 (LEN)
C     CALL  OUT1
CC+++++++
C     CALL  OUTMAX
      RETURN
  100 FORMAT('1',20X,'***   PRECEPP OUTPUT   ***')
  110 FORMAT(16I5)
  120 FORMAT(/,' NET CHARGE ON PEPTIDE =',F8.3,
     & ' ELECTRONIC CHARGE UNITS')
  130 FORMAT(/,' DISULFIDE BONDS CONNECT THE FOLLOWING RESIDUE PAIRS')
  140 FORMAT((/,4(8X,I3,1X,I3)))
  150 FORMAT(10F8.3)
  903 FORMAT('0***  AMINO ACID SEQUENCE  ***'/)
  904 FORMAT(20I3)
  905 FORMAT(A80)
  913 FORMAT('0    PROTEIN:  ',A80)
  914 FORMAT(' ')
  915 FORMAT(' ',20A4)
  916 FORMAT(6X,20I3)
  800 FORMAT('0 ***ERROR MESSAGE FROM MAIN.'/
     &  '    * MAXRES.LT.INUMRS *    CORRECT MAXRES IN PARAMETER'/
     &  '        MAXRES=',I4,',   INUMRS=',I4)
  810 FORMAT('0 ***ERROR MESSAGE FROM MAIN.'/
     &  '    * MAXATM.LT.NUMATM *    CORRECT MAXATM IN PARAMETER'/
     &  '        MAXATM=',I5,',   NUMATM=',I5)
  820 FORMAT('0 ***ERROR MESSAGE FROM MAIN.'/
     &  '    * MAXSS.LT.NCYS *    CORRECT MAXSS IN PARAMETER'/
     &  '        MAXSS=',I3,',   NCYS=',I3)
  830 FORMAT('0 ***ERROR MESSAGE FROM MAIN.'/
     &  '    * MAXVAR.LT.NUMVAR *    CORRECT MAXVAR IN PARAMETER'/
     &  '        MAXVAR=',I4,',   NUMVAR=',I4)
      END
      SUBROUTINE DMM(A,B,C)
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE MULTIPLIES MATRIX A BY MATRIX B, AND RETURNS THE
C PRODUCT AS MATRIX C (ALL ARE 3X3 MATRICES).
C
      DOUBLE PRECISION A,B,C
      DIMENSION A(3,3),B(3,3),C(3,3)
      DO J = 1, 3
CDIR@    IVDEP
         DO I = 1, 3
            C(I,J) = A(I,1)*B(1,J) + A(I,2)*B(2,J) + A(I,3)*B(3,J)
         END DO
      END DO
      RETURN
      END
      FUNCTION DST(A,B)
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS FUNCTION SUBPROGRAM COMPUTES THE DISTANCE BETWEEN TWO ATOMS,
C REPRESENTED BY COORDINATE ARRAYS A AND B.
C
      DIMENSION A(3),B(3)
      T = A(1) - B(1)
      X = A(2) - B(2)
      Y = A(3) - B(3)
      DST = DSQRT(T*T+X*X+Y*Y)
      RETURN
      END
      SUBROUTINE GENER
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE BACKBONE ATOMS OF
C THE POLYPEPTIDE, EXCEPT FOR PROLINE AND HYDROXYPROLINE RESIDUES.  IT
C CALLS GNAMIN AND GNCARB TO GENERATE END GROUP COORDINATES, GNSIDE FOR
C SIDECHAIN COORDINATES, AND GNPRO FOR PROLINE-TYPE RESIDUES.
C
      DOUBLE PRECISION DABS,DCOS,DSIN
      DOUBLE PRECISION A1(9),B1(9),MATA(3,3),MATB(3,3),MATC(9)
      DOUBLE PRECISION ROT(9),A(9)
      DOUBLE PRECISION CSTH1,SNTH1,CSANG,SNANG,IDENT(9)
      DOUBLE PRECISION CST,SNT,CDELTA,SDELTA,PHI,PSI,OMEGA,CHI,CIS(3)
      DOUBLE PRECISION ANG,PROANG(3)
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (CNTL)
C CNTL
C
       COMMON /PRINT/IPRNT
C
C   IPRNT :  PRINT OPTION, 0 PART OUTPUT, 1 ALL OUTPUT
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN001/XOORD(3,26,36),SNTH2(36),CSTH2(36),SDEL(36),
     1   CDEL(36)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NCHI(36),NDPT1(7,36),
     1  NDPT2(7,36),NUM(7,36)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GEN005/IDENT
      COMMON/GNROU/MATA,MATB,ROT,K
C     COMMON/IOUNIT/JREAD
C     COMMON/PRINT/IPRNT
C     CHARACTER*4 ALPH,EALPHA
      CHARACTER*4 EALPHA
      DIMENSION TEMP(3),TEMP2(3)
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA PI/ 3.141593 /
      DATA ERROR / .0001 /
C
C IFEVEN MUST BE RESET EVERY TIME A MOLECULE IS GENERATED.
C
      IFEVEN = 1
      CALL GNAMIN
C     LASTFL = INUMRS - 1
      LASTFL = NUMRES - 1
CDIR@ IVDEP
      DO 110 I=1,9
      A1(I) = IDENT(I)
  110 CONTINUE
      DO 380 N=2,LASTFL
      IF (N.EQ.LASTFL) GO TO 120
      SNTH1 = FLOAT(IFEVEN)*0.857167
      CSTH1 = 0.515038
      LNEXT=LIST(N+1)
      LNEXT=IABS(LNEXT)
      KNEXT=KNDRES(LNEXT)
      KNEXT = IABS(KNEXT)
      IF (KNEXT.NE.13.AND.KNEXT.NE.22) GO TO 120
      IF (COS(ANGRAD(3,N)).LE.0.0) GO TO 120
      SNTH1 = FLOAT(IFEVEN)*0.809017
      CSTH1 = 0.587785
      IF (IPRNT.EQ.1) WRITE(IOUT06,400) N
  120 LISTN = LIST(N)
      NT = IABS(LISTN)
      KINDN = KNDRES(NT)
      KINDN = IABS(KINDN)
C
C SIGN INDICATES WHETHER THE D OR L CONFIGURATION IS REQUESTED.
C L IS POSITIVE; D IS NEGATIVE
C
      SIGN = 1.0
      IF (NT .NE. LISTN) SIGN = -1.0
C
C PHI, PSI, AND OMEGA ARE THE FIRST THREE ANGLES IN THE LIST FOR
C EACH RESIDUE.  THE REMAINING 7 ANGLES ARE POSSIBLE CHI'S.
C
      PHI = ANGRAD(1,N) - PI
      PSI = ANGRAD(2,N) - PI
      OMEGA = ANGRAD(3,N) - PI
C
C PROLINE RESIDUES WILL BE HANDLED IN A SPECIAL SUBROUTINE
C
      IF (KINDN.NE.13.AND.KINDN.NE.22) GO TO 140
      CALL GNPRO
      IF (KINDN.EQ.13) GO TO 250
CDIR@ IVDEP
      DO 130 L=1,9
      ROT(L)=A1(L)
  130 CONTINUE
      GO TO 240
C
C IF RESIDUE IS ISOLEUCINE, CHI2 AND CHI3 MUST BE EXCHANGED
C
  140 IF (KINDN.NE.8) GO TO 150
      T = ANGRAD(5,N)
      ANGRAD(5,N) = ANGRAD(6,N)
      ANGRAD(6,N) = T
C
C IF THIS IS THE SECOND RESIDUE IN THE LIST (THE FIRST RESIDUE BEING AN
C END GROUP), DO NOT ATTACH THE H AND C-ALPHA TO THE INITIAL N. THESE
C ATOMS WERE ATTACHED WITH THE END GROUP.
C
  150 IF (N.EQ.2) GO TO 170
C
C ATTACH THE H AND C-ALPHA TO N.
C
      DO 160 J=2,3
      CALL TRANSF(MATA,J,1)
  160 CONTINUE
C
  170 IF (DABS(PHI) .GT. ERROR) GO TO 190
CDIR@ IVDEP
      DO 180 L=1,9
      B1(L) = A1(L)
  180 CONTINUE
      GO TO 210
C
C IF PHI DOES NOT EQUAL ZERO, MODIFY THE ROTATION MATRIX.
C
  190 CSANG=DCOS(PHI)
      SNANG = DSIN(PHI)
CDIR@ IVDEP
      DO 200 J=1,3
      MATB(J,1) = MATA(J,1)
      MATB(J,2) = MATA(J,2)*CSANG + MATA(J,3)*SNANG
  200 MATB(J,3) = - MATA(J,2)*SNANG + MATA(J,3)*CSANG
C
C ATTACH THE H, C-BETA, AND C' TO C-ALPHA.
C
  210 DO 220 J=4,6
      CALL TRANSF(MATB,J,3)
  220 CONTINUE
C
C THE FOLLOWING SECTION WILL ATTACH THE SIDECHAIN COORDINATES TO C-BETA.
C
      K=8
      NX = NCHI(NT)
C
C IF THERE ARE NO SIDECHAIN ROTATIONS (IF THE RESIDUE IS PROLINE OR
C GLYCINE), THE NEXT SECTION IS BYPASSED.
C
      IF (NX.EQ.0) GO TO 250
CDIR@ IVDEP
      DO 230 L=1,9
      ROT(L) = B1(L)
  230 CONTINUE
  240 CALL GNSIDE
C
C IF IFEVEN EQUALS 1, THEN THE SIGNS OF SNTH2 AND SDEL (AS STORED FOR
C THE RESIDUE) MUST BE REVERSED.
C
  250 SNT = -FLOAT(IFEVEN)*SNTH2(NT)
      SDELTA = -FLOAT(IFEVEN)*SDEL(NT)
      CST = CSTH2(NT)
      CDELTA = CDEL(NT)
      IF(DABS(PSI).GT.ERROR) GO TO 270
CDIR@ IVDEP
      DO 260 L=1,9
      A1(L) = B1(L)
  260 CONTINUE
      GO TO 280
C
C IF PSI .NE.0.0, CALCULATE THE ROTATION MATRIX.
C
  270 CALL MATRIX(CST,SNT,PSI,MATC)
C
C MULTIPLY THIS BY THE PREVIOUS BACKBONE ROTATIONS.
C
      CALL DMM(MATB,MATC,MATA)
C
C IF THIS IS THE LAST RESIDUE, THEN SKIP THE OMEGA ROTATIONS. PUT THE
C CARBOXYL END GROUP ON.
C
  280 IF (N.NE.LASTFL) GO TO 300
C
CDIR@ IVDEP
      DO 290 L=1,9
      B1(L) = A1(L)
  290 CONTINUE
      CSANG = CST
      SNANG = SNT
      GO TO 360
C
C ATTACH THE O TO THE C'.
C
  300 CALL TRANSF(MATA,7,6)
C
C POSITION THE N FOR THE NEXT RESIDUE.
C
      CALL TRANSF(MATA,K,6)
      IF (KNEXT.NE.13.AND.KNEXT.NE.22) GO TO 320
      NA = NPRE(N+1) + 1
      NB = NPRE(N) + 6
C
C THIS SECTION LENGTHENS THE AMIDE BOND TO 1.36 ANGSTROMS WHEN THE
C NEXT RESIDUE IS A PROLINE-TYPE.
C
      RAN = .035
      RAB = DST(REFCRD(1,NA),REFCRD(1,NB))
CDIR@ IVDEP
      DO 305 I = 1, 3
         TEMP(I) = REFCRD(I,NA) + RAN*(REFCRD(I,NA)-REFCRD(I,NB))/RAB
         REFCRD(I,NA) = TEMP(I)
  305 CONTINUE
  320 IF(DABS(OMEGA).GT.ERROR) GO TO 340
CDIR@ IVDEP
      DO 330 L=1,9
      B1(L) = A1(L)
  330 CONTINUE
      GO TO 350
C
C IF OMEGA IS NOT EQUAL TO ZERO, CALCULATE THE ROTATION MATRIX.
C
  340 CALL MATRIX(CDELTA,SDELTA,OMEGA,MATC)
C
C MULTIPLY BY THE PREVIOUS TRANSFORMATION MATRIX.
C
      CALL DMM(MATA,MATC,MATB)
C
C CSANG IS THE COSINE OF DELTA (DIFFERENCE BETWEEN THETA 2 AND THETA 3)
C PLUS THETA 1.
C
  350 CSANG=CDELTA*CSTH1-SDELTA*SNTH1
      SNANG = SDELTA*CSTH1 + CDELTA*SNTH1
C
C MULTIPLY IFEVEN AND SNTH1 BY -1 SO THAT THE COORDINATES OF THE NEXT
C RESIDUE WILL BE FLIPPED ABOUT THE X-AXIS AND THE EXTENDED
C CONFORMATION WILL RESULT.
C
      IFEVEN = - IFEVEN
      SNTH1 = - SNTH1
C
C ADJUST THE MATRIX TO LINE UP THE COORDINATES OF THE NEXT RESIDUE IN
C THE ORIGINAL COORDINATE SYSTEM.
C
CDIR@ IVDEP
  360 DO 370 J=1,3
      MATA(J,1) = MATB(J,1)*CSANG + MATB(J,2)*SNANG
      MATA(J,2) = - MATB(J,1)*SNANG + MATB(J,2)*CSANG
      MATA(J,3) = MATB(J,3)
  370 CONTINUE
      IF(KINDN.NE.8) GO TO 380
      T = ANGRAD(5,N)
      ANGRAD(5,N) = ANGRAD(6,N)
      ANGRAD(6,N) = T
  380 CONTINUE
C
C ATTACH THE CARBOXYL END GROUP.
C
      CALL GNCARB
C
C GENERATION IS COMPLETE.
C
      RETURN
  400 FORMAT (//9H RESIDUE ,I3,46H  HAS CIS OMEGA AND NEXT RESIDUE IS A
     1PROLINE./66H PROLINE IS ATTACHED SO C-N-CA=126 DEGREES AND C-N-CD=
     2121 DEGREES.)
      END
      SUBROUTINE GNAMIN
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE AMINO END GROUP.
C
      DOUBLE PRECISION A1(9),B1(9),MATA(3,3),MATB(3,3),MATC(9)
      DOUBLE PRECISION CST,SNT,CDELTA,SDELTA,PHI,PSI,OMEGA,CHI,CIS(3)
      DOUBLE PRECISION ANG,A5(3,3),ROT(9),DABS
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (CNTL)
C CNTL
C
       COMMON /PRINT/IPRNT
C
C   IPRNT :  PRINT OPTION, 0 PART OUTPUT, 1 ALL OUTPUT
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GNROU/MATA,MATB,ROT,K
C     COMMON/IOUNIT/JREAD
C     COMMON/PRINT/IPRNT
C     CHARACTER*4 ALPH,EALPHA
      CHARACTER*4 EALPHA
      DIMENSION TEMP(3),TEMP2(3)
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      REAL R1X
      DATA PI/ 3.141593 /
      DATA ERROR / .0001 /
      DATA A5/ .99619D0,-.08716D0,.0D0,.08716D0,.99619D0,.0D0,.0D0,.0D0,
     1 1.0D0/
C
      LAMIN = LIST(1)
      KAMIN = KNDEND(LAMIN)
      KAMIN = IABS(KAMIN)
      LNEXT = LIST(2)
      LNEXT = IABS(LNEXT)
      KNEXT = KNDRES(LNEXT)
      KNEXT = IABS(KNEXT)
      NATOM=NDATOM(LAMIN)
      NX = NBOND(LAMIN)
C
C STORE THE COORDINATES FOR THE AMINO END GROUP.
C
CDIR@ IVDEP
      DO M = 1, 3*NATOM
         REFCRD(M,1) = ENOORD(M,1,LAMIN)
      END DO
C
C THIS SECTION IS FOR A PROLINE-TYPE FIRST FULL RESIDUE.  FOR ALL END
C GROUPS EXCEPT THE NULL END GROUP 1) LENGTHEN THE C'-N BOND TO 1.36
C ANGSTROMS AND 2) IN THE CASE OF CIS-PROLINE ROTATE THE END GROUP
C 5 DEGREES IN THE X,Y PLANE.
C
      IF (KNEXT.NE.13.AND.KNEXT.NE.22.OR.KAMIN.EQ.10) GO TO 140
      NA = NPRE(2)
      NB = NPRE(2) + 1
C
      RAN = .035
      RAB = DST(REFCRD(1,NA),REFCRD(1,NB))
CDIR@ IVDEP
      DO 115 I = 1, 3
         TEMP(I) = REFCRD(I,NA) + RAN*(REFCRD(I,NA)-REFCRD(I,NB))/RAB
         TEMP2(I) = TEMP(I) - REFCRD(I,NA)
         REFCRD(I,NA) = TEMP(I)
  115 CONTINUE
      NN = NATOM-4
      DO I = 1, 3
CDIR@    IVDEP
         DO J = 1, NN
            REFCRD(I,J) = TEMP2(I) + REFCRD(I,J)
         END DO
      END DO
C
      IF (COS(ANGRAD(NX,1)).LE.0.0) GO TO 140
      N3 = NATOM - 3
      DO 134 M=1,N3
      TEMP(1) = 0.0
      TEMP(2) = 0.0
      TEMP(3) = 0.0
CDIR@ IVDEP
      DO L = 1, 3
         R1X = REFCRD(L,M)
         TEMP(1) = TEMP(1) + A5(1,L)*R1X
         TEMP(2) = TEMP(2) + A5(2,L)*R1X
         TEMP(3) = TEMP(3) + A5(3,L)*R1X
      END DO
CDIR@ IVDEP
      DO 134 JJ=1,3
      REFCRD(JJ,M)=TEMP(JJ)
  134 CONTINUE
      IF (IPRNT.EQ.1) WRITE (IOUT06,240)
  140 CONTINUE
C
C IF THERE ARE NO ROTATABLE BONDS IN THE END GROUP, RETURN.
C
      IF (NX.EQ.0) RETURN
C
C THE REMAINDER OF THE SUBROUTINE PERFORMS ANY SPECIFIED ROTATIONS.
C
      ME=0
      DO 210 IBOND=1,NX
      ANG = -ANGRAD(IBOND,1) - PI
      IF(DABS(ANG).LE.ERROR) GO TO 210
      ML=1
      MM=NNDPT2(IBOND,LAMIN)
      IF (MM .EQ. ME) ML = MB + 1
      ME = MM
      MB=NNDPT1(IBOND,LAMIN)
C
C THIS SECTION CALCULATES THE DIRECTION COSINES OF THE BOND.
C
      D = 0.0
CDIR@ IVDEP
      DO 150 L = 1,3
      CIS(L) = REFCRD(L,ME) - REFCRD(L,MB)
      D = D + CIS(L)*CIS(L)
  150 CONTINUE
      D = 1.0/DSQRT(D)
CDIR@ IVDEP
      DO 160 L = 1,3
      CIS(L) = CIS(L)*D
  160 CONTINUE
C
      CALL ROTSET(CIS,ANG,A1)
      MN = MB - 1
      DO 200 J=ML,MN
CDIR@ IVDEP
      DO 170 JJ=1,3
      REFCRD(JJ,J)=REFCRD(JJ,J)-REFCRD(JJ,MB)
  170 CONTINUE
CDIR@ IVDEP
      DO 180 JJ=1,3
      TEMP(JJ)=MATA(JJ,1)*REFCRD(1,J)+MATA(JJ,2)*REFCRD(2,J)+
     1 MATA(JJ,3)*REFCRD(3,J)
  180 CONTINUE
CDIR@ IVDEP
      DO 190 JJ=1,3
      REFCRD(JJ,J)=TEMP(JJ)+REFCRD(JJ,MB)
  190 CONTINUE
  200 CONTINUE
  210 CONTINUE
      RETURN
  240 FORMAT (//65H FIRST FULL RESIDUE IS CIS-PROLINE.  END GROUP MOVED
     15 DEGREES SO/71H THAT C-N-CA=126 DEGREES AND C-N-CD=121 DEGREES IN
     2STEAD OF THE REVERSE.//)
      END
      SUBROUTINE GNCARB
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE CARBOXYL END GROUP.
C
      DOUBLE PRECISION A1(9),B1(9),MATA(3,3),MATB(3,3),MATC(9)
      DOUBLE PRECISION CST,SNT,CDELTA,SDELTA,PHI,PSI,OMEGA,CHI,CIS(3)
      DOUBLE PRECISION ANG,DABS,ROT(9)
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GEN007/LBG(3),LEN(3)
      COMMON/GNROU/MATA,MATB,ROT,K
C     COMMON/IOUNIT/JREAD
      DIMENSION TEMP(3)
C     CHARACTER*4 ALPH,EALPHA
      CHARACTER*4 EALPHA
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA ERROR/ .0001 /
      DATA PI/ 3.141593 /
C
C     N=INUMRS
      N=NUMRES
      NT = LIST(N)
      KCARB = KNDEND(NT)
      KCARB = IABS(KCARB)
      SIGN = 1.0
C
C ATTACH THE O AND THE FIRST ATOM OF THE END GROUP TO THE C'.
C
      NL = 3
      IF (KCARB.EQ.20) NL = 2
      DO 110 J=2,NL
      CALL TRANSF(MATA,J,1)
  110 CONTINUE
      NL =  NDATOM(NT) + 1
      IF (NL .LT. 4) RETURN
C
C ADD ON THE REMAINING ATOMS WITHOUT ANY BOND ROTATIONS.
C
      DO 120 J=4,NL
      CALL TRANSF(MATA,J,3)
  120 CONTINUE
      NX=NBOND(NT)
C     NATOM=NPRE(INUMRS)
      NATOM=NPRE(NUMRES)
C
C IF THERE ARE NO ROTATABLE BONDS IN THE END GROUP, RETURN.
C
      IF(NX.EQ.0)RETURN
C
C THE REMAINDER OF THE SUBROUTINE PERFORMS ANY SPECIFIED ROTATIONS.
C
      DO 190 IBOND=1,NX
      IF (IBOND.NE.1) GO TO 124
C     ANG=ANGRAD(3,INUMRS-1) - PI
      ANG=ANGRAD(3,NUMRES-1) - PI
      IF (KCARB.NE.16) GO TO 125
C     ANGL=ANGRAD(3,INUMRS-1)
      ANGL=ANGRAD(3,NUMRES-1)
      IF (COS(ANGL).LT.(-0.0001)) GO TO 125
      ANGL=57.29578*ANGL
      WRITE (IOUT06,200) ANGL
      STOP
C 124 ANG=ANGRAD(IBOND-1,INUMRS)-PI
  124 ANG=ANGRAD(IBOND-1,NUMRES)-PI
  125 IF (DABS(ANG).LT.ERROR) GO TO 190
C
C THE FIRST BOND IS DEFINED BY THE 6TH ATOM IN THE LAST FULL RESIDUE
C (C') AND THE FIRST ATOM IN THE END GROUP.  ALL OTHER  BONDS ARE
C DEFINED BY THE STORED NNDPT1 AND NNDPT2.
C
      MB = NNDPT1(IBOND,NT) + NATOM - 1
C     IF (IBOND.EQ.1)  MB=NPRE(INUMRS-1)+6
      IF (IBOND.EQ.1)  MB=NPRE(NUMRES-1)+6
      ME = NNDPT2(IBOND,NT) + NATOM - 1
      IF (IBOND.EQ.1) ME=NATOM+1
C
C THIS SECTION CALCULATES THE DIRECTION COSINES OF THE BOND.
C
      D = 0.0
CDIR@ IVDEP
      DO 130 L = 1,3
      CIS(L) = REFCRD(L,ME) - REFCRD(L,MB)
      D = D + CIS(L)*CIS(L)
  130 CONTINUE
      D = 1.0/DSQRT(D)
CDIR@ IVDEP
      DO 140 L = 1,3
      CIS(L) = CIS(L)*D
  140 CONTINUE
C
      CALL ROTSET(CIS,ANG,A1)
C
C SPECIAL INDICES LBG AND LEN ARE NEEDED TO DEFINE THE ATOMS AFFECTED BY
C THE BOND ROTATION IN THE CASE OF N,N-DIMETHYLAMIDE.
C
      LL = ME+1
      IF (KCARB.EQ.16) LL = LBG(IBOND)+NATOM-1
C     MN = NPRE(INUMRS+1)
      MN = NPRE(NUMRES+1)
      IF (KCARB.EQ.16) MN = NATOM+LEN(IBOND)-1
      DO 180 J = LL,MN
CDIR@ IVDEP
      DO 150 JJ=1,3
      REFCRD(JJ,J)=REFCRD(JJ,J)-REFCRD(JJ,ME)
  150 CONTINUE
CDIR@ IVDEP
      DO 160 JJ=1,3
      TEMP(JJ)=MATA(JJ,1)*REFCRD(1,J)+MATA(JJ,2)*REFCRD(2,J)+
     1 MATA(JJ,3)*REFCRD(3,J)
  160 CONTINUE
CDIR@ IVDEP
      DO 170 JJ=1,3
      REFCRD(JJ,J)=TEMP(JJ)+REFCRD(JJ,ME)
  170 CONTINUE
  180 CONTINUE
  190 CONTINUE
      RETURN
  200 FORMAT (/1X,54HFOR DIMETHYL AMIDE, THE OMEGA ANGLE MUST BE TRANS,
     1NOT,F8.3,9H DEGREES,/1X,55HBECAUSE THE TWO METHYLS HAVE NON-EQUIVA
     2LENT GEOMETRIES.)
      END
      SUBROUTINE GNPRO
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE PROLINE AND
C HYDROXYPROLINE RESIDUES, EXCEPT FOR THE CARBONYL O, AND THE HD1 OF
C HYDROXYPROLINE.
C
      DOUBLE PRECISION A1(9),B1(9),MATA(3,3),MATB(3,3),MATC(9)
      DOUBLE PRECISION ROT(9),A(9)
      DOUBLE PRECISION CSTH1,SNTH1,CSANG,SNANG,IDENT(9)
      DOUBLE PRECISION CST,SNT,CDELTA,SDELTA,PHI,PSI,OMEGA,CHI,CIS(3)
      DOUBLE PRECISION ANG,PROANG(3)
      DOUBLE PRECISION DABS,DCOS,DSIN
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NCHI(36),NDPT1(7,36),
     1   NDPT2(7,36),NUM(7,36)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GEN006/PROANG
      COMMON/GEN008/NGEOM(36)
      COMMON/GNROU/MATA,MATB,ROT,K
C     CHARACTER*4 ALPH
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA PI/ 3.141593 /
C
C     PROANG(1) = 122.422*.0174532925
C     PROANG(2) = 112.419*.0174532925
C     PROANG(3) = 105.000*.0174532925
C
      NBT=NGEOM(NT)
      PHI=PROANG(NBT)
      ANGRAD(1,N)=PHI-PI
C
C ATTACH THE C-DELTA AND C-ALPHA TO N.
C
      DO 110 J=2,3
      CALL TRANSF(MATA,J,1)
  110 CONTINUE
C
C PHI DOES NOT EQUAL ZERO, SO MODIFY THE ROTATION MATRIX.
C
      CSANG=DCOS(PHI)
      SNANG = DSIN(PHI)
CDIR@ IVDEP
      DO 120 J=1,3
      MATB(J,1) = MATA(J,1)
      MATB(J,2) = MATA(J,2)*CSANG + MATA(J,3)*SNANG
      MATB(J,3) = - MATA(J,2)*SNANG + MATA(J,3)*CSANG
  120 CONTINUE
C
C ATTACH THE C' TO C-ALPHA.
C
      CALL TRANSF(MATB,6,3)
C
C ATTACH THE REMAINING ATOMS TO THE NITROGEN ATOM, EXCEPT FOR THE
C CARBONYL O, AND THE HD1 OF HYDROXYPROLINE.
C
      DO 130 J=4,14
      IF (J.EQ.6.OR.J.EQ.7) GO TO 130
      CALL TRANSF(MATA,J,1)
  130 CONTINUE
      K=15
      RETURN
      END
      SUBROUTINE GNSIDE
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE SIDECHAIN ATOMS.
C
      DOUBLE PRECISION A1(9),B1(9),MATA(3,3),MATB(3,3),MATC(9)
      DOUBLE PRECISION ROT(9),A(9),DABS
      DOUBLE PRECISION CST,SNT,CDELTA,SDELTA,PHI,PSI,OMEGA,CHI,CIS(3)
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NCHI(36),NDPT1(7,36),
     1   NDPT2(7,36),NUM(7,36)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GNROU/MATA,MATB,ROT,K
C     CHARACTER*4 ALPH
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA PI/ 3.141593 /
      DATA ERROR / .0001 /
C
      NX = NCHI(NT)
      DO 160 IBOND=1,NX
C
C MB IS THE BEGINNING OF THE BOND, LE IS THE END, AND MN INDICATES THE
C LAST ATOM TO BE AFFECTED BY THE BOND ROTATION.
C
      MB = NDPT1(IBOND,NT)
      LE = NDPT2(IBOND,NT)
      MN = NUM(IBOND,NT) + K - 1
      CHI = ANGRAD(IBOND + 3,N) - PI
C
C IF NO CHI ROTATION IS CALLED FOR, ATTACH THE SIDECHAIN ATOMS.
C
      IF (DABS(CHI) .GT. ERROR) GO TO 120
      DO 110 L=K,MN
      CALL TRANSF(ROT,L,LE)
  110 CONTINUE
      GO TO 160
C
C STORE THE DIRECTION COSINES FOR THIS BOND IN CIS.
C
CDIR@ IVDEP
  120 DO 130 I=1,3
      CIS(I)=CHIANG(I,IBOND,NT)
  130 CONTINUE
C
C IF IFEVEN IS -1, THEN THE COORDINATES AS STORED WILL BE FLIPPED 180
C DEGREES ABOUT THE C'-N BOND WHEN THEY ARE ATTACHED.  THEREFORE THE
C DIRECTION COSINES OF THE BOND MUST ALSO BE ADJUSTED.
C
      CIS(2)=FLOAT(IFEVEN)*CIS(2)
      CIS(3)=FLOAT(IFEVEN)*CIS(3)
C
C ADJUST CIS(3) TO ACCOUNT FOR THE DIRECTION COSINE CHANGES IN THE
C SIDECHAIN WHEN GOING FROM L TO D CONFIGURATION.
C
      CIS(3) = CIS(3)*SIGN
C
C CALCULATE THE MATRIX FOR ROTATING ABOUT THE BOND.
C
      CALL ROTSET(CIS,CHI,A)
C
C UPDATE THE PREVIOUS ROTATION MATRIX TO INCLUDE THE LATEST ROTATION.
C
      CALL DMM(ROT,A,A1)
C
C CONNECT AND ROTATE THE ATOMS ATTACHED TO THIS BOND.
C
      DO 140 L=K,MN
      CALL TRANSF(A1,L,LE)
  140 CONTINUE
C
C MM IS THE BEGINNING OF THE NEXT BOND. IF MM EQUALS MB, THEN A BRANCH
C EXISTS AT THIS POINT IN THE SIDECHAIN. DO NOT UPDATE THE PREVIOUS
C ROTATION MATRIX TO INCLUDE THE LATEST ROTATION.
C
      IF(IBOND.EQ.NX) GO TO 160
      MM=NDPT1(IBOND+1,NT)
      IF(MM.EQ.MB) GO TO 160
CDIR@ IVDEP
      DO 150 L=1,9
      ROT(L) = A1(L)
  150 CONTINUE
C
C   UPDATE K TO INDICATE THE NEXT ATOM TO BE ATTACHED.
C
  160 K = MN + 1
C
C   THE SIDECHAIN GENERATION IS COMPLETE.
C
      RETURN
      END
      SUBROUTINE INPUTT
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE READS THE STANDARD RESIDUE DATA AND STORES THEM IN
C APPROPRIATE ARRAYS.
C
CMSP  INCLUDE (UNITNUMS)
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
      COMMON/CHECK/KNDRES(36),KNDEND(20)
      COMMON/GEN000/CHG(26,36),ALPHA(26,36),TITLE2(4,56),LTYPE(26,36)
      COMMON/GEN001/XOORD(3,26,36),SNTH2(36),CSTH2(36),SDEL(36),
     1   CDEL(36)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NCHI(36), NDPT1(7,36),
     1    NDPT2(7,36),NUM(7,36)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GEN008/NGEOM(36)
C     COMMON/IOUNIT/JREAD
      COMMON/PRAM/NREG,NEND,LR(6,20),LRT1(7,36)
      COMMON/PUT14/NSN14(26,36),NFN14(26,36),MSX14(22,20),MFX14(22,20),
     1   MSN14(22,20),MFN14(22,20)
      COMMON/PUT15/NSN15(26,36),MSN15(22,20),MSX15(22,20)
      COMMON/TORP/AR(8,36),NBB(8,36),NSSX(8,36),NANG(8,36),NTOR(36),
     1  AAN(20),NBBN(20),NSSN(20),NANGN(20)
      CHARACTER ADC*1,ADCHAR*4,ALPHA*4
      CHARACTER*4 EALPHA
C
C THE FOLLOWING SECTION IS FOR FULL AMINO ACID RESIDUES:
C
      DO 160 I=1,NREG
      READ(IN23,210) (TITLE2(L,I),L=1,4)
      READ(IN23,220) NATOMS(I),NCHI(I),SNTH2(I),CSTH2(I),SDEL(I),
     1  CDEL(I)
      READ(IN23,280) KNDRES(I),NTOR(I),NGEOM(I)
      IF(NTOR(I).EQ.0)GO TO 120
      NT=NTOR(I)
      DO 110 J=1,NT
      READ(IN23,290) AR(J,I),NBB(J,I),NSSX(J,I),NANG(J,I)
  110 CONTINUE
  120 NUMCHI=NCHI(I)
      IF (NUMCHI .EQ. 0) GO TO 140
      DO 130 J = 1,NUMCHI
      READ(IN23,230) (CHIANG(L,J,I),L=1,3),NDPT1(J,I),NDPT2(J,I),
     1  NUM(J,I),LRT1(J,I)
  130 CONTINUE
  140 NATOM = NATOMS(I)
      READ(IN23,240) ALPHA(1,I),LTYPE(1,I),CHG(1,I),NSN15(1,I)
     1  ,NSN14(1,I),NFN14(1,I)
      DO 150 J = 2,NATOM
      READ(IN23,250) (XOORD(L,J-1,I),L=1,3),ADC,ALPHA(J,I),LTYPE(J,I)
     1  ,CHG(J,I),NSN15(J,I),NSN14(J,I),NFN14(J,I)
       IF(ADC.EQ.'1' .OR. ADC.EQ.'2' .OR. ADC.EQ.'3'
     1               .OR. ADC.EQ.'-' .OR. ADC.EQ.'+') THEN
        ADCHAR=ALPHA(J,I)
        ADCHAR(1:4)=ADCHAR(1:3)//ADC(1:1)
        ALPHA(J,I)=ADCHAR
       END IF
  150 CONTINUE
      READ(IN23,250) (XOORD(L,NATOM,I),L=1,3)
  160 CONTINUE
C
C THE FOLLOWING SECTION IS FOR END GROUPS:
C
      DO 180 I=1,NEND
      IP=I+NREG
      READ(IN23,210) (TITLE2(L,IP),L=1,4)
      READ(IN23,260) NDATOM(I),NBOND(I),(NNDPT1(L,I),NNDPT2(L,I),L=1,6)
      READ(IN23,270) KNDEND(I),AAN(I),NBBN(I),NSSN(I),NANGN(I)
      NB = NBOND(I)
      IF (NB .EQ. 0) NB = 1
      READ(IN23,260) (LR(L,I),L=1,NB)
      ND=NDATOM(I)-3
      IF (ND.LT.7) ND=7
      READ(IN23,260) (MSX15(L,I),L=1,ND)
      READ(IN23,260) (MSX14(L,I),L=1,ND)
      READ(IN23,260) (MFX14(L,I),L=1,ND)
      NATOM = NDATOM(I)
      DO 170 J = 1,NATOM
      READ(IN23,250) (ENOORD(L,J,I),L=1,3),ADC,EALPHA(J,I),
     1  NDTYPE(J,I),ECHG(J,I),MSN15(J,I),MSN14(J,I),
     2  MFN14(J,I)
       IF(ADC.EQ.'1' .OR. ADC.EQ.'2' .OR. ADC.EQ.'3'
     1               .OR. ADC.EQ.'-' .OR. ADC.EQ.'+') THEN
        ADCHAR=EALPHA(J,I)
        ADCHAR(1:4)=ADCHAR(1:3)//ADC(1:1)
        EALPHA(J,I)=ADCHAR
       END IF
  170 CONTINUE
  180 CONTINUE
      RETURN
  210 FORMAT(4A4)
  220 FORMAT(2I5,4F10.7)
  230 FORMAT(5X,3F9.6,5X,3I3,I10)
  240 FORMAT(37X,A3,I2,F10.6,I5,2X,4I3)
  250 FORMAT(3F10.3,6X,A1,A3,I2,F10.6,I5,2X,4I3)
  260 FORMAT(14I5)
  270 FORMAT (I4,F10.4,3I5)
  280 FORMAT(3I4)
  290 FORMAT(F10.4,3I5)
      END
      SUBROUTINE MATRIX(CSANG,SNANG,ROTATE,MATC)
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE IS USED IN THE GENERATION OF COORDINATES WHICH
C DEPEND ON A PSI OR OMEGA DIHEDRAL ANGLE.  IT COMPUTES A ROTATION
C MATRIX MATC FROM 'ROTATE' (THE VALUE OF THE DIHEDRAL ANGLE MINUS PI),
C AND CSANG AND SNANG, THE COSINE AND SINE OF THE ANGLE BETWEEN THE
C ROTATABLE BOND AND THE X-AXIS.
C
      DOUBLE PRECISION CSANG,SNANG,ROTATE,MATC
      DOUBLE PRECISION DCOS,DSIN,CROT,SROT,CS1
      DIMENSION MATC(9)
      CROT=DCOS(ROTATE)
      SROT=DSIN(ROTATE)
      CS1=1.0D0-CROT
      MATC(1)=CROT+CS1*CSANG**2
      MATC(2)=CS1*CSANG*SNANG
      MATC(3)=-SROT*SNANG
      MATC(4)=MATC(2)
      MATC(5)=CROT+CS1*SNANG**2
      MATC(6)=SROT*CSANG
      MATC(7)=-MATC(3)
      MATC(8)=-MATC(6)
      MATC(9)=CROT
      RETURN
      END
      SUBROUTINE OUT2
      IMPLICIT REAL*8(A-H,O-Z)
C
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
C VARANG
C
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (UNITNUMS)
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN000/CHG(26,36),ALPHA(26,36),TITLE2(4,56),LTYPE(26,36)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NCHI(36), NDPT1(7,36),
     1    NDPT2(7,36),NUM(7,36)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
C     COMMON/IOUNIT/JREAD
      COMMON/PRAM/NREG,NEND,LR(6,20),LRT1(7,36)
      COMMON/PUT14/NSN14(26,36),NFN14(26,36),MSX14(22,20),MFX14(22,20),
     1   MSN14(22,20),MFN14(22,20)
      COMMON/PUT15/NSN15(26,36),MSN15(22,20),MSX15(22,20)
C     CHARACTER*4 ALPH,EALPHA,ALPHA
      CHARACTER*4 EALPHA,ALPHA
C     DO 210 I=1,INUMRS
      DO 210 I=1,NUMRES
      LISTI=LIST(I)
      LISTI = IABS(LISTI)
C     IF (I.EQ.1.OR.I.EQ.INUMRS) GO TO 120
      IF (I.EQ.1.OR.I.EQ.NUMRES) GO TO 120
      NS=NCHI(LISTI) + 3
  120 K = NPRE(I)+1
C     IF (I .NE. 1 .AND. I .NE. INUMRS) GO TO 140
      IF (I .NE. 1 .AND. I .NE. NUMRES) GO TO 140
      NS = NBOND(LISTI)
C     IF(I.EQ.INUMRS) NS=NS-1
      IF(I.EQ.NUMRES) NS=NS-1
  140 IF(NS.LE.0) GO TO 190
      WRITE (IOUT22,340) (ANGLES(J,I),J=1,NS)
      GO TO 210
  190 CONTINUE
      WRITE (IOUT22,390)
  210 CONTINUE
      RETURN
C
 310  FORMAT(//1X,46HNO.IN LIST  RESIDUE NAME       DIHEDRAL ANGLES/
     1 1X,10HCHAIN  NO.,16X,10I9)
  320 FORMAT(1X,I5,1X,I3,3X,4A4,1X,10(1X,F8.3))
  330 FORMAT(1X,I5,1X,I3,1X,2HD-,4A4,1X,10(1X,F8.3))
  340 FORMAT(10F8.3)
  350 FORMAT(//12X,18HATOMIC COORDINATES,24X,6HCHARGE/11X,1HX,9X,
     1   1HY,9X,1HZ,7X,4HATOM,4X,4HTYPE,2X,8H(E.C.U.),3X,8HATOM NO.)
  360 FORMAT(5X,3F10.4,5X,A4,4X,I2,F10.3,5X,I5)
  370 FORMAT (/1X,I5,1X,4A4/)
  380 FORMAT (/1X,I5,1X,2HD-,4A4/)
  390 FORMAT (1H )
C
      END
      SUBROUTINE PARAM (SUM)
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE ASSIGNS VALUES TO ARRAYS CONTAINING THE FOLLOWING
C INFORMATION FOR EACH ATOM OF THE SPECIFIED POLYPEPTIDE: ATOM TYPE
C FOR NONBONDED INTERACTIONS (NBTYPE), PARTIAL CHARGE (CHARGE), AND
C ALPHANUMERIC CHARACTERS SPECIFYING THE CHEMICAL TYPE (ALPH).  PARAM
C ALSO INITIALIZES THE ARRAY NPRE (SPECIFYING FOR EACH RESIDUE THE
C NUMBER OF ATOMS PRECEDING IT IN THE POLYPEPTIDE CHAIN), AND COMPUTES
C 'SUM' (THE NET CHARGE ON THE POLYPEPTIDE).
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
C VARANG
C
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (UNITNUMS)
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN000/CHG(26,36),ALPHA(26,36),TITLE2(4,56),LTYPE(26,36)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NCHI(36), NDPT1(7,36),
     1    NDPT2(7,36),NUM(7,36)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
C     COMMON/IOUNIT/JREAD
C     CHARACTER*4 ALPH,EALPHA,ALPHA
      CHARACTER*4 EALPHA,ALPHA
      DIMENSION NZERO(5)
      DATA NZERO/12,16,22,23,24/
C
C ASSIGN PARAMETERS FOR THE AMINO END GROUP FROM THE STANDARD RESIDUE
C DATA, INCLUDING THE FIRST THREE ATOMS OF THE FIRST FULL AMINO ACID
C RESIDUE:
C
      NPRE(1) = 0
      LAMIN=LIST(1)
      KAMIN=KNDEND(LAMIN)
      KAMIN=IABS(KAMIN)
      NA = NDATOM(LAMIN)
      DO 10 I = 1,NA
      ATNAME(I) = EALPHA(I,LAMIN)
      NBTYPE(I) = NDTYPE(I,LAMIN)
 10   CHARGE(I) = ECHG(I,LAMIN)
      NA = NA - 3
C
C BEGINNING OF LOOP FOR EACH FULL AMINO ACID RESIDUE:
C
C20   LASTFL = INUMRS - 1
 20   LASTFL = NUMRES - 1
      DO 35 I = 2,LASTFL
      LISTI=LIST(I)
      LISTI = IABS(LISTI)
      KINDI=KNDRES(LISTI)
      KINDI=IABS(KINDI)
      NATOM = NATOMS(LISTI)
      NPRE(I) = NA
C
C K INDEXES (IN THE STANDARD RESIDUE DATA) THE FIRST ATOM WHOSE
C PARAMETERS WILL BE ASSIGNED TO THE POLYPEPTIDE ARRAYS.  IN GENERAL,
C K IS SET TO 1, INDEXING THE STARTING NITROGEN ATOM.  IF THIS IS THE
C FIRST FULL RESIDUE, K=4, SINCE PARAMETERS FOR THE FIRST 3 ATOMS HAVE
C ALREADY BEEN TAKEN FROM THE END GROUP DATA SET.  EXCEPTIONS ARE
C GLYCINE, PROLINE, HYDROXYPROLINE, AND IONIZED ASPARTIC ACID:
C
      K = 1
      IF (I.NE.2) GO TO 25
      IF (KINDI.NE.6.AND.KINDI.NE.13.AND.KINDI.NE.22.AND.KINDI.NE.31)
     1   K=4
C
CIF THE FIRST FULL RESIDUE IS A PROLINE OR HYDROXYPROLINE AND AN
C IMPROPER AMINO END GROUP (TYPE 1, 2, OR 3) WAS SPECIFIED, PRINT AN
C ERROR MESSAGE AND STOP:
C
      IF (KINDI.NE.13.AND.KINDI.NE.22) GO TO 25
      IF (KAMIN.EQ.1.OR.KAMIN.EQ.2.OR.KAMIN.EQ.3) GO TO 70
C
C ASSIGN THE REQUIRED PARAMETERS FOR THIS AMINO ACID RESIDUE FROM THE
C STANDARD RESIDUE DATA:
C
 25   DO 30 L=K,NATOM
      N = NA + L
      ATNAME(N) = ALPHA(L,LISTI)
      NBTYPE(N) =  LTYPE(L,LISTI)
 30   CHARGE(N) = CHG(L,LISTI)
C
C IF THIS IS THE FIRST FULL RESIDUE AND THE END GROUP IS TYPE 1 OR 3,
C ASSIGN NBTYPE=14 FOR THE AMINO NITROGEN.  IF THE FIRST FULL RESIDUE
C IS A GLYCINE OR AN IONIZED ASPARTIC ACID, AND THE END GROUP IS TYPE
C 1 OR 2, CORRECT ALPH AND CHARGE:
C
      IF (I.NE.2) GO TO 35
      IF (KAMIN.EQ.1.OR.KAMIN.EQ.3) NBTYPE(NA+1)=14
      IF (KINDI.NE.6.AND.KINDI.NE.31) GO TO 35
      IF (KAMIN.EQ.1) ATNAME(3)=ATNAME(1)
      IF (KAMIN.NE.2) GO TO 35
      ATNAME(4)=ATNAME(2)
      CHARGE(4)=CHARGE(2)
C
C END OF LOOP FOR EACH FULL AMINO ACID RESIDUE:
C
 35   NA = NA + NATOM
C
C ASSIGN PARAMETERS FOR THE CARBOXYL END GROUP FROM THE STANDARD
C RESIDUE DATA, FOR ALL ATOMS EXCEPT THE CARBONYL OXYGEN:
C
C     NPRE(INUMRS) = NA
      NPRE(NUMRES) = NA
C     LCARB = LIST(INUMRS)
      LCARB = LIST(NUMRES)
      KCARB = KNDEND(LCARB)
      KCARB = IABS(KCARB)
      NATOM = NDATOM(LCARB)
C     NPRE(INUMRS + 1) = NPRE(INUMRS) + NATOM - 1
      NPRE(NUMRES + 1) = NPRE(NUMRES) + NATOM - 1
      IF (NATOM .EQ. 1) GO TO 45
      NA = NA - 1
      DO 40 I = 2,NATOM
      N = NA + I
      ATNAME(N) = EALPHA(I,LCARB)
      NBTYPE(N) = NDTYPE(I,LCARB)
 40   CHARGE(N) = ECHG(I,LCARB)
C
C IF THE END GROUP IS TYPE 12, EQUALIZE THE CHARGE ON THE TWO
C OXYGEN ATOMS:
C
      IF (KCARB.NE.12) GO TO 45
C     NN = NPRE(INUMRS-1) + 7
      NN = NPRE(NUMRES-1) + 7
      CHARGE(NN) = ECHG(1,LCARB)
C
C LOOP OVER ALL ATOMS IN THE POLYPEPTIDE, TO COMPUTE THE NET CHARGE,
C AND DETERMINE WHETHER ANY ATOM HAS BEEN ASSIGNED AN INVALID NONBONDED
C TYPE (12, 16, 22, 23 OR 24).  IF THIS IS THE CASE, PRINT AN ERROR
C MESSAGE AND STOP:
C
 45   SUM = 0.0
      DO 60 I = 1,N
      DO 50 J = 1,5
      IF (NBTYPE(I).NE.NZERO(J)) GO TO 50
      WRITE (IOUT06,90) I
      STOP
 50   CONTINUE
      SUM = SUM+CHARGE(I)
 60   CONTINUE
      RETURN
 70   WRITE (IOUT06,80)
      STOP
 80   FORMAT(/47H USE ENDGROUP 6, 7, OR 8 INSTEAD OF 1, 2, OR 3./)
 90   FORMAT(/43H YOU HAVE USED AN INVALID ATOM TYPE ON ATOM,I4/)
      END
      SUBROUTINE ROTSET(CIS,CHI,A)
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE IS USED IN THE GENERATION OF COORDINATES WHICH DEPEND
C ON A DIHEDRAL ANGLE IN A SIDE CHAIN OR END GROUP.  IT COMPUTES A
C ROTATION MATRIX 'A' FROM THE DIRECTION COSINES (CIS) OF THE
C ROTATABLE BOND, AND CHI, THE VALUE OF THE DIHEDRAL ANGLE MINUS PI.
C
      DOUBLE PRECISION CIS,CHI,A
      DOUBLE PRECISION DCOS,DSIN,CS,SN
      DOUBLE PRECISION CS1,A1,A2
      DIMENSION A(3,3),CIS(3)
 12   CS = DCOS(CHI)
      SN = DSIN(CHI)
      CS1 = 1.0 - CS
      A(1,1) = CS + CS1*CIS(1)*CIS(1)
      A(2,2) = CS + CS1*CIS(2)*CIS(2)
      A(3,3) = CS + CS1*CIS(3)*CIS(3)
      A1 = CS1*CIS(1)*CIS(2)
      A2 = SN*CIS(3)
      A(1,2) = A1 - A2
      A(2,1) = A1 + A2
      A1 = CS1*CIS(1)*CIS(3)
      A2 = SN*CIS(2)
      A(1,3) = A1 + A2
      A(3,1) = A1 - A2
      A1 = CS1*CIS(2)*CIS(3)
      A2 = SN*CIS(1)
      A(2,3) = A1 - A2
      A(3,2) = A1 + A2
      RETURN
      END
      SUBROUTINE TRANSF (T,J,K)
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF ATOM J WITH RESPECT TO TH
C AXES OF THE POLYPEPTIDE CHAIN.
C
      DOUBLE PRECISION T(9)
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
CMSP  INCLUDE(REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN001/XOORD(2808),SNTH2(36),CSTH2(36),SDEL(36),CDEL(36)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NUMCHI(36),NDPT1(7,36),
     1   NDPT2(7,36),NUM(7,36)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
C     CHARACTER*4 ALPH,EALPHA
      CHARACTER*4 EALPHA
C
C L REFERS TO THE ATOM TO BE ADDED TO THE COORDINATE ARRAY.
C M IS THE ATOM TO WHICH THE NEW ATOM IS BEING ATTACHED.
C SINCE THE COORDINATES FOR N ARE NOT STORED, THE COUNT OF THE STORED
C COORDINATES IS OFF BY ONE.
C
      L = NPRE(N) + J
      M = NPRE(N) + K
      KK = K - 1
C
C     IF(N.EQ.INUMRS) GO TO 130
      IF(N.EQ.NUMRES) GO TO 130
C
C IF KK = 0, THEN THE POINT OF ATTACHMENT IS THE NITROGEN.
C DEFINE IT AS (0,0,0).
C
      IF (KK.GT.0) GO TO 110
      XT = 0.0
      YT = 0.0
      ZT = 0.0
      GO TO 120
C
C ELIMINATE 3 - DIMENSIONAL SUBSCRIPTS:
C
  110 KKNT = (KK - 1)*3 + (NT - 1)*78
      XT = XOORD(KKNT + 1)
      YT = XOORD(KKNT + 2)
      ZT = XOORD(KKNT + 3)
C
C X,Y,Z GIVE THE COORDINATES OF THE ATOM TO BE ADDED IN TERMS OF THE
C POINT OF ATTACHMENT.
C
  120 I = J - 1
      INT = (I - 1)*3 + (NT - 1)*78
      X = XOORD(INT + 1) - XT
      Y = XOORD(INT + 2) - YT
      Z = XOORD(INT + 3) - ZT
      GO TO 160
C
C L AND M ARE  OFF BY 2 BECAUSE OF THE WAY THE END GROUP IS STORED.
C IF KK=0, ATTACH THE O AND FIRST ATOM OF END GROUP TO C'.
C
  130 L = L-2
      IF (KK.GT.0) GO TO 140
      XT=0.0
      YT=0.0
      ZT=0.0
      M = NPRE(N - 1) + 6
      GO TO 150
C
  140 XT=ENOORD(1,KK,NT)
      YT=ENOORD(2,KK,NT)
      ZT=ENOORD(3,KK,NT)
      M=M-2
C
  150 I=J-1
      X=ENOORD(1,I,NT)-XT
      Y=ENOORD(2,I,NT)-YT
      Z=ENOORD(3,I,NT)-ZT
      IF(J.NE.2) GO TO 160
C
C POSITION OF O STORED IN END GROUP TO REPLACE O IN LAST RESIDUE.
C
      L = NPRE(N - 1) + 7
C
C IFEVEN INDICATES WHETHER TO INVERT THE STORED COORDINATES ABOUT X.
C SIGN INDICATES D OR L CONFIGURATION.
C
  160 Y = FLOAT(IFEVEN)*Y
      Z = FLOAT(IFEVEN)*SIGN*Z
C
C ATTACH THE L TH COORD TO THE M TH COORD.
      REFCRD(1,L) = T(1)*X + T(4)*Y + T(7)*Z + REFCRD(1,M)
      REFCRD(2,L) = T(2)*X + T(5)*Y + T(8)*Z + REFCRD(2,M)
      REFCRD(3,L) = T(3)*X + T(6)*Y + T(9)*Z + REFCRD(3,M)
      RETURN
      END
      SUBROUTINE ADJAMN
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE ENERGIES BETWEEN ATOM J IN
C THE AMINO END GROUP AND THE APPROPRIATE ATOMS IN THE SECOND
C RESIDUE.
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/AMIN/KSA14(22),KFA14(22),KSA15(22)
      COMMON/CAL001/KSTRT,KFIN
      COMMON/CHKN/NIT
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
      KSTRT=KSA14(J)
C
C IS THE 2ND RESIDUE A PROLINE OR HYDROXYPROLINE?
      IF(KPRO.EQ.1) GO TO 2
C
C STANDARD CASE
C
 1    KFIN=KFA14(J)
      CALL CAL14
      KSTRT=KSA15(J)
      IF(KSTRT.EQ.NPREIK) RETURN
      KFIN=NPRE(3)
      CALL CAL15
      RETURN
C
C PROLINE SECTION
C
C NFIRST IS THE INTRA-RESIDUE NUMBER OF THE FIRST ATOM IN
C RESIDUE IK (=IJ+1) HAVING A 1-4 INTERACTION WITH J.
C NFIRST=1 FOR A NITROGEN, 7 FOR AN OXYGEN.
 2    NFIRST=KSTRT-NPREIK
      IF(NFIRST.EQ.1) GO TO 1
      IF(NFIRST.EQ.7) GO TO 3
      CALL PRO37
      RETURN
C
C OXYGEN SECTION (SEE FLOW CHART)
C
 3    KFIN=KSTRT
      CALL CAL14
      NIT=1
C
C CALCULATE EXPLICITLY THE INTERACTION WITH THE H15 OF HYDROXYPROLINE
C
      IF (KINDIK.NE.22) RETURN
      KSTRT=15+NPREIK
      KFIN=KSTRT
      CALL CAL14
      RETURN
      END
      SUBROUTINE ADJCNT
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE IS NEEDED WHEN CALCULATING THE ENERGIES BETWEEN
C ADJACENT RESIDUES IJ AND IK.  IT SIMPLY DETERMINES AND
C CALLS THE APPROPRIATE SUBROUTINE.
C
C    ADJOXL IS CALLED IF IK=IJ+1 IS THE CARBOXYL END GROUP,
C          I.E., IF IJ IS THE LAST FULL RESIDUE
C
C    ADJAMN IS CALLED WHEN IJ IS THE AMINO END GROUP
C
C    ADJNN IS CALLED WHEN IJ AND IK ARE BOTH NON-END GROUPS AND
C          NEITHER IS A PROLINE OR HYDROXYPROLINE
C    ADJNP IS USED WHEN IJ IS NOT THE AMINO END GROUP AND IK IS
C          A PROLINE OR HYDROXYPROLINE
C    ADJPN IS CALLED WHEN IJ IS A PROLINE AND IK IS NOT THE
C          CARBOXYL END GROUP
C    ADJPP IS USED WHEN BOTH IJ AND IK ARE PROLINES (WHERE THE
C          TERM "PROLINE" INCLUDES HYDROXYPROLINE)
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
C
      IF(IK.NE.NUMRES) GO TO 1
C     IF(IK.NE.INUMRS) GO TO 1
      CALL ADJOXL
      RETURN
 1    IF(IJ.GT.1) GO TO 2
      CALL ADJAMN
      RETURN
 2    IF(JPRO.EQ.1) GO TO 4
      IF(KPRO.EQ.1) GO TO 3
      CALL ADJNN
      RETURN
 3    CALL ADJNP
      RETURN
 4    IF(KPRO.EQ.1) GO TO 5
      CALL ADJPN
      RETURN
 5    CALL ADJPP
      RETURN
      END
      SUBROUTINE ADJNN
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE ENERGIES BETWEEN ATOM J AND THE
C APPROPRIATE ATOMS IN THE ADJACENT RESIDUE (IK=IJ+1).  IJ AND IK
C ARE BOTH NON-END GROUPS AND NEITHER IS A PROLINE OR HYDROXY-
C PROLINE.
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/CAL001/KSTRT,KFIN
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
      DIMENSION NSX14(31),NFX14(31),NSX15(31)
      DATA NSX14/1,0,2,2*1,4,2,24*0/
      DATA NFX14/1,0,3,2*1,6,3,24*0/
      DATA NSX15/2,1,4,2,2,7,4,24*1/
C
      KSTRT=NSX14(J)
C
C FIRST WE CALCULATE THE 1-4 INTERACTIONS
C
      IF(KSTRT.EQ.0) GO TO 1
      KSTRT=KSTRT+NPREIK
      KFIN=NFX14(J)+NPREIK
      CALL CAL14
C
C NOW WE CALCULATE THE 1-5 INTERACTIONS
C
 1    KSTRT=NSX15(J)+NPREIK
      KFIN=NPRE(IJ+2)
      CALL CAL15
      RETURN
      END
      SUBROUTINE ADJNP
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE ENERGIES BETWEEN ATOM J AND
C THE APPROPRIATE ATOMS IN THE ADJACENT RESIDUE (IK=IJ+1).  IJ AND IK
C ARE BOTH NON-END GROUPS.  IJ IS NOT A PROLINE OR HYDROXY-
C PROLINE, BUT IK IS.
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/CAL001/KSTRT,KFIN
      COMMON/CHKN/NIT
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
      DIMENSION NPSX14(31),NPFX14(31),NPSX15(31)
      DATA NPSX15/2,1,7,2,2,0,7,24*1/
      DATA NPFX14/1,0,6,1,1,7,6,24*0/
      DATA NPSX14/1,0,2,1,1,7,2,24*0/
C
      IF (J.EQ.3.OR.J.EQ.7) GO TO 2
      IF(J.EQ.6) NIT=1
C
C FIRST CALCULATE THE 1-4 INTERACTIONS
C
      KSTRT=NPSX14(J)+NPREIK
      IF(KSTRT.EQ.NPREIK) GO TO 1
      KFIN=NPFX14(J)+NPREIK
      CALL CAL14
C
C CALCULATE EXPLICITLY THE INTERACTION WITH THE H15 OF HYDROXYPROLINE
C
      IF (KINDIK.NE.22.OR.J.NE.6) GO TO 1
      KSTRT=15+NPREIK
      KFIN=KSTRT
      CALL CAL14
C
C NOW CALCULATE THE 1-5 INTERACTIONS
C
 1    KSTRT=NPSX15(J)+NPREIK
      IF(KSTRT.EQ.NPREIK) RETURN
      KFIN=NPRE(IJ+2)
      CALL CAL15
      RETURN
C
C CALCULATE RING
C THIS SECTION IS FOR THE SPECIAL CASE OF J A C3 OR O7
C
 2    CALL PRO37
      RETURN
      END
      SUBROUTINE ADJOXL
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE APPROPRIATE INTERACTIONS
C BETWEEN ATOM J IN THE LAST FULL RESIDUE AND THE ATOMS IN
C THE CARBOXYL END GROUP
C
C THE ARRAYS KSC14, KFC14, AND KSC15 ARE INITIALIZED IN
C SUBROUTINE CBOXL.  KSC14 AND KFC14 REFER TO THE STARTING AND
C FINAL 1-4 INTERACTIONS.  KSC15 REFERS TO THE STARTING 1-5
C INTERACTION.
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/CAL001/KSTRT,KFIN
      COMMON/CARB/KSC14(36),KFC14(36),KSC15(36)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
C
C     NUMATM=NPRE(INUMRS+1)
      NUMATM=NPRE(NUMRES+1)
C
C FIRST CALCULATE THE 1-4 INTERACTIONS
C
      KSTRT=KSC14(J)
      IF(KSTRT.EQ.NPREIK) GO TO 1
      KFIN=KFC14(J)
      CALL CAL14
C
C NOW CALCULATE THE 1-5 INTERACTIONS
C
 1    KSTRT=KSC15(J)
      IF(KSTRT.EQ.NPREIK) RETURN
      KFIN=NUMATM
      CALL CAL15
      RETURN
      END
      SUBROUTINE ADJPN
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE APPROPRIATE INTERACTIONS
C BETWEEN ATOM J AND THE ATOMS IN RESIDUE IK=IJ+1
C IJ IS A PROLINE RESIDUE AND IK IS NOT
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      INTEGER PNSX14(15),PNFX14(15),PNSX15(15)
      COMMON/CAL001/KSTRT,KFIN
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
      DATA PNSX14/1,1,2,1,1,4,2,1,1,1,1,1,1,1,0/
      DATA PNFX14/1,1,3,1,1,6,3,1,1,1,1,1,1,1,0/
      DATA PNSX15/2,2,4,2,2,7,4,2,2,2,2,2,2,2,1/
C
C FIRST CALCULATE THE 1-4 INTERACTIONS
C
      KSTRT=PNSX14(J)+NPREIK
      IF(KSTRT.EQ.NPREIK) GO TO 1
      KFIN=PNFX14(J)+NPREIK
      CALL CAL14
C
C NOW CALCULATE THE 1-5 INTERACTIONS
C
 1    KSTRT=PNSX15(J)+NPREIK
      KFIN=NPRE(IJ+2)
      CALL CAL15
      RETURN
      END
      SUBROUTINE ADJPP
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE INTERACTIONS BETWEEN
C ATOM J IN RESIDUE IJ AND THE APPROPRIATE ATOMS IN RESIDUE
C IK=IJ+1.  IJ AND IK ARE BOTH PROLINES (WHERE 'PROLINE'
C INCLUDES HYDROXYPROLINE)
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      INTEGER PPSX14(15),PPFX14(15),PPSX15(15)
      COMMON/CAL001/KSTRT,KFIN
      COMMON/CHKN/NIT
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
      DATA PPSX14/1,1,2,1,1,7,2,1,1,1,1,1,1,1,0/
      DATA PPFX14/1,1,6,1,1,7,6,1,1,1,1,1,1,1,0/
      DATA PPSX15/2,2,7,2,2,0,7,2,2,2,2,2,2,2,1/
C
      IF (J.EQ.3.OR.J.EQ.7) GO TO 2
      IF(J.EQ.6) NIT=1
C
C FIRST CALCULATE THE 1-4 INTERACTIONS, IF ANY
C
      KSTRT=PPSX14(J)+NPREIK
      IF(KSTRT.EQ.NPREIK) GO TO 1
      KFIN=PPFX14(J)+NPREIK
      CALL CAL14
C
C CALCULATE EXPLICITLY THE INTERACTION WITH THE H15 OF HYDROXYPROLINE
C
      IF (KINDIK.NE.22.OR.J.NE.6) GO TO 1
      KSTRT=15+NPREIK
      KFIN=KSTRT
      CALL CAL14
C
C NOW CALCULATE THE 1-5 INTERACTIONS, IF ANY
C
 1    KSTRT=PPSX15(J)+NPREIK
      IF(KSTRT.EQ.NPREIK) RETURN
      KFIN=NPRE(IJ+2)
      CALL CAL15
      RETURN
C
C CALCULATE RING (SEE FLOW CHART)
C THIS SECTION IS FOR THE SPECIAL CASE OF J A C3 OR O7
C
 2    CALL PRO37
      RETURN
      END
      SUBROUTINE AMINO
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE SETS THE VALUES OF THE KSA14,KFA14, AND KSA15
C ARRAYS WHICH WILL BE USED LATER IN SUBROUTINE ADJAMN.
C
C IF J IS AN ATOM IN THE AMINO END GROUP, THEN
C   KSA14(J)=THE FIRST ATOM IN THE 2ND RESIDUE HAVING A 1-4
C            INTERACTION WITH J,
C   KFA14(J)=THE LAST ATOM IN THE 2ND RESIDUE HAVING A 1-4
C            INTERACTION WITH J, AND
C   KSA15(J)=THE FIRST ATOM IN THE 2ND RESIDUE HAVING A 1-5
C            INTERACTION WITH J.
C AMINO IS CALLED IN SPECV
C
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (SIZE)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/AMIN/KSA14(22),KFA14(22),KSA15(22)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
C     COMMON/IOUNIT/JREAD
      COMMON/PUT14/NSN14(26,36),NFN14(26,36),MSX14(22,20),MFX14(22,20),
     1   MSN14(22,20),MFN14(22,20)
      COMMON/PUT15/NSN15(26,36),MSN15(22,20),MSX15(22,20)
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C
C IF THERE IS NO AMINO END GROUP,RETURN
C
      IF(KAMIN.EQ.10) RETURN
C
C DEFINE VARIABLES
C
      LIST2=LIST(2)
      LIST2=IABS(LIST2)
      KIND2=KNDRES(LIST2)
      KIND2=IABS(KIND2)
      NPRE2=NPRE(2)
      JFIN=NPRE2
C
C IS THE 2ND RESIDUE A PROLINE OR HYDROXYPROLINE?
      IF(KIND2.EQ.13.OR.KIND2.EQ.22) GO TO 2
C
C THIS SECTION IS FOR THE SECOND RESIDUE NOT A PROLINE
C OR A HYDROXYPROLINE
CDIR@ IVDEP
      DO 1 J=1,JFIN
      KSA14(J)=MSX14(J,LAMIN)+NPRE2
      KFA14(J)=MFX14(J,LAMIN)+NPRE2
      KSA15(J)=MSX15(J,LAMIN)+NPRE2
 1    CONTINUE
      RETURN
C
C THE FOLLOWING SECTION IS FOR PROLINE OR HYDROXYPROLINE
C
 2    DO 7 J=1,JFIN
      KSTRT=MSX14(J,LAMIN)
      GO TO (3,4,5,6), KSTRT
C
C KSTRT=1
C
 3    KSTRT=1+NPRE2
      KSA14(J)=KSTRT
      KFA14(J)=KSTRT
      KSA15(J)=2+NPRE2
      GO TO 7
C
C KSTRT=2
C
 4    KSA14(J)=2+NPRE2
      GO TO 7
C
C ERROR (KSTRT=3)
C
 5    WRITE (IOUT06,500)
      STOP
C
C KSTRT=4
C
C NOTICE THAT KFA14 AND KSA15 ARE NOT SET, SINCE THEY WILL
C NOT BE NEEDED IN ADJAMN
 6    KSA14(J)=7+NPRE2
C END OF PROLINE SECTION
 7    CONTINUE
      RETURN
  500 FORMAT(55H ERROR IN 1-4 INTERACTIONS BETWEEN 1ST AND 2ND RESIDUE.)
      END
C     SUBROUTINE CAL14
C     IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE ENERGY OF 1,4 INTERACTIONS BETWEEN
C ATOMS JM AND KM WITH TYPES JJ AND KK RESPECTIVELY
C
C THE ELECTROSTATIC ENERGY TEES FOR ATOM PAIR JM, KM = CHG(JM)*CHG(KM)/R
C WHERE 2.0 IS TAKEN AS THE DIELECTRIC CONSTANT
C        CHG IS STORED AS Q*DSQRT(332.0/2.0)
C        Q IS THE PARTIAL ATOMIC CHARGE IN E.C.U.
C        R IS THE INTERNUCLEAR DISTANCE IN ANGSTROM UNITS.
C NONBONDED ENERGY TENB FOR JM,KM = F*EPS*RO**6/R**12-2*EPS*RO**3/R**12
C WHERE F IS 0.5 FOR 1,4 INTERACTIONS
C        EPS IS THE DEPTH OF THE ENERGY MINIMUM
C        RO IS THE SQUARE OF THE INTERNUCLEAR DISTANCE AT THE MINIMUM
C        R IS THE INTERNUCLEAR DISTANCE BETWEEN JM AND KM.
C HYDROGEN BOND ENERGY = EPS*RO**6/R**12 - 2*EPS*RO**5/R**10
C
C     PARAMETER  (MAXATM=4000)
C     DOUBLE PRECISION DTEES,EES,DTENB,ENB,ETOT
C     COMMON/CALC/EES,ENB,ETOT,JM,JJ
C     COMMON/CAL001/KSTRT,KFIN
C     COMMON/ENG000/EPS(28,28),RO(28,28)
C     COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
C     DIMENSION IHB(28)
C     DATA IHB/0,1,0,1,8*0,2*2,2*0,3*2,9*0/
C
C     DO 1 KM=KSTRT,KFIN
C     KK=NBTYPE(KM)
C     QJK=QJ*CHARGE(KM)
C     DAX=REFCRD(1,KM)-REFCRD(1,JM)
C     DAY=REFCRD(2,KM)-REFCRD(2,JM)
C     DAZ=REFCRD(3,KM)-REFCRD(3,JM)
C     RMAG=DAX*DAX+DAY*DAY+DAZ*DAZ
C     R=1./RMAG
C     R6=RO(JJ,KK)*R
C     R4=R6*R6
C     R6=R6*R4
C     R=DSQRT(R)
C     TEES=QJK*R
C     DTEES=TEES
C     EES=EES+DTEES
C     EPP=EPS(JJ,KK)
C     C=2.0
C     IHBCHK=IHB(JJ)+IHB(KK)
C     IF (IHBCHK.EQ.3) GO TO 101
C     TENB=EPP*R6*(0.5*R6-C)
C     DTENB=TENB
C     ENB=ENB+DTENB
C     GO TO 1
C 101 C=C*R4
C     TENB=EPP*R6*(R6-C)
C     DTENB=TENB
C     ENB=ENB+DTENB
C   1 CONTINUE
C     RETURN
C     END
C     SUBROUTINE CAL15
C     IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE ENERGY OF 1,5 INTERACTIONS BETWEEN
C ATOMS JM AND KM WITH TYPES JJ AND KK RESPECTIVELY
C SEE COMMENTS FOR SUBROUTINE CAL14
C F IN THE EXPRESSION FOR TENB IS 1.0 FOR 1,5 INTERACTIONS
C
C     PARAMETER  (MAXATM=4000)
C     DOUBLE PRECISION DTEES,EES,DTENB,ENB,ETOT
C     COMMON/CALC/EES,ENB,ETOT,JM,JJ
C     COMMON/CAL001/KSTRT,KFIN
C     COMMON/ENG000/EPS(28,28),RO(28,28)
C     COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
C     DIMENSION IHB(28)
C     DATA IHB/0,1,0,1,8*0,2*2,2*0,3*2,9*0/
C
C     DO 2 KM=KSTRT,KFIN
C     KK=NBTYPE(KM)
C     QJK=QJ*CHARGE(KM)
C     DAX=REFCRD(1,KM)-REFCRD(1,JM)
C     DAY=REFCRD(2,KM)-REFCRD(2,JM)
C     DAZ=REFCRD(3,KM)-REFCRD(3,JM)
C     RMAG=DAX*DAX+DAY*DAY+DAZ*DAZ
C     R=1./RMAG
C     R6=RO(JJ,KK)*R
C     R4=R6*R6
C     C=2.0
C     IHBCHK=IHB(JJ)+IHB(KK)
C     IF (IHBCHK.NE.3) GO TO 102
C     C=C*R4
C 102 R6=R6*R4
C     R=DSQRT(R)
C     TEES=QJK*R
C     DTEES=TEES
C     EES=EES+DTEES
C     EPP=EPS(JJ,KK)
C     TENB=EPP*R6*(R6-C)
C     DTENB=TENB
C     ENB=ENB+DTENB
C2    CONTINUE
C     RETURN
C     END
      SUBROUTINE CBOXL
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE SETS UP THE ARRAYS KSC14, KFC14, AND KSC15,
C WHICH WILL BE USED IN SUBROUTINE ADJOXL TO CALCULATE THE
C 1-4 AND 1-5 INTERACTIONS BETWEEN THE LAST FULL RESIDUE AND THE
C CARBOXYL END GROUP
C CBOXL IS CALLED IN SPECV
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE(PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/CARB/KSC14(36),KFC14(36),KSC15(36)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/PUT14/NSN14(26,36),NFN14(26,36),MSX14(22,20),MFX14(22,20),
     1   MSN14(22,20),MFN14(22,20)
      COMMON/PUT15/NSN15(26,36),MSN15(22,20),MSX15(22,20)
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
C IF THERE IS NO CARBOXYL END GROUP, RETURN
      IF(KCARB.EQ.20) RETURN
C
C DEFINE VARIABLES
C     NPREIK=NPRE(INUMRS)
      NPREIK=NPRE(NUMRES)
C     JFIN=NPREIK-NPRE(INUMRS-1)
      JFIN=NPREIK-NPRE(NUMRES-1)
C     LISTIJ=LIST(INUMRS-1)
      LISTIJ=LIST(NUMRES-1)
      LISTIJ=IABS(LISTIJ)
      KINDIJ=KNDRES(LISTIJ)
      KINDIJ=IABS(KINDIJ)
      JPRO=0
      IF(KINDIJ.EQ.13.OR.KINDIJ.EQ.22) JPRO=1
C
C STEP J
C
      DO 3 J=1,JFIN
C
C IS J A BACKBONE ATOM?
      IF(J.LE.7) GO TO 2
C
C IS J A SIDECHAIN ATOM AND PART OF THE PROLINE RING?
      IF(JPRO.EQ.1.AND.J.NE.15) GO TO 1
C
C THE FOLLOWING SECTION IS FOR J A SIDECHAIN ATOM BUT NOT PART
C OF THE PROLINE RING
C
      KSC14(J)=NPREIK
      KFC14(J)=NPREIK
      KSC15(J)=1+NPREIK
      GO TO 3
C
C PROLINE RING
C THE FOLLOWING SECTION IS FOR J A SIDECHAIN ATOM
C BUT PART OF A PROLINE RING
C
 1    KSC14(J)=MSX14(1,LCARB)+NPREIK
      KFC14(J)=MFX14(1,LCARB)+NPREIK
      KSC15(J)=MSX15(1,LCARB)+NPREIK
      GO TO 3
C
C BACKBONE
C THE FOLLOWING SECTION IS FOR J LESS THAN 7, I. E., J
C IS A BACKBONE ATOM
C
C IF J IS THE C2 OF A PROLINE, THEN IT ALSO BELONGS TO THE
C PROLINE RING
 2    IF(JPRO.EQ.1.AND.J.EQ.2) GO TO 1
      KSC14(J)=MSX14(J,LCARB)+NPREIK
      KFC14(J)=MFX14(J,LCARB)+NPREIK
      KSC15(J)=MSX15(J,LCARB)+NPREIK
C
C END OF LOOP
 3    CONTINUE
      RETURN
      END
      SUBROUTINE DIHANG(S,T,U,V)
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE COMPUTES THE VALUE OF THE DIHEDRAL ANGLE (ANG1)
C DEFINED BY THE ATOMIC COORDINATE ARRAYS S, T, U AND V.
C
      DIMENSION S(3),T(3),U(3),V(3)
      DIMENSION A(3),B(3),C(3),AXB(3),BXC(3)
      COMMON/HEDRAL/ANG1
CDIR@ IVDEP
      DO 1 L=1,3
      A(L)=T(L)-S(L)
      B(L)=U(L)-T(L)
      C(L)=V(L)-U(L)
   1  CONTINUE
      AXB(1)=A(2)*B(3)-A(3)*B(2)
      AXB(2)=A(3)*B(1)-A(1)*B(3)
      AXB(3)=A(1)*B(2)-A(2)*B(1)
      BXC(1)=B(2)*C(3)-B(3)*C(2)
      BXC(2)=B(3)*C(1)-B(1)*C(3)
      BXC(3)=B(1)*C(2)-B(2)*C(1)
      D=BXC(1)**2+BXC(2)**2+BXC(3)**2
      D=DSQRT((AXB(1)**2+AXB(2)**2+AXB(3)**2)*D)
      ANG1=(AXB(1)*BXC(1)+AXB(2)*BXC(2)+AXB(3)*BXC(3))/D
      ANG1=DACOS(ANG1)
      SCLPRD=A(1)*(B(2)*C(3)-B(3)*C(2)) - A(2)*(B(1)*C(3)-B(3)*C(1))
     1   +A(3)*(B(1)*C(2)-B(2)*C(1))
      IF (SCLPRD.LE.0.0) ANG1=-ANG1
      RETURN
      END
C     SUBROUTINE ENERGY (VAR)
      SUBROUTINE ENERGY
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE GENERATES THE GEOMETRY AND CALCULATES THE
C CONFORMATIONAL ENERGY OF THE USER'S POLYPEPTIDE CHAIN
C
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (TORSNP)
C TORSNP
C ** ECEPP ORDER
      COMMON/TORSNP/AP(MAXVAR),NBP(MAXVAR),NSP(MAXVAR),IFTORP(MAXVAR)
C
C        : U=A(I){1+NS(I)COS(NB(I)*(DIHEDRAL ANGLE))}
C  AP     : A(I)
C  NBP    : NB(I)
C  NSP    : NS(I)
C  IFTORP : =1,  CALCULTES TORSIONAL ENERGY FOR THE DIHEDRAL ANGLE.
C          =0,  DOES NOT CALCULATE ENERGY FOR THE DIHEDRAL ANGLE.
C  THIS IS A LOCAL COMMON IN PRECEP.
CMSP  INCLUDE (SSPAIR)
      COMMON/SSPAIR/KSSPER(6,2,MAXSS),JSS(3,MAXSS),KSS(MAXSS2),
     >              LSS(MAXSS2),NPAIR(MAXSS,2)
C
C  KSSPER:    THE ATOM NUMBERS WHICH BELONG TO THE DISULPHITE BONDS
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      DOUBLE PRECISION EES,ENB,ETOT,DUK,ETOR,ETORS
      DOUBLE PRECISION ECYSTR,ELOOP
      COMMON/BONDS/UTOR(MXRS10),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CALC/EES,ENB,ETOT,JM,JJ
      COMMON/CAL001/KSTRT,KFIN
      COMMON/CHECK/KNDRES(36),KNDEND(20)
      COMMON/CHKN/NIT
C     COMMON/CYS001/KCYS,NCYS
      COMMON/CYS001/KCYS
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GEN008/NGEOM(36)
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
      COMMON/PROLIN/EPRO
      COMMON/TOR/ETOR,ECYSTR,ELOOP
C     COMMON/TORQUE/A(MAXVAR),NB(MAXVAR),NS(MAXVAR),IFTORP(MAXVAR),
C    &              INDXPV(MAXVAR)
      COMMON/TORQUE/INDXPV(MAXVAR)
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
      COMMON/TOR3/ETORS
C     CHARACTER*4 ALPH,EALPHA
      CHARACTER*4 EALPHA
C     DIMENSION VAR (1)
      DIMENSION RING(7)
      DIMENSION ANGONE(10*MAXRES)
      EQUIVALENCE (ANGRAD(1,1),ANGONE(1))
      DATA RING(1),RING(2),RING(3),RING(4),RING(5),RING(6),RING(7)/
     1   1.366,0.520,0.318,0.920,0.186,0.000,0.994/
C
C FIRST WE CALCULATE THE NEW VALUE OF THE TORSIONAL ENERGY. ONLY THE
C CONTRIBUTIONS FROM THE VARIABLE DIHEDRAL ANGLES MUST BE RECALCULATED.
C
      ETOR=ETORS
C
C IF THERE ARE NO VARIABLE DIHEDRAL ANGLES SKIP THIS TORSIONAL SECTION
C
      IF(NUMVAR.EQ.0) GO TO 2
C
C STEP VARIABLES
C
CDIR@ IVDEP
      DO 1 L=1,NUMVAR
      NDX=INDXPV(L)
      ANGONE(NDX)=VAR(L)
      IFT=IFTORP(L)
      IF(IFT.NE.1) GO TO 1
      UK=AP(L)*(1.+FLOAT(NSP(L))*COS(FLOAT(NBP(L))*VAR(L)))
      DUK=UK
      ETOR=ETOR+DUK
      UTOR(NDX)=UK
 1    CONTINUE
C
C GENERATE
C
  2   CALL GENER
      ENB=0.0D0
      EES=0.0D0
      ECYSTR=0.0D0
      ELOOP=0.0D0
      EPRO=0.0E0
C LASTRS IS THE LAST RESIDUE OF THE MOLECULE, I. E., THE CARBOXYL END
C GROUP, IF ANY, OTHERWISE THE LAST FULL RESIDUE.
C     LASTRS=INUMRS
      LASTRS=NUMRES
      IF (KCARB.EQ.20) LASTRS=LASTRS-1
C
C STEP IJ
C IJ IS THE RESIDUE NUMBER OF J, THE 1ST ATOM OF THE INTERACTING PAIR
C
      DO 6 IJ=1,LASTRS
C
C IFEND=0 IF I IS NOT AN END GROUP.  IFEND=1 IF IT IS AN END GROUP
      IFEND=0
C     IF(IJ.EQ.1.OR.IJ.EQ.INUMRS) IFEND=1
      IF(IJ.EQ.1.OR.IJ.EQ.NUMRES) IFEND=1
      LISTIJ=LIST(IJ)
      LISTIJ=IABS(LISTIJ)
      KINDIJ=KNDRES(LISTIJ)
      IF (IFEND.NE.0) KINDIJ=KNDEND(LISTIJ)
      KINDIJ=IABS(KINDIJ)
      KCYS=0
C     IF (KINDIJ.NE.3.OR.IFEND.EQ.1.OR.NCYS.EQ.0) GO TO 201
      IF (KINDIJ.NE.3.OR.IFEND.EQ.1.OR.NSS.EQ.0) GO TO 201
C
C IF IJ IS A HALF-CYSTINE RESIDUE, THIS SECTION FINDS KCYS
C (IF IT EXISTS), THE RESIDUE NUMBER OF THE OTHER HALF.
C
C     DO 10 N=1,NCYS
      DO 10 N=1,NSS
      NP1=NPAIR(N,1)
      NP2=NPAIR(N,2)
      IF(IJ.EQ.NP1) KCYS=NP2
 10   CONTINUE
C
C JPRO=1 IF THE RESIDUE CONTAINING THE JTH ATOM IS A PROLINE OR A
C H-PROLINE
 201  JPRO=0
      IF(IFEND.NE.1.AND.(KINDIJ.EQ.13.OR.KINDIJ.EQ.22)) JPRO=1
C
C NPREIJ AND NPREIK WILL BE USED TO CONVERT ATOM NUMBERS
C J AND K NUMBERED WITHIN THE RESIDUE, TO JM AND KM, THE SAME
C ATOMS BUT NUMBERED WITHIN THE WHOLE MOLECULE.
      NPREIJ=NPRE(IJ)
      NPREIK=NPRE(IJ+1)
      JSTRT=1
      JFIN=NPREIK-NPREIJ
      IF (JFIN.EQ.0) GO TO 6
C
C DEFINE VARIABLES NEEDED BELOW (SEE DEFINITION OF VARIABLES)
      KPRO=0
      KINDIK=99
      IF (IJ.EQ.LASTRS) GO TO 22
      IK=IJ+1
      LISTIK=LIST(IK)
      LISTIK=IABS(LISTIK)
      KINDIK=KNDRES(LISTIK)
C     IF (IK.EQ.INUMRS) KINDIK=KNDEND(LISTIK)
      IF (IK.EQ.NUMRES) KINDIK=KNDEND(LISTIK)
      KINDIK=IABS(KINDIK)
C     IF((KINDIK.EQ.13.OR.KINDIK.EQ.22).AND.IK.NE.INUMRS) KPRO=1
      IF((KINDIK.EQ.13.OR.KINDIK.EQ.22).AND.IK.NE.NUMRES) KPRO=1
C
C STEP J
C WE NOW STEP OVER ALL THE ATOMS IN THE IJTH RESIDUE
C
 22   DO 5 J=JSTRT,JFIN
C
C J AND JM REFER TO THE 1ST ATOM OF THE INTERACTING PAIR.  J IS THIS
C ATOM AS NUMBERED WITHIN RESIDUE I. JM IS THE SAME ATOM, NUMBERED
C WITHIN THE WHOLE MOLECULE.
      JM=J+NPREIJ
      JJ=NBTYPE(JM)
      QJ=CHARGE(JM)
C
C WE NOW CALCULATE THE INTRA-RESIDUE 1-4 AND 1-5 INTERACTIONS
      CALL INT14
      CALL INT15
C
C
C THE FOLLOWING SECTION IS FOR CALCULATING THE INTERACTIONS BETWEEN
C ATOM J AND THE ATOMS OF THE ADJACENT RESIDUE
C
C IF IJ IS THE LAST REAL RESIDUE WE WILL SKIP THIS SECTION
      IF(IJ.EQ.LASTRS) GO TO 5
C
C RESET IK AND NIT BEFORE CALLING ADJCNT
C
      IK=IJ+1
      NIT=0
C
C SUBROUTINE ADJCNT CALCULATES THE APPROPRIATE INTER-RESIDUE
C ADJACENT INTERACTIONS
      CALL ADJCNT
      IJ2=IJ+2
      IF(IJ2.GT.LASTRS) GO TO 5
C
C STEP IK
C THIS SECTION CALCULATES THE APPROPRIATE INTER-RESIDUE
C NON-ADJACENT INTERACTIONS
C
      DO 4 IK=IJ2,LASTRS
      IF(IK.NE.KCYS) GO TO 3
      NPREIK=NPRE(IK)
      CALL SSBRIJ
      NPREIK=NPRE(IJ+1)
      GO TO 4
C
C NO BRIDGE
C
 3    KSTRT=NPRE(IK)+1
      IF (NIT.NE.1) GO TO 31
C
C THIS SECTION CALCULATES THE 1-4 INTERACTION BETWEEN ATOM J
C OF RESIDUE IJ AND THE NITROGEN OF RESIDUE IJ+2
C
      KFIN=KSTRT
      CALL CAL14
      KSTRT=KSTRT+1
      NIT=0
C
 31   KFIN=NPRE(IK+1)
      IF(KSTRT.GT.KFIN) GO TO 4
      CALL CAL15
 4    CONTINUE
 5    CONTINUE
C
C IF THE ENDGROUP IS TYPE 6, ADD TO EPRO THE INTERNAL ENERGY OF CIS-H-
C PROLINE RELATIVE TO TRANS-H-PROLINE.  IF THE NEXT RESIDUE IS PROLINE,
C ADD TO EPRO THE INTERNAL ENERGY OF THE FIXED PART OF THE PROLINE RING.
C THIS WILL DIFFER FOR CIS AND TRANS PROLINE, AND FOR DIFFERENT RING
C GEOMETRIES (DOWN, UP, FLAT) AND IS NOT INCLUDED IN ETOT.
C
      IF (IFEND.EQ.1.AND.KINDIJ.EQ.6) EPRO=EPRO+RING(7)
      IF (KPRO.EQ.0.OR.KINDIK.EQ.22) GO TO 6
      IFCIS=1
      L=10*(IJ-1)+3
      IF (IJ.EQ.1) L=NBOND(LISTIJ)
      IF(COS(ANGONE(L)).LE.0.0) IFCIS=0
 56   JJ=3*IFCIS+NGEOM(LISTIK)
      EPRO=EPRO+RING(JJ)
 6    CONTINUE
C
C WE HAVE NOW CALCULATED THE TOTAL ELECTROSTATIC (EES), NONBONDED
C (ENB), AND TORSIONAL ENERGIES AND CAN SUM THEM TO FIND ETOT, THE
C TOTAL ENERGY OF THE MOLECULE.
C
      ETOT=EES+ENB+ETOR+ECYSTR+ELOOP
      RETURN
      END
C     SUBROUTINE INITOR (VAR)
      SUBROUTINE INITOR
      IMPLICIT REAL*8(A-H,O-Z)
C
C THE SUBROUTINE (1) CALCULATES THE INITIAL TORSIONAL ENERGY
C OF THE POLYPEPTIDE (BY CALLING TORTOT), (2) INITIALIZES THE
C TORSIONAL ARRAYS (A,NB,NS, AND IFTORP), (3) CALCULATES ETORS,
C THAT PART OF THE TOTAL TORSIONAL ENERGY WHICH DOES NOT VARY,
C AND (4) SETS THE VARIABLE ARRAYS INDXPV AND VAR (SEE DEF'N
C OF VARIABLES).
C
      DOUBLE PRECISION ETOR,ETORS,ECYSTR,ELOOP,DUK
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
C VARANG
C
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (TORSNP)
C TORSNP
C ** ECEPP ORDER
      COMMON/TORSNP/AP(MAXVAR),NBP(MAXVAR),NSP(MAXVAR),IFTORP(MAXVAR)
C
C        : U=A(I){1+NS(I)COS(NB(I)*(DIHEDRAL ANGLE))}
C  AP     : A(I)
C  NBP    : NB(I)
C  NSP    : NS(I)
C  IFTORP : =1,  CALCULTES TORSIONAL ENERGY FOR THE DIHEDRAL ANGLE.
C          =0,  DOES NOT CALCULATE ENERGY FOR THE DIHEDRAL ANGLE.
C  THIS IS A LOCAL COMMON IN PRECEP.
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(MXRS10),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/TOR/ETOR,ECYSTR,ELOOP
      COMMON/TORP/AR(8,36),NBB(8,36),NSSX(8,36),NANG(8,36),NTOR(36),
     1  AAN(20),NBBN(20),NSSN(20),NANGN(20)
C     COMMON/TORQUE/A(MAXVAR),NB(MAXVAR),NS(MAXVAR),IFTORP(MAXVAR),
C    &              INDXPV(MAXVAR)
      COMMON/TORQUE/INDXPV(MAXVAR)
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
      COMMON/TOR3/ETORS
      DIMENSION ANGONE(10*MAXRES)
      EQUIVALENCE (ANGRAD(1,1),ANGONE(1))
C     CHARACTER*4 ALPH
C     DIMENSION VAR (1)
C
C CALL TORTOT TO CALCULATE THE TOTAL TORSIONAL ENERGY OF THE
C POLYPEPTIDE
C
      CALL TORTOT
      ETORS=ETOR
C
C IF THE USER HAS SPECIFIED NO VARIABLES, RETURN
      IF(NUMVAR.EQ.0) RETURN
C     LASTFL=INUMRS-1
      LASTFL=NUMRES-1
      NDXTOT=0
      NUMVAR=0
C
C STEP RESIDUE
C
C     DO 70 I=1,INUMRS
      DO 70 I=1,NUMRES
      NVR=NV(I)
      IF(NVR.EQ.0) GO TO 70
      LISTI=LIST(I)
      LISTI=IABS(LISTI)
C
C STEP VARIABLE
C
      DO 60 LL=1,NVR
      L=NUMVAR+LL
      NDX=NDXARR(LL,I)
      IFT=0
C
C IS I THE CARBOXYL END GROUP?
C     IF (I.EQ.INUMRS.AND.KCARB.EQ.(-18)) GO TO 25
      IF (I.EQ.NUMRES.AND.KCARB.EQ.(-18)) GO TO 25
C     IF(I.EQ.INUMRS) GO TO 50
      IF(I.EQ.NUMRES) GO TO 50
C
C IS I THE AMINO END GROUP?
      IF(I.NE.1) GO TO 10
C
C DOES THE VARIABLE IN QUESTION HAVE A TORSIONAL TERM?
      IF(KAMIN.LT.0.AND.NDX.EQ.NANGN(LAMIN)) GO TO 20
      GO TO 50
C
C SET TORSIONAL ARRAYS
C
C IS THE VARIABLE IN QUESTION AN OMEGA?
 10   IF(NDX.NE.3) GO TO 30
C
C IS I THE LAST FULL RESIDUE?
      IF(I.NE.LASTFL) GO TO 20
C
C DOES THE 3RD BACKBONE DIHEDRAL ANGLE OF THE LAST FULL
C RESIDUE HAVE A TORSIONAL TERM?
      IF(KCARB.GE.0) GO TO 30
      AP(L)=AAN(LCARB)
      NBP(L)=NBBN(LCARB)
      NSP(L)=NSSN(LCARB)
      IFT=1
      GO TO 50
C
C OMEGA
C THIS SECTION COMPUTES THE OMEGA CONTRIBUTION TO THE TORSIONAL ENERGY.
 20   AP(L)=10.0
      NBP(L)=2
      NSP(L)=-1
      IFT=1
      GO TO 50
C
C  SIDECHAIN TORSIONAL FOR ETHYL ESTER ENDGROUP
C
  25  AP(L) = 1.35
      NBP(L) = 3
      NSP(L) = 1
      IFT = 1
C
C SIDECHAIN
C
C IS THE VARIABLE IN QUESTION A BACKBONE DIHEDRAL ANGLE
C OR A CHI?
  30  IF (NDX.LT.4) GO TO 50
      KINDI=KNDRES(LISTI)
C
C DOES THE RESIDUE IN QUESTION HAVE A SIDECHAIN TORSIONAL TERM?
      IF(KINDI.GE.0) GO TO 50
      NKT=NTOR(LISTI)
      IF (KINDI.EQ.(-3)) NKT=1
      DO 32 J=1,NKT
      NA=NANG(J,LISTI)
C
C IS THE SIDECHAIN VARIABLE IN QUESTION THE ONE WHICH HAS A
C TORSIONAL TERM?
      IF (NDX.NE.NA) GO TO 32
      AP(L)=AR(J,LISTI)
      NBP(L)=NBB(J,LISTI)
      NSP(L)=NSSX(J,LISTI)
      IFT=1
  32  CONTINUE
C
C SET VARIABLE ARRAYS
C
 50   NDX=NDX+NDXTOT
C
C SEE DEFINITION OF VARIABLES FOR AN EXPLANATION OF THE
C FOLLOWING ARRAYS.
      INDXPV(L)=NDX
      VAR(L)=ANGONE(NDX)
      IFTORP(L)=IFT
C
C DOES THE VARIABLE BEING CONSIDERED HAVE A TORSIONAL TERM?
      IF(IFT.EQ.0) GO TO 60
      DUK=UTOR(NDX)
      ETORS=ETORS-DUK
C
C END OF VARIABLE LOOP
 60   CONTINUE
      NUMVAR=NUMVAR+NVR
C
C END OF RESIDUE LOOP
 70   NDXTOT=NDXTOT+10
      RETURN
      END
      SUBROUTINE INT14
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE 1-4 INTERACTIONS BETWEEN ATOM J
C AND ALL APPROPRIATE ATOMS K IN THE SAME RESIDUE
C
      DOUBLE PRECISION EES,ENB,ETOT
      COMMON/CALC/EES,ENB,ETOT,JM,JJ
      COMMON/CAL001/KSTRT,KFIN
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
      COMMON/PUT14/NSN14(26,36),NFN14(26,36),MSX14(22,20),MFX14(22,20),
     1   MSN14(22,20),MFN14(22,20)
C
      IF(IFEND.EQ.1) GO TO 3
C THIS SECTION CALCULATES THE INTRA-RESIDUE 1-4 INTERACTIONS
C FOR FULL RESIDUES
      KSTRT=NSN14(J,LISTIJ)
      IF(KSTRT.EQ.0) GO TO 1
      KSTRT=KSTRT+NPREIJ
      KFIN=NFN14(J,LISTIJ)+NPREIJ
      CALL CAL14
 1    IF(KINDIJ.NE.22.OR.J.GT.5) GO TO 2
C IF THE RESIDUE IS A HYDROXYPROLINE, THE H15 MUST BE EXPLICITLY
C CALCULATED FOR ATOMS 1-5
      KSTRT=15+NPREIJ
      KFIN=KSTRT
      CALL CAL14
 2    IF(J.NE.5) RETURN
C THE INTERACTION BETWEEN ATOMS 5 AND 7 MUST BE EXPLICITLY
C CALCULATED
      KSTRT=7+NPREIJ
      KFIN=KSTRT
      CALL CAL14
      RETURN
C THIS SECTION IS FOR CALCULATING THE INTRA-RESIDUE 1-4 INTER-
C ACTIONS FOR END GROUPS
 3    KSTRT=MSN14(J,LISTIJ)
      IF(KSTRT.EQ.0) RETURN
      KSTRT=KSTRT+NPREIJ
      KFIN=MFN14(J,LISTIJ)+NPREIJ
      CALL CAL14
      RETURN
      END
      SUBROUTINE INT15
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE 1-5 INTERACTIONS BETWEEN ATOM J
C AND ALL APPROPRIATE ATOMS K IN THE SAME RESIDUE
C
      COMMON/CAL001/KSTRT,KFIN
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
      COMMON/PUT15/NSN15(26,36),MSN15(22,20),MSX15(22,20)
      IF (IFEND.EQ.0) KSTRT=NSN15(J,LISTIJ)
      IF(IFEND.EQ.1) KSTRT=MSN15(J,LISTIJ)
      IF(KSTRT.EQ.0) RETURN
      KSTRT=KSTRT+NPREIJ
      KFIN=JFIN+NPREIJ
      CALL CAL15
      RETURN
      END
      SUBROUTINE PRO37
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE EXPLICITLY CALCULATES THE 1-4 AND 1-5
C INTERACTIONS BETWEEN J AND THE APPROPRIATE ATOMS OF
C RESIDUE IK=IJ+1 WHEN (1) J IS A C3 OR O7, AND (2) IK IS A
C PROLINE OR HYDROXYPROLINE
C
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/CAL001/KSTRT,KFIN
C
C FIRST CALCULATE THE 1-4 INTERACTIONS BETWEEN J AND THE ATOMS
C 2-6 AND 8-14 OF RESIDUE IJ+1
      KSTRT=2+NPREIK
      KFIN=6+NPREIK
      CALL CAL14
      KSTRT=8+NPREIK
      KFIN=14+NPREIK
      CALL CAL14
C NOW CALCULATE THE 1-5 INTERACTIONS BETWEEN J AND THE O7
C (AND H15 IF HYDROXYPROLINE) OF RESIDUE IJ+1
      KSTRT=7+NPREIK
      KFIN=KSTRT
      CALL CAL15
C
C CALCULATE EXPLICITLY THE INTEREACTION BETWEEN ATOM J IN RESIDUE IJ AND
C THE H15 OF THE HYDROXYPROLINE (RESIDUE IK=IJ+1)
      IF (KINDIK.NE.22) RETURN
      KSTRT=15+NPREIK
      KFIN=KSTRT
      CALL CAL15
      RETURN
      END
      SUBROUTINE RDCYS
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CHECKS TO SEE IF THE POLYPEPTIDE CHAIN
C CONTAINS AT LEAST TWO HALF-CYSTINE RESIDUES.  IF SO IT
C READS IN THE APPROPRIATE 'CYSTINE PAIR' (DISULFIDE BRIDGE)
C INFORMATION.
C
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (SSPAIR)
      COMMON/SSPAIR/KSSPER(6,2,MAXSS),JSS(3,MAXSS),KSS(MAXSS2),
     >              LSS(MAXSS2),NPAIR(MAXSS,2)
C
C  KSSPER:    THE ATOM NUMBERS WHICH BELONG TO THE DISULPHITE BONDS
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/CYS001/KCYS,NCYS,NPAIR(MAXSS,2)
      COMMON/CYS001/KCYS
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
C     COMMON/IOUNIT/JREAD
C     LASTFL=INUMRS-1
      LASTFL=NUMRES-1
C     NCYS=0
      NSS=0
      NHALF=0
CDIR@ IVDEP
      DO 1 I=2,LASTFL
      LISTI=LIST(I)
      LISTI=IABS(LISTI)
      KINDI=KNDRES(LISTI)
      IF (KINDI.NE.(-3)) GO TO 1
      NHALF=NHALF+1
 1    CONTINUE
      IF(NHALF.LT.2) RETURN
C     READ (IN21,100) NC,NCYS
      READ (IN21,100) NC,NSS
CC --------------------------
CC    IF (NC.EQ.(-1)) GO TO 2
CC    WRITE (IOUT06,200)
CC    STOP
CC --------------------------
C  2  IF (NCYS.EQ.0)  RETURN
   2  IF (NSS.EQ.0)   RETURN
C     READ (IN21,100) ((NPAIR(K,J),J=1,2),K=1,NCYS)
      READ (IN21,100) ((NPAIR(K,J),J=1,2),K=1,NSS)
      RETURN
 100  FORMAT(16I5)
 200  FORMAT(45H YOU FORGOT THE CYSTINE PAIR DATA...TRY AGAIN)
      END
      SUBROUTINE SPECV
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE READS IN THE DATA BY WHICH THE USER SPECIFIES WHICH
C DIHEDRAL ANGLES, IF ANY, HE WISHES TO TREAT AS VARIABLES.
C SEE THE WRITEUP OF THE MAIN PROGRAM FOR FURTHER DETAILS
C
C KV "BACK" VARIES ALL BACKBONE DIHEDRAL ANGLES
C KV "SIDE" VARIES ALL SIDECHAIN DIHEDRAL ANGLES
C KV "ALL " VARIES ALL DIHEDRAL ANGLES
C KV "SPEC" MEANS THE USER SPECIFIES EXPLICITLY VIA DATA CARDS WHICH
C       DIHEDRAL ANGLES HE WANTS TO VARY
C KV "NONE" MEANS THERE ARE NO VARIABLE DIHEDRAL ANGLES
C
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (SIZE)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (TORSNP)
C TORSNP
C ** ECEPP ORDER
      COMMON/TORSNP/AP(MAXVAR),NBP(MAXVAR),NSP(MAXVAR),IFTORP(MAXVAR)
C
C        : U=A(I){1+NS(I)COS(NB(I)*(DIHEDRAL ANGLE))}
C  AP     : A(I)
C  NBP    : NB(I)
C  NSP    : NS(I)
C  IFTORP : =1,  CALCULTES TORSIONAL ENERGY FOR THE DIHEDRAL ANGLE.
C          =0,  DOES NOT CALCULATE ENERGY FOR THE DIHEDRAL ANGLE.
C  THIS IS A LOCAL COMMON IN PRECEP.
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
C     REAL KV,KV1,KV2,KV3,KV4,KV5
      CHARACTER*4 KV
      COMMON/BONDS/UTOR(MXRS10),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NCHI(36),NDPT1(7,36),
     1   NDPT2(7,36),NUM(7,36)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
C     COMMON/IOUNIT/JREAD
C     COMMON/TORQUE/A(MAXVAR),NB(MAXVAR),NS(MAXVAR),IFTORP(MAXVAR),
C    &              INDXPV(MAXVAR)
      COMMON/TORQUE/INDXPV(MAXVAR)
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
      CHARACTER*4 EALPHA
      DIMENSION LTEMP(10)
C     DATA KV1,KV2,KV3,KV4,KV5/4HBACK,4HSIDE,4HALL ,4HSPEC,4HNONE/
C     DO 1 I=1,INUMRS
CDIR@ IVDEP
      DO 1 I=1,NUMRES
 1    NV(I)=0
C
C SET VARIABLES USED BELOW
C     LASTFL=INUMRS-1
      LASTFL=NUMRES-1
      LAMIN=LIST(1)
C     LCARB=LIST(INUMRS)
      LCARB=LIST(NUMRES)
      KAMIN=KNDEND(LAMIN)
      KCARB=KNDEND(LCARB)
      JFLAG=0
      DO 5 I=2,LASTFL
      LISTI=LIST(I)
      LISTI=IABS(LISTI)
      KINDI=KNDRES(LISTI)
      KINDI=IABS(KINDI)
      IF (KINDI.EQ.22) JFLAG=1
      IF (JFLAG.EQ.1) GO TO 6
 5    CONTINUE
 6    IF (JFLAG.EQ.1) WRITE(IOUT06,600)
C
C SUBROUTINES AMINO AND CBOXL ARE NOT NEEDED IN SPECV BUT
C ARE CALLED HERE FOR CONVENIENCE.  THEY MUST NOT BE CALLED
C BEFORE KAMIN AND KCARB ARE DEFINED ABOVE.
      CALL AMINO
      CALL CBOXL
C
C READ KV
C
C     READ (IN21,100) KV
C ++++++++++++++
      KV = 'ALL '
C ++++++++++++++
      WRITE (IOUT06,200) KV
      NUMVAR=0
C     IF (KV.EQ.KV5) RETURN
C     IF (KV.EQ.KV4) GO TO 40
C     IF (KV.EQ.KV2) GO TO 20
C     IF (KV.NE.KV1.AND.KV.NE.KV3) GO TO 44
C
C BACKBONE
C THIS SECTION IS FOR KV "BACK" OR "ALL "; I.E., ALL BACKBONE ANGLES ARE
C VARIED.
C
C 1ST WE TAKE CARE OF THE NON-END GROUPS
 10   DO 14 I=2,LASTFL
      NV(I)=3
      NOPHI=0
      LISTI=LIST(I)
      LISTI=IABS(LISTI)
      KINDI=KNDRES(LISTI)
      KINDI=IABS(KINDI)
      IF(KINDI.NE.13.AND.KINDI.NE.22) GO TO 12
 11   NOPHI=1
      NV(I)=2
 12   IF (I.NE.LASTFL) GO TO 121
C     LISTN=LIST(INUMRS)
C     KINDN=KNDEND(LISTN)
C     IF (KINDN.NE.20) GO TO 121
      IF (NBOND(LCARB).GT.0)  GOTO  121
      NV(I)=NV(I) - 1
 121  NVR=NV(I)
CDIR@ IVDEP
      DO 13 L=1,NVR
 13   NDXARR(L,I)=L+NOPHI
 14   CONTINUE
C
C NOW WE CONSIDER THE AMINO END
      NDIHED=NBOND(LAMIN)
      NV(1)=NDIHED
      IF(NDIHED.EQ.0) GO TO 16
CDIR@ IVDEP
      DO 15 L=1,NDIHED
 15   NDXARR(L,1)=L
 16   CONTINUE
C
C NOW WE CONSIDER THE CARBOXYL END
      NDIHED=NBOND(LCARB)-1
      IF(NDIHED.LE.0) GO TO 18
C     NV(INUMRS)=NDIHED
      NV(NUMRES)=NDIHED
CDIR@ IVDEP
      DO 17 L=1,NDIHED
C17   NDXARR(L,INUMRS)=L
 17   NDXARR(L,NUMRES)=L
 18   CONTINUE
      NUMVAR=1
C
C DOES THE USER WANT TO VARY ONLY THE BACKBONE DIHEDRAL ANGLES?
CC    IF (KV.EQ.KV1) RETURN
C
C SIDECHAIN
C THIS SECTION IS FOR KV "SIDE" OR "ALL "; I.E., ALL SIDECHAIN ANGLES
C ARE VARIED
C
 20   DO 22 I=2,LASTFL
      LISTI=LIST(I)
      LISTI=IABS(LISTI)
      NUMCHI=NCHI(LISTI)
      IF(NUMCHI.EQ.0) GO TO 22
      NVBACK=NV(I)
      NV(I)=NVBACK+NUMCHI
CDIR@ IVDEP
      DO 21 L=1,NUMCHI
      LP=L+NVBACK
 21   NDXARR(LP,I)=L+3
 22   CONTINUE
      NUMVAR=1
      RETURN
C
C USER SPECIFIES
C THIS SECTION IS USED WHEN THE READER WANTS TO SPECIFY THE ANGLES TO BE
C VARIED.  THE USER GIVES THE RESIDUE NUMBER, THE NUMBER OF VARIABLES IN
C THAT RESIDUE, AND THE ANGLES TO BE VARIED.
C
   40 WRITE (IOUT06,300)
C     DO 42 I=1,INUMRS
      DO 42 I=1,NUMRES
      READ (IN21,400) NRES,NVAR,(LTEMP(K),K=1,NVAR)
      IF (NRES.NE.0) WRITE(IOUT06,500) NRES,NVAR,(LTEMP(K),K=1,NVAR)
C
C NOTICE THAT THE ELEMENTS OF THE NDXARR ARRAY ARE TEMPORARILY STORED
C IN LTEMP.  THIS IS NECESSARY TO PREVENT ERRORS WHEN NRES=0
C (I.E., WHEN THE USER IS SIGNALLING THE END OF HIS DATA.)
C
      NUMVAR=I
      IF(NRES.EQ.0) GO TO 43
CDIR@ IVDEP
      DO 41 L=1,NVAR
 41   NDXARR(L,NRES)=LTEMP(L)
      NV(NRES)=NVAR
 42   CONTINUE
 43   NUMVAR=NUMVAR-1
      RETURN
  44  WRITE (IOUT06,700)
      STOP
  100 FORMAT (A4)
  200 FORMAT(/36H ANGLES TO BE TREATED AS VARIABLES  ,A4)
  300 FORMAT (/10H RES.NO.   ,10H VARIABLES,22H   ANGLES TO BE VARIED)
  400 FORMAT (16I5)
  500 FORMAT (I5,5X,I5,5X,12I5)
 600  FORMAT(/60H THE INTERNAL CONFORMATIONAL ENERGY OF THE FIXED PART O
     1F THE/45H HYDROXYPROLINE RING IS NOT INCLUDED IN EPRO.)
  700 FORMAT (/1X,63HILLEGAL INPUT DATA FOR VARIABLE KV AS READ IN SUBRO
     1UTINE SPECV.)
      END
      SUBROUTINE SSBRIJ
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C
C THIS SUBROUTINE CALCULATES EXTRA ENERGY TERMS, ELOOP AND ECYSTR,
C NEEDED WHEN IJ AND IK ARE THE TWO HALVES OF A WHOLE CYSTINE
C RESIDUE.  (I. E., THERE IS A DISULFIDE BRIDGE BETWEEN
C HALF-RESIDUES IJ AND IK.)
C IT ALSO CALCULATES THE 1-4 AND 1-5 INTERACTIONS BETWEEN
C THE TWO HALF-CYSTINE RESIDUES IJ AND IK. (I. E., IJ AND IK ARE
C THE TWO HALVES OF A WHOLE CYSTINE RESIDUE)
C J REFERS TO THE ATOM IN THE 1ST HALF-CYSTINE RESIDUE IJ, AND
C K REFERS TO THE ATOM IN THE 2ND HALF-CYSTINE RESIDUE
C NB=0 IF THERE IS NO INTERACTION BETWEEN ATOMS J AND K,
C NB=4 IF THERE IS A 1-4 INTERACTION, AND
C NB=5 IF THERE IS A 1-5 INTERACTION
C
      DOUBLE PRECISION EES,ENB,ETOT
      DOUBLE PRECISION ETOR,ECYSTR,ELOOP,DUK,ESAVE,ETHIS
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (CNTL)
C CNTL
C
       COMMON /PRINT/IPRNT
C
C   IPRNT :  PRINT OPTION, 0 PART OUTPUT, 1 ALL OUTPUT
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
      COMMON/CALC/EES,ENB,ETOT,JM,JNB
      COMMON/CAL001/KSTRT,KFIN
      COMMON/CHKN/NIT
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/HEDRAL/ANG1
C     COMMON/IOUNIT/JREAD
      COMMON/NRG1/IJ,IK,LISTIJ,LISTIK,KINDIJ,KINDIK,NPREIJ,NPREIK
      COMMON/NRG2/QJ,J,JSTRT,JFIN,JPRO,KPRO,IFEND,LASTRS
C     COMMON/PRINT/IPRNT
      COMMON/TOR/ETOR,ECYSTR,ELOOP
      COMMON/TORP/AR(8,36),NBB(8,36),NSSX(8,36),NANG(8,36),NTOR(36),
     1  AAN(20),NBBN(20),NSSN(20),NANGN(20)
C     CHARACTER*4 ALPH
      DIMENSION NBCYS(10)
      DIMENSION A1(3),B1(3),S1(3),A2(3),B2(3),S2(3)
      DATA NBCYS/2*5,4,5,0,2*5,2*4,0/
      DATA R01,R02,R03,R04,D0/2.04,3.052,3.052,3.855,1.83/
      DATA C1/57.29578/
C
C IS THIS THE 1ST CALL TO CYS FOR THE IJTH RESIDUE?
      IF (J.NE.JSTRT) GO TO 130
      IA1=NPREIJ+3
      IB1=NPREIJ+5
      IS1=NPREIJ+10
      IA2=NPREIK+3
      IB2=NPREIK+5
      IS2=NPREIK+10
CDIR@ IVDEP
      DO 110 L=1,3
      A1(L)=REFCRD(L,IA1)
      B1(L)=REFCRD(L,IB1)
      S1(L)=REFCRD(L,IS1)
      A2(L)=REFCRD(L,IA2)
      B2(L)=REFCRD(L,IB2)
      S2(L)=REFCRD(L,IS2)
  110 CONTINUE
      ESAVE=ELOOP
      D1=DST(S1,S2)
      ELOOP=ELOOP+100.*(D1-R01)**2
      D2=DST(B1,S2)
      ELOOP=ELOOP+100.*(D2-R02)**2
      D3=DST(S1,B2)
      ELOOP=ELOOP+100.*(D3-R03)**2
      D4=DST(B1,B2)
      UK =AR(3,LISTIJ)*(D4-R04)**2
      DUK=UK
      ECYSTR=ECYSTR+DUK
      CALL DIHANG(A1,B1,S1,S2)
      ENSS=FLOAT(NSSX(2,LISTIJ))
      ENBB=FLOAT(NBB(2,LISTIJ))
      UK2=AR(2,LISTIJ)*(1.+ENSS*COS(ENBB*ANG1))
      ANG2=C1*ANG1
      DUK=UK2
      ECYSTR=ECYSTR+DUK
      CALL DIHANG(S1,S2,B2,A2)
      UK3=AR(2,LISTIJ)*(1.+ENSS*COS(ENBB*ANG1))
      ANG3=C1*ANG1
      DUK=UK3
      ECYSTR=ECYSTR+DUK
      IF (IPRNT.NE.1) GO TO 130
      ETHIS=ELOOP-ESAVE
      THETA1=C1*DACOS((D0**2+D1**2-D2**2)/(2.*D0*D1))
      THETA2=C1*DACOS((D0**2+D1**2-D3**2)/(2.*D0*D1))
      CALL DIHANG(B1,S1,S2,B2)
      ANG1=C1*ANG1
      WRITE (IOUT06,100) IJ,IK
      WRITE (IOUT06,200)
      WRITE (IOUT06,300) D1,D2,D3,D4
      WRITE (IOUT06,400)
      WRITE (IOUT06,500) THETA1,THETA2
      WRITE (IOUT06,600)
      WRITE (IOUT06,700) ANG1,UK,ANG2,UK2,ANG3,UK3
      WRITE (IOUT06,800) ETHIS
  130 CONTINUE
C
C STEP ATOM
      DO 140 K=1,10
      NB=5
      IS13=IJ+2
      IF (J.NE.6.OR.K.NE.1.OR.IS13.NE.IK.OR.NIT.NE.1) GO TO 135
      NB=4
      NIT=0
  135 CONTINUE
      IF(J.EQ.5.AND.K.EQ.5) NB=4
      IF(J.EQ.10) NB=NBCYS(K)
      IF(K.EQ.10) NB=NBCYS(J)
      IF(NB.EQ.0) GO TO 140
      KM=K+NPREIK
      KSTRT=KM
      KFIN=KM
      IF (NB.EQ.4) CALL CAL14
      IF (NB.EQ.5) CALL CAL15
  140 CONTINUE
      RETURN
  100 FORMAT (/39H GEOMETRY AND ENERGIES FOR CYSTINE PAIR,I4,1X,I3)
  200 FORMAT (/28X,8HDISTANCE/8X,5HATOMS,14X,11H(ANGSTROMS))
  300 FORMAT (/5X,8HSG1  SG2,12X,F11.3/5X,8HCB1  SG2,12X,F11.3/
     1 5X,8HSG1  CB2,12X,F11.3/5X,8HCB1  CB2,12X,F11.3)
  400 FORMAT (/27X,10HBOND ANGLE/28X,9H(DEGREES))
  500 FORMAT (/5X,13HCB1  SG1  SG2,10X,F8.3/5X,13HSG1  SG2  CB2,
     1 10X,F8.3)
  600 FORMAT (/25X,14HDIHEDRAL ANGLE,6X,16HTORSIONAL ENERGY/
     1 28X,9H(DEGREES),11X,11H(KCAL/MOLE))
  700 FORMAT (/5X,18HCB1  SG1  SG2  CB2,5X,F8.3,12X,F8.3
     1        /5X,18HCA1  CB1  SG1  SG2,5X,F8.3,12X,F8.3
     2        /5X,18HSG1  SG2  CB2  CA2,5X,F8.3,12X,F8.3)
  800 FORMAT (/5X,47HLOOP-CLOSING ENERGY FOR THIS PAIR (KCAL/MOLE) =,
     1 E12.5)
      END
      SUBROUTINE TORTOT
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE CALCULATES THE INITIAL TOTAL TORSIONAL ENERGY
C (ETOR) OF THE POLYPEPTIDE CHAIN.  IT STORES THE INDIVIDUAL
C TERMS IN ARRAY UTOR.
C
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      DOUBLE PRECISION DUK,ETOR,ECYSTR,ELOOP
      COMMON/BONDS/UTOR(MXRS10),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/TOR/ETOR,ECYSTR,ELOOP
      COMMON/TORP/AR(8,36),NBB(8,36),NSSX(8,36),NANG(8,36),NTOR(36),
     1  AAN(20),NBBN(20),NSSN(20),NANGN(20)
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
      CHARACTER*4 EALPHA
      DIMENSION ANGONE(10*MAXRES)
      EQUIVALENCE (ANGRAD(1,1),ANGONE(1))
C
C     LASTFL=INUMRS-1
      LASTFL=NUMRES-1
      ETOR=0.0D0
C     IRES10=10*INUMRS
      IRES10=10*NUMRES
CDIR@ IVDEP
      DO 10 L=1,IRES10
 10   UTOR(L)=0.0
C
C DO TORSIONAL TOTAL HERE, STARTING WITH THE END GROUPS
C
C DOES THE AMINO END GROUP HAVE A TORSIONAL TERM?
      IF (KAMIN.GE.0) GO TO 20
C
C CALCULATE THE TORSIONAL TERM FOR THE LAST DIHEDRAL ANGLE OF
C THE AMINO END GROUP
      IANG=NBOND(LAMIN)
      UK=10.*(1.-COS(2.*ANGONE(IANG)))
      UTOR(IANG)=UK
      DUK=UK
      ETOR=ETOR+DUK
C
C STEP FULL RESIDUES
C NOW WE CALCULATE THE NON-END GROUP CONTRIBUTIONS TO THE TORSIONAL
C ENERGY
 20   DO 50 I=2,LASTFL
      I10=10*(I-1)
      IANG=I10+3
C
C 1ST CALCULATE OMEGA CONTRIBUTION
C
C THE THIRD BACKBONE ANGLE OF THE NEXT TO THE LAST RESIDUE
C WILL BE CONSIDERED LATER.
      IF(I.EQ.LASTFL) GO TO 30
      UK=10.*(1.-COS(2.*ANGONE(IANG)))
      UTOR(IANG)=UK
      DUK=UK
      ETOR=ETOR+DUK
 30   LISTI=LIST(I)
      LISTI=IABS(LISTI)
C
C ALL RESIDUES WITH THE EXCEPTION OF GLYCINE AND PROLINE MAKE
C SIDECHAIN CONTRIBUTIONS TO THE TORSIONAL ENERGY.  THESE SIDECHAIN
C TERMS (EXCEPT FOR THE SPECIAL CASE OF CYSTINE) ARE CALCULATED NOW.
C
      NKT=NTOR(LISTI)
      KINDI=KNDRES(LISTI)
C
C DOES THE ITH RESIDUE HAVE A SIDECHAIN TORSIONAL TERM?
C
      IF(KINDI.GE.0) GO TO 50
      IF (KINDI.EQ.(-3)) NKT=1
CDIR@ IVDEP
      DO 31 J=1,NKT
      NA=NANG(J,LISTI)
      IANG=I10+NA
      ANG=ANGONE(IANG)
      ENSS=FLOAT(NSSX(J,LISTI))
      ENBB=FLOAT(NBB(J,LISTI))
      UK=AR(J,LISTI)*(1.+ENSS*COS(ENBB*ANG))
      UTOR(IANG)=UK
      DUK=UK
      ETOR=ETOR+DUK
  31  CONTINUE
 50   CONTINUE
C
C DOES THE DIHEDRAL ANGLE BETWEEN THE LAST FULL RESIDUE AND
C THE CARBOXYL END GROUP HAVE A TORSIONAL TERM?
      IF(KCARB.GE.0) RETURN
C     IANG=(INUMRS-2)*10+3
      IANG=(NUMRES-2)*10+3
      ANG=ANGONE(IANG)
C     ENSSN=FLOAT(NSSN(LCARB))
C     ENBBN=FLOAT(NBBN(LCARB))
      UK=AAN(LCARB)*(1.+FLOAT(NSSN(LCARB))*COS(FLOAT(NBBN(LCARB))*ANG))
      UTOR(IANG)=UK
      DUK=UK
      ETOR=ETOR+DUK
  310 IF (KCARB.NE.(-18)) RETURN
C     IANG=(INUMRS-1)*10+2
      IANG=(NUMRES-1)*10+2
      ANG=ANGONE(IANG)
      UK=1.35*(1.+COS(3.*ANG))
      UTOR(IANG)=UK
      DUK=UK
      ETOR=ETOR+DUK
      RETURN
      END
C********************************************************************
C                                                                   *
C               SUPPLEMENTARY PROGRAMS                              *
C                                                                   *
C********************************************************************
      SUBROUTINE  PREP
      IMPLICIT REAL*8(A-H,O-Z)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
      REAL*8  EES,ENB,ETOT
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (INTER0)
C INTER0
C
      COMMON/INTER0/INTER(MAXATM),INTATM(3,MAXLEN)
C
C  INTER :    POINTER TO INTATM
C  INTATM:
C    IN ECEPPENERGY FUNCTION, THE NON-BONDED INTERACTION IS DEVIDED
C    INTO 1-4 PAIRS AND 1-5 PAIRS. INTATM IS A TABLE FOR THE ATOM
C    PAIRS OF THE TWO TYPES OF INTERACTIONS.
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
      COMMON/CALC/EES,ENB,ETOT,JM,JJ
      COMMON/CAL001/KSTRT,KFIN
C     COMMON/IOUNIT/JREAD
C     COMMON/PREPAR/LNUM,JMLAST,KMLAST,LNUMS,LEN,NATM
      COMMON/PREPAR/LNUM,JMLAST,KMLAST,LNUMS,LEN
C     COMMON/RUNS/INTER(3,MAXLEN)
C
C
      IF (LEN.GT.MAXLEN)  THEN
        WRITE(6,700)
        STOP
      ENDIF
      ISKIP = JM-JMLAST-1
      JRUN = KFIN-KSTRT+1
      IF (LNUM.EQ.4)  GO TO  210
C
C THIS SECTION IS FOR 1-5'S
C
      IF (LNUMS.EQ.5)  GO TO  110
C
C THE LAST CALL WAS FROM CAL14
C
      IF (JM.NE.JMLAST)  GO TO  100
      I5RUN = JRUN
      NEXT = KMLAST+1
      IF (KSTRT.NE.NEXT)  GO TO  50
      RETURN
C
C THE CURRENT RUN OF 1-5'S DOES NOT FOLLOW CONSECUTIVELY THE RUN OF
C 1-4'S FOR THIS JM.
C
C 50  INTER(1,LEN) = IOFF
C     INTER(2,LEN) = I4RUN
C     INTER(3,LEN) = 0
  50  INTATM(1,LEN) = IOFF
      INTATM(2,LEN) = I4RUN
      INTATM(3,LEN) = 0
      LEN = LEN+1
      IOFF = KSTRT-JM
      I4RUN = 0
      RETURN
C
C THERE ARE NO 1-5'S FOR THE PREVIOUS JM AND (SO FAR) NO 1-4'S FOR THE
C CURRENT JM.
C
  100 KEY = 0
C     INTER(1,LEN) = IOFF
C     INTER(2,LEN) = I4RUN
C     INTER(3,LEN) = KEY
      INTATM(1,LEN) = IOFF
      INTATM(2,LEN) = I4RUN
      INTATM(3,LEN) = KEY
      LEN = LEN + 1
      IOFF = 0
      I4RUN = 0
C     INTER(1,LEN) = IOFF
C     INTER(2,LEN) = I4RUN
C     INTER(3,LEN) = KEY
      INTATM(1,LEN) = IOFF
      INTATM(2,LEN) = I4RUN
      INTATM(3,LEN) = KEY
      LEN = LEN + 1
      GO TO  130
C
C THE LAST CALL WAS FROM CAL15
C
  110 IF (JM.NE.JMLAST)  GO TO  120
      KSKIP = KSTRT-KMLAST-1
      IF (KSKIP.GT.0)  GO TO  120
      I5RUN = I5RUN + JRUN
      RETURN
C
C THERE ARE NO 1-4'S FOR THE CURRENT ATOM JM
C OR 1-5'S FOR ATOM JM ARE NOT CONSECUTIVE.
C
  120 KEY = I5RUN
C     IF (KMLAST.EQ.NATM) KEY=JMLAST+IOFF+I4RUN-NATM-2
      IF (KMLAST.EQ.NUMATM) KEY=JMLAST+IOFF+I4RUN-NUMATM-2
C     INTER(1,LEN) = IOFF
C     INTER(2,LEN) = I4RUN
C     INTER(3,LEN) = KEY
      INTATM(1,LEN) = IOFF
      INTATM(2,LEN) = I4RUN
      INTATM(3,LEN) = KEY
      LEN = LEN + 1
C     IF (JM.NE.JMLAST.AND.KMLAST.NE.NATM)  THEN
      IF (JM.NE.JMLAST.AND.KMLAST.NE.NUMATM)  THEN
C       INTER(1,LEN) = 0
C       INTER(2,LEN) = 0
C       INTER(3,LEN) = 0
        INTATM(1,LEN) = 0
        INTATM(2,LEN) = 0
        INTATM(3,LEN) = 0
        LEN = LEN + 1
      ENDIF
  130 I4RUN = 0
      I5RUN = JRUN
      IOFF = KSTRT-JM
      RETURN
C
C THIS SECTION IS FOR 1-4'S
C
  210 IF (LNUMS.EQ.4)  GO TO  220
      IF (LNUMS.EQ.0)  GO TO  235
C
C THE LAST CALL WAS FROM CAL15 SO PRINT OFFSET, LENGTH OF RUN, KEY.
C
      KEY = I5RUN
C     IF (KMLAST.EQ.NATM) KEY=JMLAST+IOFF+I4RUN-NATM-2
      IF (KMLAST.EQ.NUMATM) KEY=JMLAST+IOFF+I4RUN-NUMATM-2
C     INTER(1,LEN) = IOFF
C     INTER(2,LEN) = I4RUN
C     INTER(3,LEN) = KEY
      INTATM(1,LEN) = IOFF
      INTATM(2,LEN) = I4RUN
      INTATM(3,LEN) = KEY
      LEN = LEN + 1
C
C     IF (ISKIP.EQ.0.AND.KMLAST.NE.NATM)  GO TO  240
      IF (ISKIP.EQ.0.AND.KMLAST.NE.NUMATM)  GO TO  240
      IF (ISKIP.LE.0)  GO TO  150
CDIR@ IVDEP
      DO  140  I = 1, ISKIP
C     INTER(1,LEN) = 0
C     INTER(2,LEN) = 0
C     INTER(3,LEN) = 0
      INTATM(1,LEN) = 0
      INTATM(2,LEN) = 0
      INTATM(3,LEN) = 0
      LEN = LEN + 1
  140 CONTINUE
  150 CONTINUE
C
      I4RUN = JRUN
      IOFF = KSTRT-JM
      RETURN
C
C THE LAST CALL WAS FROM CAL14
C
  220 KSUM = KMLAST+1
      IF (KSUM.NE.KSTRT)  GO TO  230
C
C THIS RUN FOLLOWS CONSECUTIVELY THE LAST 1-4 RUN
C
      I4RUN = I4RUN+JRUN
      RETURN
C
C THIS 1-4 RUN DOES NOT FOLLOW CONSECUTIVELY THE LAST 1-4 RUN.
C
  230 KEY = 0
C     INTER(1,LEN) = IOFF
C     INTER(2,LEN) = I4RUN
C     INTER(3,LEN) = KEY
      INTATM(1,LEN) = IOFF
      INTATM(2,LEN) = I4RUN
      INTATM(3,LEN) = KEY
      LEN = LEN + 1
      IF (JM.NE.JMLAST)  GO TO  240
  235 I4RUN = JRUN
      IOFF = KSTRT-JM
      RETURN
C
C THIS IS A NEW ATOM JM, AND THE LAST JM HAD A 1-4 RUN NOT
C FOLLOWED BY 1-5'S.
C
  240 I4RUN = 0
      IOFF = 0
      KEY = 0
C     INTER(1,LEN) = IOFF
C     INTER(2,LEN) = I4RUN
C     INTER(3,LEN) = KEY
      INTATM(1,LEN) = IOFF
      INTATM(2,LEN) = I4RUN
      INTATM(3,LEN) = KEY
      LEN = LEN + 1
      I4RUN = JRUN
      IOFF = KSTRT-JM
      RETURN
C
C
  700 FORMAT('0  **ERROR MESSAGE FROM THE SUBROUTINE PREP. ' /
     &  '    LEN HAS EXCEEDS MAXLEN.  ASSIGN A GREATER NUMBER TO',
     &  ' MAXLEN IN THE PARAMETER STATEMENTS AND TRY AGAIN.')
      END
      SUBROUTINE CAL14
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS VERSION IS FOR GENERATION OF DATA FOR THE AP
C
      REAL*8 EES,ENB,ETOT
C     INCLUDE (SIZE)
      COMMON/CALC/EES,ENB,ETOT,JM,JJ
      COMMON/CAL001/KSTRT,KFIN
C     COMMON/PREPAR/LNUM,JMLAST,KMLAST,LNUMS,LEN,NATM
      COMMON/PREPAR/LNUM,JMLAST,KMLAST,LNUMS,LEN
      LNUM = 4
      CALL  PREP
      JMLAST = JM
      KMLAST = KFIN
      LNUMS = 4
      RETURN
      END
      SUBROUTINE  CAL15
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS VERSION IS FOR GENERATION OF DATA FOR THE AP
C
      REAL*8 EES,ENB,ETOT
C     INCLUDE (SIZE)
      COMMON/CALC/EES,ENB,ETOT,JM,JJ
      COMMON/CAL001/KSTRT,KFIN
C     COMMON/PREPAR/LNUM,JMLAST,KMLAST,LNUMS,LEN,NATM
      COMMON/PREPAR/LNUM,JMLAST,KMLAST,LNUMS,LEN
      LNUM = 5
      CALL  PREP
      JMLAST = JM
      KMLAST = KFIN
      LNUMS = 5
      RETURN
      END
      SUBROUTINE  INPUT
      IMPLICIT REAL*8(A-H,O-Z)
C     CHARACTER TITLE*80
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
      COMMON/GEN002/ CHIANG(3,7,36),NATOMS(36),NCHI(36),NDPT1(7,36),
     &   NDPT2(7,36),NUM(7,36)
      COMMON/GEN004/ ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     &   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GEN016/ NUNITA(36),NMUNTA(26,36),NMNEWA(26,36),
     &   NEWKA(10,36),NEDGEA(2,10,36),IBCHRA(3,10,36),IFRNTA(10,36),
     &   IUATMA(0:9,36),NBCKA(0:9,36),IBCKA(2,0:9,36)
      COMMON/GEN032/ NUNITE(20),NMUNTE(18,20),NMNEWE(18,20),
     &   NEWKE(3,20),NEDGEE(2,3,20),IBCHRE(3,3,20),IFRNTE(3,20),
     &   IUATME(0:2,20),NBCKE(0:2,20),IBCKE(2,0:2,20)
      COMMON/GEN064/ NMDPLA(36),NLDPLA(36),NDATMA(36),KUNDPA(5,36),
     &   CHRGA(2,5,36),LSTDPA(5,36),LSTAMA(28,36),JATDPA(8,36),
     &   CHRGAX(8,36),JCLDPA(8,36)
      COMMON/GEN128/ NMDPLE(20),NLDPLE(20),NDATME(20),KUNDPE(5,20),
     &   CHRGE(2,5,20),LSTDPE(5,20),LSTAME(28,20),JATDPE(8,20),
     &   CHRGEX(8,20),JCLDPE(8,20),NEXTNE(20)
      COMMON/PRAM/  NREG,NEND,LR(6,20),LRT1(7,36)
      CHARACTER*4 EALPHA
      DATA  IN25/25/
C
C THE FOLLOWING SECTION IS FOR FULL AMINO ACID RESIDUES
C
      DO  130  I = 1, NREG
      NNN = NATOMS(I)
      READ(IN25,1000)  TITLE
      READ(IN25,1010)  NUNITA(I),(NMUNTA(L,I),L=1,NNN)
      READ(IN25,1020)  (NMNEWA(L,I),L=1,NNN)
      NJJ = NUNITA(I)
      DO  100  J = 1, NJJ
      J1 = J - 1
  100 READ(IN25,1030)  NEWKA(J,I),(NEDGEA(L,J,I),L=1,2),
     &  (IBCHRA(L,J,I),L=1,3),IFRNTA(J,I),
     &  IUATMA(J1,I),NBCKA(J1,I),(IBCKA(L,J1,I),L=1,2)
      READ(IN25,1040)  NMDPLA(I),NLDPLA(I),NDATMA(I)
      NJJ = NMDPLA(I)
      DO  110  J = 1, NJJ
  110 READ(IN25,1050)  KUNDPA(J,I),(CHRGA(L,J,I),L=1,2),LSTDPA(J,I)
      NJJ = NLDPLA(I)
      READ(IN25,1060)  (LSTAMA(J,I),J=1,NJJ)
      NJJ = NDATMA(I)
      IF (NJJ.LE.0)  GOTO  130
      DO  120  J = 1, NJJ
  120 READ(IN25,1070)  JATDPA(J,I),CHRGAX(J,I),JCLDPA(J,I)
  130 CONTINUE
C
C THE FOLLOWING SECTION IS FOR END GROUPS
C
      DO  230  I = 1, 20
      NNN = NDATOM(I)
      READ(IN25,1000)  TITLE
      READ(IN25,1010)  NUNITE(I),(NMUNTE(L,I),L=1,NNN)
      READ(IN25,1020)  (NMNEWE(L,I),L=1,NNN)
      NJJ = NUNITE(I)
      IF (NJJ.GT.0)  THEN
      DO  200  J = 1, NJJ
      J1 = J - 1
  200 READ(IN25,1030)  NEWKE(J,I),(NEDGEE(L,J,I),L=1,2),
     &  (IBCHRE(L,J,I),L=1,3),IFRNTE(J,I),
     &  IUATME(J1,I),NBCKE(J1,I),(IBCKE(L,J1,I),L=1,2)
      ENDIF
      READ(IN25,1040)  NMDPLE(I),NLDPLE(I),NDATME(I),NEXTNE(I)
      NJJ = NMDPLE(I)
      IF (NJJ.GT.0)  THEN
      DO  210  J = 1, NJJ
  210 READ(IN25,1050)  KUNDPE(J,I),(CHRGE(L,J,I),L=1,2),LSTDPE(J,I)
      ENDIF
      NJJ = NLDPLE(I)
      IF (NJJ.GT.0)  READ(IN25,1060)  (LSTAME(J,I),J=1,NJJ)
      NJJ = NDATME(I)
      IF (NJJ.GT.0)  THEN
      DO  220  J = 1, NJJ
  220 READ(IN25,1070)  JATDPE(J,I),CHRGEX(J,I),JCLDPE(J,I)
      ENDIF
  230 CONTINUE
      RETURN
 1000 FORMAT(A80)
 1010 FORMAT(I3,1X,38I2)
 1020 FORMAT(4X,38I2)
 1030 FORMAT(4X,I3,1X,2I3,2X,3I2,I4,5X,I3,2X,3I2)
 1040 FORMAT(4I5)
 1050 FORMAT(I7,2F10.2,I3)
 1060 FORMAT(26I3)
 1070 FORMAT(I7,F10.2,I3)
      END
      SUBROUTINE  OUT1
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE PUNCHOUTS THE DATA FOR THE FAST ECEPP
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (TORSNP)
C TORSNP
C ** ECEPP ORDER
      COMMON/TORSNP/AP(MAXVAR),NBP(MAXVAR),NSP(MAXVAR),IFTORP(MAXVAR)
C
C        : U=A(I){1+NS(I)COS(NB(I)*(DIHEDRAL ANGLE))}
C  AP     : A(I)
C  NBP    : NB(I)
C  NSP    : NS(I)
C  IFTORP : =1,  CALCULTES TORSIONAL ENERGY FOR THE DIHEDRAL ANGLE.
C          =0,  DOES NOT CALCULATE ENERGY FOR THE DIHEDRAL ANGLE.
C  THIS IS A LOCAL COMMON IN PRECEP.
CMSP  INCLUDE (TORSN0)
C TORSN0
C
      COMMON/TORSN0/A(MAXVAR),NB(MAXVAR),NS(MAXVAR),IFTOR(MAXVAR)
C
C        : U=A(I){1+NS(I)COS(NB(I)*(DIHEDRAL ANGLE))}
C  A     : A(I)
C  NB    : NB(I)
C  NS    : NS(I)
C  IFTOR : =1,  CALCULTES TORSIONAL ENERGY FOR THE DIHEDRAL ANGLE.
C          =0,  DOES NOT CALCULATE ENERGY FOR THE DIHEDRAL ANGLE.
CMSP  INCLUDE (VARANG)
C VARANG
C
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (ATOM)
C ATOM
C
      COMMON/ATOM00/KUNIT(MAXATM),KATOM(MXATM1),JATOM(MAXATM)
      COMMON/ATOM01/LATOM0(0:MAXVAR),LATOM1(MAXATM)
C
C  KUNIT:  UNIT NUMBER WHICH THE ATOM BELONGS TO.
C  KATOM:  SEQUENTIAL NUMBER OF THE ATOM IN WAKO ORDER.
C  JATOM:  SEQUENTIAL NUMBER OF THE ATOM IN ECEPP ORDER.
C   EXAMPLE:
C   ECEPP  WAKO         WAKO     ECEPP
C    1    KATOM(1)       1      JATOM(1)
C    2    KATOM(2)       2      JATOM(2)
C    3    KATOM(3)       3      JATOM(3)
C    .      .            .        .
C    .      .            .        .
C
C  LATOM0:
C  LATOM1:
C
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (INTER0)
C INTER0
C
      COMMON/INTER0/INTER(MAXATM),INTATM(3,MAXLEN)
C
C  INTER :    POINTER TO INTATM
C  INTATM:
C    IN ECEPPENERGY FUNCTION, THE NON-BONDED INTERACTION IS DEVIDED
C    INTO 1-4 PAIRS AND 1-5 PAIRS. INTATM IS A TABLE FOR THE ATOM
C    PAIRS OF THE TWO TYPES OF INTERACTIONS.
CMSP  INCLUDE (BOND)
C BOND
C
      COMMON/BOND00/DIRCOS(3,MAXVAR),IBND1(MAXVAR),IBND2(0:MVAR1)
      COMMON/BOND01/IBCHAR(3,MAXVAR)
C
C  DIRCOS:  DIRECTION COSINE FOR THE BOND
C  IBND1:   ATOM NUMBER OF AN END ATOM OF THE BOND
C  IBND2:   ATOM NUMBER OF AN END ATOM OF THE BOND (IBOND1<IBOND2)
C  IBCHAR:  THREE INTGERS WHICH CHARACTERIZE THE BOND
C
CMSP  INCLUDE (TABLE1)
C TABLE1
C
      COMMON/TABLE1/IFRONT(MAXVAR),NBACK(0:MAXVAR),IBACK(2,0:MAXVAR)
C
C  IFRONT:  UNIT NUMBER PRECEDING TO THE I-TH BOND ANGLE
C  NBACK : NUMBER OF DIHEDRAL ANGLES BEYOND THE UNIT
C  IBACK : THE NUMBER OF THE DIHEDRAL ANGLE (IN WAKO ORDER). IF
C          THERE IS NO DIHEDRAL ANGLE BEYOND THE UNIT (EG. AT THE END)
C          IBACK=0.
CMSP  INCLUDE (UNITNUMS)
C  UNITNUMS.CMN
C
C  THIS FILE CONTAINS THE  COMMON BLOCK NECESSARY
C  TO ASSIGN ALL I/0 UNIT NUMBERS. A SUMMARY OF ALL I/O FILES USED BY
C  IMPACT APPEARS BELOW, ORGANIZED BY TASK.
C
C
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (SSPAIR)
C SSPAIR
C
      COMMON/SSPAIR/KSSPER(6,2,MAXSS),JSS(3,MAXSS),KSS(MAXSS2),
     >              LSS(MAXSS2),NPAIR(MAXSS,2)
C
C  KSSPER:    THE ATOM NUMBERS WHICH BELONG TO THE DISULPHITE BONDS
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
CKM DEBUG
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
CKM DEBUG
C     COMMON/CYS001/ KCYS,NCYS,NPAIR(MAXSS,2)
      COMMON/CYS001/ KCYS
C     COMMON/IOUNIT/ JREAD
C     COMMON/TORQUE/ A(MAXVAR),NB(MAXVAR),NS(MAXVAR),IFTORP(MAXVAR),
C    &               INDXPV(MAXVAR)
      COMMON/TORQUE/ INDXPV(MAXVAR)
C     COMMON/TOR2/  LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/  LAMIN,KAMIN,LCARB,KCARB
C     COMMON/RUNS/  INTER(3,MAXLEN)
      COMMON/UNITS/  NPREU(0:MAXVAR)
      COMMON/NEWOLD/ NMUNIT(MAXATM),NUMNEW(MAXATM)
C     COMMON/DIHED/ INDEX(2,MAXVAR),NEDGE(2,MAXVAR),IFRONT(MAXVAR),
C    &   IBCHAR(3,MAXVAR),IUATM(0:MAXVAR),
C    &   NBACK(0:MAXVAR),IBACK(2,0:MAXVAR),
C    &   NEWK(MAXVAR)
      COMMON/DIHED/ INDEX(2,MAXVAR),IUATM(0:MAXVAR),NEWK(MAXVAR)
      COMMON/DIPOL/ NUMDPL,NLDPL,NDPATM,KUNDPL(MAXDP),CHRGDP(MAXDP2),
     &   LSTDPL(MAXDP),LSTAMB(MAXDPL),JATDPL(MAXDBL),CHRGAM(MAXDBL),
     &   JCLDPL(MAXDBL)
C     COMMON/GEN100/ INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/ NPRE(MXRS1)
C     DIMENSION INTERR(MAXATM)
      CHARACTER*4  AANAME(36)
      DATA  AANAME /'ALA','ASP','CYS','GLU','PHE','GLY',
     &  'HIS','ILE','LYS','LEU','MET','ASN','PRO','GLN','ARG','SER',
     &  'THR','VAL','TRP','TYR','CYS','HPR','NLE','ORN','ORN+','HIS2',
     &  'HIS+','LYS+','ARG+','ASB','ASP-','GLU-',
     &  'PROU','PROF','HPRU','HPRF'/
C     CHARACTER*4 ALPH
      DATA  RCUT /7.D0/, IZERO /0/
CC---- FOLLOWING SECTION IS NOT NECCESSARY HERE ------------------|
C                                                                 |
C MAKE THE LIST  INTERR                                           |
C                                                                 |
C     DO  5  J = 1, 3                                             |
C  5  INTER(J,LEN) = 0                                            |
C  5  INTATM(J,LEN) = 0                                           |
C     NATM = NPRE(INUMRS+1)                                       |
C     NATM = NPRE(NUMRES+1)                                       |
C     INTERR(1) = 1                                               |
C     INTER(1) = 1                                                |
C     IXI = 2                                                     |
C     DO  10  I = 1, LEN                                          |
C       INTER2 = INTER(2,I)                                       |
C       INTER3 = INTER(3,I)                                       |
C       INTER2 = INTATM(2,I)                                      |
C       INTER3 = INTATM(3,I)                                      |
C       IF (INTER3.LT.0.OR.(INTER2.EQ.0.AND.INTER3.EQ.0))  THEN   |
C         INTERR(IXI) = I + 1                                     |
C         INTER(IXI) = I + 1                                      |
C         IXI = IXI + 1                                           |
C       ENDIF                                                     |
C 10  CONTINUE                                                    |
C     IF (IXI.GT.NATM) GOTO  22                                   |
C       DO  20  I = IXI, NATM                                     |
C 20    INTERR(I) = INTERR(I-1) + 1                               |
C 20    INTER(I) = INTER(I-1) + 1                                 |
C 22  IALL = INTERR(NATM)                                         |
C 22  IALL = INTER(NATM)                                          |
C     IF (LEN.GE.IALL)  GOTO  32                                  |
C       DO  30  I = LEN+1, IALL                                   |
C       DO  30  J = 1, 3                                          |
C 30    INTER(J,I) = 0                                            |
C 30    INTATM(J,I) = 0                                           |
CC--- ABOVE SECTION IN NOT NECCESARY HERE ------------------------|
C
C OUTPUT
C
  32  WRITE(IOUT22,100)  TITLE
C     WRITE(IOUT22,110)  NATM,NUMVAR,INUMRS,IALL,NCYS
      WRITE(IOUT22,110)  NUMATM,NUMVAR,NUMRES,NUMINT,NSS
      CALL  OUT2
      WRITE(IOUT22,130)  IUATM(0),NBACK(0),(IBACK(J,0),J=1,2),IZERO
C     NNUNIT = NPREU(INUMRS)
      NNUNIT = NPREU(NUMRES)
      DO  40  I = 1, NNUNIT-1
      K = NEWK(I)
CC ---------------- CUT ------------------|
CC    AP(K)=A(K)                          |
CC    NBP(K)=NB(K)                        |
CC    NSP(K)=NS(K)                        |
CC    IFTOR(K)=IFTORP(K)                  |
CC    INDXV(I)=INDEX(1,I)*100+INDEX(2,I)  |
CC ---------------- CUT ------------------|
C     WRITE(IOUT22,140)  (INDEX(J,I),J=1,2),(NEDGE(J,I),J=1,2),IFRONT(I)
C    &    ,(IBCHAR(J,I),J=1,3),A(K),NB(K),NS(K),IFTORP(K),
C    &    IUATM(I),NBACK(I),(IBACK(J,I),J=1,2),I
      WRITE(IOUT22,140)  (INDEX(J,I),J=1,2),IBND1(I),IBND2(I),IFRONT(I)
     &    ,(IBCHAR(J,I),J=1,3),AP(K),NBP(K),NSP(K),IFTORP(K),
     &    IUATM(I),NBACK(I),(IBACK(J,I),J=1,2),I
 40   CONTINUE
CC ---------------- CUT ------------------|
CC    DO 35 I=1,NUMVAR                    |
CC      J=INDXV(I)/100                    |
CC      K=INDXV(I)-100*J                  |
CC      REFANG(I) = ANGRAD(K,J)           |
C 35   CONTINUE                           |
CC ---------------- CUT ------------------|
      K = 1
      DO  50  I = 1, NPRE(2)
      WRITE(IOUT22,150)  (REFCRD(J,I),J=1,3),CHARGE(I),NBTYPE(I),
     &     NMUNIT(I),NUMNEW(I),I,ATNAME(I),AANAME(LIST(2)),K
CC --------------- CUT -------------------|
CC    KATOM(I)=NUMNEW(I)                  |
CC    JATOM(KATOM(I))=I                   |
CC    RENAME(I)=AANAME(LIST(2))           |
CC    NMBRES(I)=K                         |
CC --------------- CUT -------------------|
 50   CONTINUE
C     DO  52  K = 2, INUMRS-1
      DO  52  K = 2, NUMRES-1
      DO  52  I = NPRE(K)+1, NPRE(K+1)
      WRITE(IOUT22,150)  (REFCRD(J,I),J=1,3),CHARGE(I),NBTYPE(I),
     &     NMUNIT(I),NUMNEW(I),I,ATNAME(I),AANAME(LIST(K)),K-1
CC --------------- CUT -------------------|
CC    KATOM(I)=NUMNEW(I)                  |
CC    JATOM(KATOM(I))=I                   |
CC    RENAME(I)=AANAME(LIST(K))           |
CC    NMBRES(I)=K-1                       |
CC --------------- CUT -------------------|
 52   CONTINUE
C     K = INUMRS-1
      K = NUMRES-1
C     DO  54  I = NPRE(INUMRS)+1, NPRE(INUMRS+1)
      DO  54  I = NPRE(NUMRES)+1, NPRE(NUMRES+1)
      WRITE(IOUT22,150)  (REFCRD(J,I),J=1,3),CHARGE(I),NBTYPE(I),
     &     NMUNIT(I),NUMNEW(I),I,ATNAME(I),AANAME(LIST(K)),K-1
CC --------------- CUT -------------------|
CC    KATOM(I)=NUMNEW(I)                  |
CC    JATOM(KATOM(I))=I                   |
CC    RENAME(I)=AANAME(LIST(K))           |
CC    NMBRES(I)=K-1                       |
CC --------------- CUT -------------------|
 54   CONTINUE
C     WRITE(IOUT22,110)  (INTERR(I),I=1,NATM)
      WRITE(IOUT22,110)  (INTER(I),I=1,NUMATM)
C     WRITE(IOUT22,170)  ((INTER(J,I),J=1,3),I=1,IALL)
      WRITE(IOUT22,170)  ((INTATM(J,I),J=1,3),I=1,NUMINT)
C
C DISULFIDE BONDS
C
C     IF (NCYS.EQ.0)  GOTO  2
      IF (NSS.EQ.0)   GOTO  2
C     DO  60  I = 1, NCYS
      DO  60  I = 1, NSS
CC --------------- CUT -------------------------|
CC    KSSPER(1,1,I) = NPRE(NPAIR(I,1)) + 3      |
CC    KSSPER(2,1,I) = NPRE(NPAIR(I,1)) + 5      |
CC    KSSPER(3,1,I) = NPRE(NPAIR(I,1)) + 10     |
CC    KSSPER(4,1,I) = NPRE(NPAIR(I,2)) + 3      |
CC    KSSPER(5,1,I) = NPRE(NPAIR(I,2)) + 5      |
CC    KSSPER(6,1,I) = NPRE(NPAIR(I,2)) + 10     |
CC --------------- CUT -------------------------|
      WRITE(IOUT22,110)  (KSSPER(J,1,I),J=1,6)
  60  CONTINUE
C
C DATA FOR THE DIPOLE CLUSTERS
C
   2  WRITE(IOUT22,200)
      WRITE(IOUT22,110)  NUMDPL,NLDPL,NDPATM
      K = 0
      DO  70  I = 1, NUMDPL
      WRITE(IOUT22,210)  KUNDPL(I),CHRGDP(K+1),CHRGDP(K+2),LSTDPL(I)
  70  K = K+2
      WRITE(IOUT22,110)  (LSTAMB(I),I=1,NLDPL)
      DO  80  I = 1, NDPATM
  80  WRITE(IOUT22,220)  JATDPL(I),CHRGAM(I),JCLDPL(I)
      WRITE(IOUT22,120)  RCUT
      RETURN
C
C PUNCHING FORMATS
C
  100 FORMAT(A80)
  110 FORMAT(16I5)
  120 FORMAT(10F8.3)
  130 FORMAT(53X,2I5,I4,I3,4X,I3)
  140 FORMAT(I4,I2,2X,2I5,2X,2I5,2I2,F10.4,3I3,I5,I5,I5,I5,1X,I5)
  150 FORMAT(3F10.4,4X,F10.3,4I5,2X,A4,1X,A4,I5)
  170 FORMAT(5(1X,3I5))
  200 FORMAT('CUTOFF')
  210 FORMAT(I5,2F10.4,I10)
  220 FORMAT(I10,F10.4,I5)
      END
      SUBROUTINE  PARAMT
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE ASSIGNS THE VALUES WHICH ARE NEEDED IN THE FAST ECEPP
C
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (BOND)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
      INTEGER KUND1U(6),LSTD1U(6)
      REAL QQQ
      TASK COMMON/Z1FPP1CM/ QQQ(8191)
      EQUIVALENCE (QQQ(1),KUND1U),(QQQ(7),LSTD1U)
C BOND
C
      COMMON/BOND00/DIRCOS(3,MAXVAR),IBND1(MAXVAR),IBND2(0:MVAR1)
      COMMON/BOND01/IBCHAR(3,MAXVAR)
C
C  DIRCOS:  DIRECTION COSINE FOR THE BOND
C  IBND1:   ATOM NUMBER OF AN END ATOM OF THE BOND
C  IBND2:   ATOM NUMBER OF AN END ATOM OF THE BOND (IBOND1<IBOND2)
C  IBCHAR:  THREE INTGERS WHICH CHARACTERIZE THE BOND
C
CMSP  INCLUDE(TABLE1)
C TABLE1
C
      COMMON/TABLE1/IFRONT(MAXVAR),NBACK(0:MAXVAR),IBACK(2,0:MAXVAR)
C
C  IFRONT:  UNIT NUMBER PRECEDING TO THE I-TH BOND ANGLE
C  NBACK : NUMBER OF DIHEDRAL ANGLES BEYOND THE UNIT
C  IBACK : THE NUMBER OF THE DIHEDRAL ANGLE (IN WAKO ORDER). IF
C          THERE IS NO DIHEDRAL ANGLE BEYOND THE UNIT (EG. AT THE END)
C          IBACK=0.
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/CHECK/KNDRES(36),KNDEND(20)
      COMMON/GEN016/ NUNITA(36),NMUNTA(26,36),NMNEWA(26,36),
     &   NEWKA(10,36),NEDGEA(2,10,36),IBCHRA(3,10,36),IFRNTA(10,36),
     &   IUATMA(0:9,36),NBCKA(0:9,36),IBCKA(2,0:9,36)
      COMMON/GEN032/ NUNITE(20),NMUNTE(18,20),NMNEWE(18,20),
     &   NEWKE(3,20),NEDGEE(2,3,20),IBCHRE(3,3,20),IFRNTE(3,20),
     &   IUATME(0:2,20),NBCKE(0:2,20),IBCKE(2,0:2,20)
      COMMON/GEN064/ NMDPLA(36),NLDPLA(36),NDATMA(36),KUNDPA(5,36),
     &   CHRGA(2,5,36),LSTDPA(5,36),LSTAMA(28,36),JATDPA(8,36),
     &   CHRGAX(8,36),JCLDPA(8,36)
      COMMON/GEN128/ NMDPLE(20),NLDPLE(20),NDATME(20),KUNDPE(5,20),
     &   CHRGE(2,5,20),LSTDPE(5,20),LSTAME(28,20),JATDPE(8,20),
     &   CHRGEX(8,20),JCLDPE(8,20),NEXTNE(20)
      COMMON/UNITS/ NPREU(0:MAXVAR)
      COMMON/NEWOLD/ NMUNIT(MAXATM),NUMNEW(MAXATM)
C     COMMON/DIHED/ INDEX(2,MAXVAR),NEDGE(2,MAXVAR),IFRONT(MAXVAR),
C    &   IBCHAR(3,MAXVAR),IUATM(0:MAXVAR),
C    &   NBACK(0:MAXVAR),IBACK(2,0:MAXVAR),
C    &   NEWK(MAXVAR)
      COMMON/DIHED/ INDEX(2,MAXVAR),IUATM(0:MAXVAR),NEWK(MAXVAR)
      COMMON/DIPOL/ NUMDPL,NLDPL,NDPATM,KUNDPL(MAXDP),CHRGDP(MAXDP2),
     &    LSTDPL(MAXDP),LSTAMB(MAXDPL),JATDPL(MAXDBL),CHRGAM(MAXDBL),
     &    JCLDPL(MAXDBL)
C     COMMON/GEN100/ INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/ NPRE(MXRS1)
C********************
C AMINO END SECTION *
C********************
      INTEGER J1X
      LAMIN = IABS(LIST(1))
C
C ATOM
C
CDIR@ IVDEP
      DO  100  I = 1, NPRE(2)
        NMUNIT(I) = NMUNTE(I,LAMIN)
        NUMNEW(I) = NMNEWE(I,LAMIN)
  100 CONTINUE
C
C BOND & UNIT
C
      NPREU(0) = 0
      NENDU = NUNITE(LAMIN)
      NPREU(1) = NENDU
      IBLAST = 0
C
      IF (NENDU.EQ.0)  GOTO  500
C
      IF (NENDU .GT. 0) THEN
         J1X = AND@(NENDU,7)
         DO I = 1, J1X
C  (BOND)
            NEWK(I) = NEWKE(I,LAMIN)
            INDEX(1,I) = 1
            INDEX(2,I) = NEWK(I)
            IFRONT(I) = IFRNTE(I,LAMIN)
C       NEDGE(1,I) = NEDGEE(1,I,LAMIN)
C       NEDGE(2,I) = NEDGEE(2,I,LAMIN)
            IBND1(I) = NEDGEE(1,I,LAMIN)
            IBND2(I) = NEDGEE(2,I,LAMIN)
CDIR@       IVDEP
            DO J = 1, 3
               IBCHAR(J,I) = IBCHRE(J,I,LAMIN)
            END DO
            IUATM(I-1) = IUATME(I-1,LAMIN)
            NBACK(I-1) = NBCKE(I-1,LAMIN)
            IBACK(1,I-1) = IBCKE(1,I-1,LAMIN)
            IBACK(2,I-1) = IBCKE(2,I-1,LAMIN)
         END DO
         DO I = J1X + 1, NENDU, 8
C  (BOND)
            NEWK(I) = NEWKE(I,LAMIN)
            NEWK(1+I) = NEWKE(1+I,LAMIN)
            NEWK(2+I) = NEWKE(2+I,LAMIN)
            NEWK(3+I) = NEWKE(3+I,LAMIN)
            NEWK(4+I) = NEWKE(4+I,LAMIN)
            NEWK(5+I) = NEWKE(5+I,LAMIN)
            NEWK(6+I) = NEWKE(6+I,LAMIN)
            NEWK(7+I) = NEWKE(7+I,LAMIN)
            INDEX(1,I) = 1
            INDEX(1,1+I) = 1
            INDEX(1,2+I) = 1
            INDEX(1,3+I) = 1
            INDEX(1,4+I) = 1
            INDEX(1,5+I) = 1
            INDEX(1,6+I) = 1
            INDEX(1,7+I) = 1
            INDEX(2,I) = NEWK(I)
            INDEX(2,1+I) = NEWK(1+I)
            INDEX(2,2+I) = NEWK(2+I)
            INDEX(2,3+I) = NEWK(3+I)
            INDEX(2,4+I) = NEWK(4+I)
            INDEX(2,5+I) = NEWK(5+I)
            INDEX(2,6+I) = NEWK(6+I)
            INDEX(2,7+I) = NEWK(7+I)
            IFRONT(I) = IFRNTE(I,LAMIN)
            IFRONT(1+I) = IFRNTE(1+I,LAMIN)
            IFRONT(2+I) = IFRNTE(2+I,LAMIN)
            IFRONT(3+I) = IFRNTE(3+I,LAMIN)
            IFRONT(4+I) = IFRNTE(4+I,LAMIN)
            IFRONT(5+I) = IFRNTE(5+I,LAMIN)
            IFRONT(6+I) = IFRNTE(6+I,LAMIN)
            IFRONT(7+I) = IFRNTE(7+I,LAMIN)
C       NEDGE(1,I) = NEDGEE(1,I,LAMIN)
C       NEDGE(2,I) = NEDGEE(2,I,LAMIN)
            IBND1(I) = NEDGEE(1,I,LAMIN)
            IBND1(1+I) = NEDGEE(1,1+I,LAMIN)
            IBND1(2+I) = NEDGEE(1,2+I,LAMIN)
            IBND1(3+I) = NEDGEE(1,3+I,LAMIN)
            IBND1(4+I) = NEDGEE(1,4+I,LAMIN)
            IBND1(5+I) = NEDGEE(1,5+I,LAMIN)
            IBND1(6+I) = NEDGEE(1,6+I,LAMIN)
            IBND1(7+I) = NEDGEE(1,7+I,LAMIN)
            IBND2(I) = NEDGEE(2,I,LAMIN)
            IBND2(1+I) = NEDGEE(2,1+I,LAMIN)
            IBND2(2+I) = NEDGEE(2,2+I,LAMIN)
            IBND2(3+I) = NEDGEE(2,3+I,LAMIN)
            IBND2(4+I) = NEDGEE(2,4+I,LAMIN)
            IBND2(5+I) = NEDGEE(2,5+I,LAMIN)
            IBND2(6+I) = NEDGEE(2,6+I,LAMIN)
            IBND2(7+I) = NEDGEE(2,7+I,LAMIN)
CDIR@       IVDEP
            DO 350 J = 1, 3
               IBCHAR(J,I) = IBCHRE(J,I,LAMIN)
               IBCHAR(J,1+I) = IBCHRE(J,1+I,LAMIN)
               IBCHAR(J,2+I) = IBCHRE(J,2+I,LAMIN)
               IBCHAR(J,3+I) = IBCHRE(J,3+I,LAMIN)
               IBCHAR(J,4+I) = IBCHRE(J,4+I,LAMIN)
               IBCHAR(J,5+I) = IBCHRE(J,5+I,LAMIN)
               IBCHAR(J,6+I) = IBCHRE(J,6+I,LAMIN)
               IBCHAR(J,7+I) = IBCHRE(J,7+I,LAMIN)
  350       CONTINUE
            IUATM(I-1) = IUATME(I-1,LAMIN)
            IUATM(I) = IUATME(I,LAMIN)
            IUATM(1+I) = IUATME(1+I,LAMIN)
            IUATM(2+I) = IUATME(2+I,LAMIN)
            IUATM(3+I) = IUATME(3+I,LAMIN)
            IUATM(4+I) = IUATME(4+I,LAMIN)
            IUATM(5+I) = IUATME(5+I,LAMIN)
            IUATM(6+I) = IUATME(6+I,LAMIN)
            NBACK(I-1) = NBCKE(I-1,LAMIN)
            NBACK(I) = NBCKE(I,LAMIN)
            NBACK(1+I) = NBCKE(1+I,LAMIN)
            NBACK(2+I) = NBCKE(2+I,LAMIN)
            NBACK(3+I) = NBCKE(3+I,LAMIN)
            NBACK(4+I) = NBCKE(4+I,LAMIN)
            NBACK(5+I) = NBCKE(5+I,LAMIN)
            NBACK(6+I) = NBCKE(6+I,LAMIN)
            IBACK(1,I-1) = IBCKE(1,I-1,LAMIN)
            IBACK(1,I) = IBCKE(1,I,LAMIN)
            IBACK(1,1+I) = IBCKE(1,1+I,LAMIN)
            IBACK(1,2+I) = IBCKE(1,2+I,LAMIN)
            IBACK(1,3+I) = IBCKE(1,3+I,LAMIN)
            IBACK(1,4+I) = IBCKE(1,4+I,LAMIN)
            IBACK(1,5+I) = IBCKE(1,5+I,LAMIN)
            IBACK(1,6+I) = IBCKE(1,6+I,LAMIN)
            IBACK(2,I-1) = IBCKE(2,I-1,LAMIN)
            IBACK(2,I) = IBCKE(2,I,LAMIN)
            IBACK(2,1+I) = IBCKE(2,1+I,LAMIN)
            IBACK(2,2+I) = IBCKE(2,2+I,LAMIN)
            IBACK(2,3+I) = IBCKE(2,3+I,LAMIN)
            IBACK(2,4+I) = IBCKE(2,4+I,LAMIN)
            IBACK(2,5+I) = IBCKE(2,5+I,LAMIN)
            IBACK(2,6+I) = IBCKE(2,6+I,LAMIN)
         END DO
      ENDIF
      IBLAST = IBCHAR(1,NENDU)
C
C DIPOLE CLUSTER
C
  500 NUMDPL = NMDPLE(LAMIN)
      NLDPL  = NLDPLE(LAMIN)
      NDPATM = NDATME(LAMIN)
      KK = 0
      IF (NUMDPL .GT. 0) THEN
CDIR@    IVDEP
         DO 610 I = 1, NUMDPL
            KUNDPL(I) = KUNDPE(I,LAMIN)
  610    CONTINUE
         DO L = 1, 2
CDIR@       IVDEP
            DO I = 1, NUMDPL
               CHRGDP(KK+L+(I-1)*2) = CHRGE(L,I,LAMIN)
            END DO
         END DO
         DO I = 1, NUMDPL
            LSTDPL(I) = LSTDPE(I,LAMIN)
         END DO
         KK = NUMDPL*2 + KK
      ENDIF
CDIR@ IVDEP
      DO  700  I = 1, NLDPL
  700 LSTAMB(I) = LSTAME(I,LAMIN)
      IF (NDPATM.EQ.0)  GOTO  900
CDIR@ IVDEP
      DO  800  I = 1, NDPATM
      JATDPL(I) = JATDPE(I,LAMIN)
      CHRGAM(I) = CHRGEX(I,LAMIN)
      JCLDPL(I) = JCLDPE(I,LAMIN)
  800 CONTINUE
C
C IF THE NEXT RESIDUE IS GLY, PRO OR H-PRO,  THEN ...
C
  900 LISTI = IABS(LIST(2))
      KIND = IABS(KNDRES(LISTI))
      IF (KIND.EQ.6)  THEN
        NDPATM = NDPATM+1
        LAN = LSTAMB(NLDPL-1)
        LSTAMB(NLDPL-1) = - NDPATM
        JATDPL(NDPATM) = LAN
        CHRGAM(NDPATM) = -4.59
        JCLDPL(NDPATM) = NUMDPL+1
      ELSE IF (KIND.EQ.13.OR.KIND.EQ.22)  THEN
        NDPATM = NDPATM + 2
        LAN = LSTAMB(NLDPL-1)
        LAC = LSTAMB(NLDPL)
        LSTAMB(NLDPL-1) = - (NDPATM-1)
        LSTAMB(NLDPL) = -NDPATM
        JATDPL(NDPATM-1) = -LAN
        JATDPL(NDPATM) = -LAC
        CHRGAM(NDPATM-1) = -4.59
        CHRGAM(NDPATM) = 2.27
        JCLDPL(NDPATM-1) = NUMDPL+1
        JCLDPL(NDPATM) = NUMDPL+1
      ENDIF
C***********************************
C FULL AMINO ACID RESIDUE SECTION  *
C***********************************
C1000 LASTFL = INUMRS-1
 1000 LASTFL = NUMRES-1
      DO  1800  III = 2, LASTFL
      LISTI = IABS(LIST(III))
      KIND = IABS(KNDRES(LISTI))
      NKFLAG = 0
      INEWK = 0
      IF (KIND.EQ.13.OR.KIND.EQ.22)  INEWK = -1
      IF (III.NE.LASTFL)  GOTO  1010
      IF (KIND.EQ.13)  GOTO  1010
C     LINTN = LIST(INUMRS)
      LINTN = LIST(NUMRES)
      LINTN = IABS(LINTN)
      IF (NUNITE(LINTN).NE.0)  GOTO  1010
        INEWK = -1
        NKFLAG = 1
        IF (KIND.EQ.22)  NKFLAG = 2
 1010 NA = NUNITA(LISTI)
      NPREU(III) = NPREU(III-1)+NA
      NNS = NPRE(III)
      NNE = NPRE(III+1)
      NUS = NPREU(III-1)
      NUE = NPREU(III)
C
C ATOM
C
CDIR@ IVDEP
      DO  1100  I = NNS+1, NNE
        K = I-NNS
        NMUNTI = NMUNTA(K,LISTI)
        NMUNIT(I) = NMUNTI + NUS
        NMNEWI = NMNEWA(K,LISTI)
        NUMNEW(I) = NMNEWI + NNS
 1100 CONTINUE
C
C BOND & UNIT
C
      DO  1300  I = NUS+1, NUE
        K = I-NUS
C  (BOND)
        NEWKI = NEWKA(K,LISTI)
        INK = INEWK
        IF (NKFLAG.EQ.1.AND.NEWKI.LE.2)  INK = 0
        IF (NKFLAG.EQ.2.AND.NEWKI.EQ.4)  INK = -2
        NEWK(I) = NEWKI + NUS + INK
        INDEX(1,I) = III
        INDEX(2,I) = NEWKI
        IFRNTI = IFRNTA(K,LISTI)
        IFRONT(I) = IFRNTI + NUS
C       DO  1200  J = 1, 2
C         NEDGEJ = NEDGEA(J,K,LISTI)
C         NEDGE(J,I) = NEDGEJ + NNS
C1200   CONTINUE
         IBND1(I)=NEDGEA(1,K,LISTI)+NNS
         IBND2(I)=NEDGEA(2,K,LISTI)+NNS
CDIR@ IVDEP
        DO  1210  J = 1, 3
 1210   IBCHAR(J,I) = IBCHRA(J,K,LISTI)
        IBCHAR(1,I) = IBCHAR(1,I) + IBLAST
C  (UNIT)
        I1 = I - 1
        K1 = K - 1
        IUATMI = IUATMA(K1,LISTI)
        IUATM(I1) = IUATMI + NNS
        NBACK(I1) = NBCKA(K1,LISTI)
CDIR@ IVDEP
        DO  1220  J = 1, 2
          IBCKJI = IBCKA(J,K1,LISTI)
          IF (IBCKJI.EQ.0)  THEN
            IBACK(J,I1) = 0
          ELSE
            IBACK(J,I1) = IBCKJI + NUS
          ENDIF
 1220   CONTINUE
C       LINTN = IABS(LIST(INUMRS))
        LINTN = IABS(LIST(NUMRES))
        IF (III.EQ.LASTFL.AND.I.EQ.NUE.AND.NUNITE(LINTN).EQ.0)  THEN
          NBACK(I1) = 0
          IBACK(1,I1) = 0
        ENDIF
 1300 CONTINUE
      IBLAST = IBCHAR(1,NUE)
C
C DIPOLE CLUSTER
C
      LUMDPL = NUMDPL
      LLDPL  = NLDPL
      LDPATM = NDPATM
      NUMDPL = NUMDPL + NMDPLA(LISTI)
      NLDPL  = NLDPL  + NLDPLA(LISTI)
      NDPATM = NDPATM + NDATMA(LISTI)
CDIR@ IVDEP
      DO  1400  I = 1, NMDPLA(LISTI)
        II = LUMDPL+I
        KUNDPL(II) = NUS + KUNDPA(I,LISTI)
        CHRGDP(KK+1) = CHRGA(1,I,LISTI)
        CHRGDP(KK+2) = CHRGA(2,I,LISTI)
        KK = KK + 2
        LSTDPL(II) = LLDPL + LSTDPA(I,LISTI)
 1400 CONTINUE
CDIR@ IVDEP
      DO  1500  I = 1, NLDPLA(LISTI)
        II = LLDPL+I
        IF (LSTAMA(I,LISTI).GT.0)  THEN
          LSTAMB(II) = LSTAMA(I,LISTI) + NNS
        ELSE
          LSTAMB(II) = - (LDPATM+IABS(LSTAMA(I,LISTI)))
        ENDIF
 1500 CONTINUE
      IF (NDATMA(LISTI).EQ.0)  GOTO  1700
CDIR@ IVDEP
      DO  1600  I = 1, NDATMA(LISTI)
        II = LDPATM+I
        JATDPL(II) = ISIGN(IABS(JATDPA(I,LISTI))+NNS,JATDPA(I,LISTI))
        CHRGAM(II) = CHRGAX(I,LISTI)
        JCLDPL(II) = JCLDPA(I,LISTI) + LUMDPL
 1600 CONTINUE
C
 1700 IF (III.EQ.LASTFL)  GOTO  1800
C
C IF THE NEXT RESIDUE IS GLY, PRO OR H-PRO, THEN ...
C
      LISTIJ = IABS(LIST(III+1))
      KIND = IABS(KNDRES(LISTIJ))
      IF (KIND.EQ.6)  THEN
        NDPATM = NDPATM+1
        II = NLDPL-1
        LAN = LSTAMB(II)
        LSTAMB(II) = - NDPATM
        JATDPL(NDPATM) = LAN
        CHRGAM(NDPATM) = -4.59
        JCLDPL(NDPATM) = NUMDPL+1
      ELSE IF (KIND.EQ.13.OR.KIND.EQ.22)  THEN
        NDPATM = NDPATM+2
        II = NLDPL-1
        LAN = LSTAMB(II)
        LAC = LSTAMB(II+1)
        LSTAMB(II) = -(NDPATM-1)
        LSTAMB(II+1) = -NDPATM
        JATDPL(NDPATM-1) = -LAN
        JATDPL(NDPATM) = -LAC
        CHRGAM(NDPATM-1) = -4.59
        CHRGAM(NDPATM) = 2.27
        JCLDPL(NDPATM-1) = NUMDPL+1
        JCLDPL(NDPATM) = NUMDPL+1
      ENDIF
 1800 CONTINUE
C************************
C CARBOXYL END SECTION  *
C************************
C     LCARB = IABS(LIST(INUMRS))
      LCARB = IABS(LIST(NUMRES))
      NA = NUNITE(LCARB)
C     NPREU(INUMRS) = NPREU(INUMRS-1) + NA
      NPREU(NUMRES) = NPREU(NUMRES-1) + NA
C     NLS = NPREU(INUMRS-1)
      NLS = NPREU(NUMRES-1)
C     NLE = NPREU(INUMRS)
      NLE = NPREU(NUMRES)
C     NNS = NPRE(INUMRS)
      NNS = NPRE(NUMRES)
C     NNE = NPRE(INUMRS+1)
      NNE = NPRE(NUMRES+1)
C
C ATOM
C
CDIR@ IVDEP
      DO  2100  I = NNS+1, NNE
        K = I-NNS+1
        NMUNTI = NMUNTE(K,LCARB)
        NMUNIT(I) = NMUNTI + NLS
        NMNEWI = NMNEWE(K,LCARB)
        NUMNEW(I) = NMNEWI + NNS
 2100 CONTINUE
C
C BOND & UNIT
C
      IF (NA.EQ.0)  GOTO  2280
C
      DO  2260  I = NLS+1, NLE
        K = I-NLS
        I1 = I - 1
C  (UNIT)
        K1 = K - 1
        IUATMI = IUATME(K1,LCARB)
        IUATM(I1) = IUATMI + NNS
        NBACK(I1) = NBCKE(K1,LCARB)
CDIR@ IVDEP
        DO  2200  J = 1, 2
          IBCKJI = IBCKE(J,K1,LCARB)
          IF (IBCKJI.EQ.0)  THEN
            IBACK(J,I1) = 0
          ELSE
            IBACK(J,I1) = IBCKJI + NLS
          ENDIF
 2200   CONTINUE
C
        IF (K.EQ.1)  GOTO  2260
C  (BOND)
        IFRNTI = IFRNTE(K,LCARB)
        IFRONT(I) = IFRNTI + NLS
        NEWKI = NEWKE(K,LCARB)
        NEWK(I1) = NEWKI + NLS
C       INDEX(1,I1) = INUMRS
        INDEX(1,I1) = NUMRES
        INDEX(2,I1) = NEWKI
C       DO  2220  J = 1, 2
C         NEDGEJ = NEDGEE(J,K,LCARB) - 1
C         NEDGE(J,I1) = NEDGEJ + NNS
C2220   CONTINUE
          IBND1(I1)=NEDGEE(1,K,LCARB) -1 + NNS
          IBND2(I1)=NEDGEE(2,K,LCARB) -1 + NNS
CDIR@ IVDEP
        DO  2240  J = 1, 3
 2240   IBCHAR(J,I1) = IBCHRE(J,K,LCARB)
        IBCHAR(1,I1) = IBCHAR(1,I1) + IBLAST
 2260 CONTINUE
C
C DIPOLE CLUSTER
C
 2280 LUMDPL = NUMDPL
      LLDPL = NLDPL
      LDPATM = NDPATM
      IF (NEXTNE(LCARB).EQ.2)  THEN
        LLDPL = LLDPL-2
        CHRGDP(KK-1) = CHRGDP(KK-1) - 2.27
        CHRGDP(KK)   = CHRGDP(KK) + 4.59
      ELSE IF (NEXTNE(LCARB).EQ.1)  THEN
        LLDPL = LLDPL - 1
        CHRGDP(KK-1) = CHRGDP(KK-1) - 2.27
        CHRGDP(KK)   = CHRGDP(KK) + 2.27
        LDPATM = LDPATM+1
        LAN = LSTAMB(LLDPL)
        LSTAMB(LLDPL) = - LDPATM
        JATDPL(LDPATM) = -LAN
        CHRGAM(LDPATM) = -2.32
        JCLDPL(LDPATM) = LUMDPL+1
      ELSE IF (NEXTNE(LCARB).EQ.3)  THEN
        LLDPL = LLDPL - 1
        CHRGDP(KK-1) = CHRGDP(KK-1) - 2.27
        CHRGDP(KK)   = CHRGDP(KK) + 2.27
        LDPATM = LDPATM+1
        LAN = LSTAMB(LLDPL)
        LSTAMB(LLDPL) = - LDPATM
        JATDPL(LDPATM) = -LAN
        CHRGAM(LDPATM) = -0.41
        JCLDPL(LDPATM) = LUMDPL+1
      ELSE
        LDPATM = LDPATM+2
        LAN = LSTAMB(LLDPL-1)
        LAH = LSTAMB(LLDPL)
        LSTAMB(LLDPL-1) = -(LDPATM-1)
        LSTAMB(LLDPL) = -LDPATM
        JATDPL(LDPATM-1) = -LAN
        JATDPL(LDPATM) = -LAH
        CHRGAM(LDPATM-1) = -4.59
        CHRGAM(LDPATM) = 2.27
        JCLDPL(LDPATM-1) = LUMDPL+1
        JCLDPL(LDPATM) = LUMDPL+1
      ENDIF
      NUMDPL = LUMDPL + NMDPLE(LCARB)
      NLDPL  = LLDPL  + NLDPLE(LCARB)
      NDPATM = LDPATM + NDATME(LCARB)
      IF (NMDPLE(LCARB).GT.0)  THEN
      IF (NMDPLE(LCARB) .GT. 0) THEN
         II = LUMDPL + 1
CDIR@    IVDEP
         DO 2310 I = 1, NMDPLE(LCARB)
            KUND1U(I) = NLS + KUNDPE(I,LCARB)
 2310    CONTINUE
         DO L = 1, 2
CDIR@       IVDEP
            DO I = 1, NMDPLE(LCARB)
               CHRGDP(KK+L+(I-1)*2) = CHRGE(L,I,LCARB)
            END DO
         END DO
         DO I = 1, NMDPLE(LCARB)
            LSTD1U(I) = LLDPL + LSTDPE(I,LCARB)
         END DO
         KUNDPL(II) = KUND1U(NMDPLE(LCARB))
         LSTDPL(II) = LSTD1U(NMDPLE(LCARB))
      ENDIF
      ENDIF
      IF (NLDPLE(LCARB).GT.0)  THEN
CDIR@ IVDEP
      DO  2400  I = 1, NLDPLE(LCARB)
        II = LLDPL + I
        IF (LSTAME(I,LCARB).GT.0)  THEN
          LSTAMB(II) = LSTAME(I,LCARB) + NNS - 1
        ELSE
          LSTAMB(II) = -(LDPATM+IABS(LSTAME(I,LCARB)))
        ENDIF
 2400 CONTINUE
      ENDIF
      IF (NDATME(LCARB).EQ.0)  GOTO  3000
CDIR@ IVDEP
      DO  2500  I = 1, NDATME(LCARB)
        II = LDPATM + I
        JATDPL(II) = ISIGN(IABS(JATDPE(I,LCARB))+NNS-1,JATDPE(I,LCARB))
        CHRGAM(II) = CHRGEX(I,LCARB)
        JCLDPL(II) = JCLDPE(I,LCARB) + LUMDPL
 2500 CONTINUE
C
 3000 CONTINUE
C
C CHECK THE PARAMETER MAXDP & MAXDBL
C
      IF (NUMDPL.GT.MAXDP)  THEN
        WRITE(6,4000)  MAXDP,NUMDPL
        STOP
      ENDIF
      IF (NDPATM.GT.MAXDBL)  THEN
        WRITE(6,4010)  MAXDBL,NDPATM
        STOP
      ENDIF
C
       RETURN
C
 4000 FORMAT('0 ***ERROR MESSAGE FROM THE SUBROUTINE PARAMT.'/
     &  '    * MAXDP.LT.NUMDPL *    CORRECT MAXDP IN PARAMETER'/
     &  '         MAXDP=',I5,',   NUMDPL=',I5)
 4010 FORMAT('0 ***ERROR MESSAGE FROM THE SUBROUTINE PARAMT.'/
     &  '    * MAXDBL.LT.NDPATM *    CORRECT MAXDBL IN PARAMETER'/
     &  '         MAXDBL=',I5,',   NDPATM=',I5)
      END
      SUBROUTINE  OUTMAX
      IMPLICIT REAL*8(A-H,O-Z)
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (VARANG)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C VARANG
C
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (BOND)
C BOND
C
      COMMON/BOND00/DIRCOS(3,MAXVAR),IBND1(MAXVAR),IBND2(0:MVAR1)
      COMMON/BOND01/IBCHAR(3,MAXVAR)
C
C  DIRCOS:  DIRECTION COSINE FOR THE BOND
C  IBND1:   ATOM NUMBER OF AN END ATOM OF THE BOND
C  IBND2:   ATOM NUMBER OF AN END ATOM OF THE BOND (IBOND1<IBOND2)
C  IBCHAR:  THREE INTGERS WHICH CHARACTERIZE THE BOND
C
CMSP  INCLUDE(TABLE1)
C TABLE1
C
      COMMON/TABLE1/IFRONT(MAXVAR),NBACK(0:MAXVAR),IBACK(2,0:MAXVAR)
C
C  IFRONT:  UNIT NUMBER PRECEDING TO THE I-TH BOND ANGLE
C  NBACK : NUMBER OF DIHEDRAL ANGLES BEYOND THE UNIT
C  IBACK : THE NUMBER OF THE DIHEDRAL ANGLE (IN WAKO ORDER). IF
C          THERE IS NO DIHEDRAL ANGLE BEYOND THE UNIT (EG. AT THE END)
C          IBACK=0.
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (CNTL)
C CNTL
C
       COMMON /PRINT/IPRNT
C
C   IPRNT :  PRINT OPTION, 0 PART OUTPUT, 1 ALL OUTPUT
C
CMSP  INCLUDE (SSPAIR)
      COMMON/SSPAIR/KSSPER(6,2,MAXSS),JSS(3,MAXSS),KSS(MAXSS2),
     >              LSS(MAXSS2),NPAIR(MAXSS,2)
C
C  KSSPER:    THE ATOM NUMBERS WHICH BELONG TO THE DISULPHITE BONDS
C
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/ UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &              NV(MAXRES)
C     COMMON/CYS001/ KCYS,NCYS,NPAIR(MAXSS,2)
      COMMON/CYS001/ KCYS
C     COMMON/GEN100/ INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/ NPRE(MXRS1)
C     COMMON/IOUNIT/ JREAD
C     COMMON/PRINT/  IPRNT
C     COMMON/PREPAR/ LNUM,JMLAST,KMLAST,LNUMS,LEN,NUMATM
      COMMON/PREPAR/ LNUM,JMLAST,KMLAST,LNUMS,LEN
C     COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/LAMIN,KAMIN,LCARB,KCARB
C     COMMON/DIHED/ INDEX(2,MAXVAR),NEDGE(2,MAXVAR),IFRONT(MAXVAR),
C    &   IBCHAR(3,MAXVAR),IUATM(0:MAXVAR),
C    &   NBACK(0:MAXVAR),IBACK(2,0:MAXVAR),
C    &    NEWK(MAXVAR)
      COMMON/DIHED/ INDEX(2,MAXVAR),IUATM(0:MAXVAR),NEWK(MAXVAR)
      COMMON/DIPOL/ NUMDPL,NLDPL,NDPATM,KUNDPL(MAXDP),CHRGDP(MAXDP2),
     &    LSTDPL(MAXDP),LSTAMB(MAXDPL),JATDPL(MAXDBL),CHRGAM(MAXDBL),
     &    JCLDPL(MAXDBL)
      DIMENSION  NJ(0:MAXVAR)
      DATA  IONE /1/, NJ /0,MAXVAR*0/
      WRITE(6,500)
      WRITE(6,510)  'MAXATMM',NUMATM
      WRITE(6,510)  'MAXVAR',NUMVAR
C     WRITE(6,510)  'MAXRES',INUMRS
      WRITE(6,510)  'MAXRES',NUMRES
      WRITE(6,510)  'MAXLEN',LEN
C     IF (NCYS.GT.0)  THEN
      IF (NSS.GT.0)   THEN
C       WRITE(6,510)  'MAXSS ',NCYS
        WRITE(6,510)  'MAXSS ',NSS
      ELSE
        WRITE(6,520)  'MAXSS ',IONE
      ENDIF
C
      KMAX = 0
      DO  10  IA = 1, NUMVAR
       DO 10  IB = 1, IA
        KAB = KDISTP (IA,IB,NUMVAR,IBCHAR)
        NJ(KAB) = NJ(KAB) + 1
        KMAX = MAX (KMAX,KAB)
  10  CONTINUE
      MAXJX = 0
CDIR@ IVDEP
      DO  20  I = 0, KMAX
  20  MAXJX = MAX (MAXJX,NJ(I))
      WRITE(6,525)  'MAXJ  ',MAXJX,KMAX
C
      WRITE(6,530)
      WRITE(6,510)  'MAXDPC',NUMDPL
      WRITE(6,510)  'MAXDPA',NDPATM
      NAXDPL = NUMATM + NDPATM/2
      IF (NLDPL.LE.NAXDPL)  THEN
        WRITE(6,540)
      ELSE
        WRITE(6,510)  'MAXDPL',NLDPL
        WRITE(6,550)
      ENDIF
C
      CALL  INTRCT (KMAX)
C
  500 FORMAT(///' ***  INFORMATION ON THE ARRAY SIZES IN THE FEDER  ***
     &'//' ',8X,'THE FOLLOWING VALUES SHOW THE MINIMAL ONES THAT SHOULD'
     &/' ',8X,'BE ASSIGNED TO THE PARAMETERS IN THE FEDER')
  510 FORMAT('0',15X,A6,'=',I5)
  520 FORMAT('0',15X,A6,'=',I5,5X,'(NCYS=0)')
  525 FORMAT('0',15X,A6,'=',I5,5X,'(KMAX=',I4,')')
  530 FORMAT('0',8X,'THE FOLLOWING PARAMETERS APPEAR ONLY IN THE FEDER',
     &      /'0',8X,'WITH CUTOFF AND DIPOLE APPROXIMATION.')
  540 FORMAT('0',15X,'MAXDPL=MAXATM+NDPATM/2')
  550 FORMAT('0',18X,'(REPLACE  MAXDPL=MAXATM+NDPATM/2 IN THE FEDER BY T
     &HE ABOVE VALUE)')
      RETURN
C     DEBUG SUBCHK,INIT
      END
      FUNCTION  KDISTP (IA,IB,NUMVAR,IBCHAR)
      IMPLICIT REAL*8(A-H,O-Z)
C
C  THIS FUNCTION SUBPROGRAM COMPUTES THE DISTANCE BETWEEN TWO BONDS
C  IA AND IB ALONG THE CHAIN.
C
      DIMENSION  IBCHAR(3,NUMVAR)
      IF (IBCHAR(1,IA).NE.IBCHAR(1,IB))  THEN
        KDISTP=IABS(IBCHAR(1,IA)-IBCHAR(1,IB))+IBCHAR(2,IA)+IBCHAR(2,IB)
     &                                       +IBCHAR(3,IA)+IBCHAR(3,IB)
        KDISTP = KDISTP/2
      ELSE IF (IBCHAR(2,IA).NE.IBCHAR(2,IB))  THEN
        KDISTP=IABS(IBCHAR(2,IA)-IBCHAR(2,IB))+IBCHAR(3,IA)+IBCHAR(3,IB)
        KDISTP = KDISTP/2
      ELSE
        KDISTP=IABS(IBCHAR(3,IA)-IBCHAR(3,IB))/2
      ENDIF
      RETURN
      END
      SUBROUTINE  INTRCT (KMAX)
      IMPLICIT REAL*8(A-H,O-Z)
C
C  THIS SUBROUTINE COMPUTES THE NONBONDED AND ELECTROSTATIC ENERGIES.
C
CMSP  INCLUDE (MAXSIZE)
C MAXSIZE
C     MAXSIZE DEFINES MAXIMUM ARRAY SIZE
C
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (INTER0)
C INTER0
C
      COMMON/INTER0/INTER(MAXATM),INTATM(3,MAXLEN)
C
C  INTER :    POINTER TO INTATM
C  INTATM:
C    IN ECEPPENERGY FUNCTION, THE NON-BONDED INTERACTION IS DEVIDED
C    INTO 1-4 PAIRS AND 1-5 PAIRS. INTATM IS A TABLE FOR THE ATOM
C    PAIRS OF THE TWO TYPES OF INTERACTIONS.
CMSP  INCLUDE (BOND)
C BOND
C
      COMMON/BOND00/DIRCOS(3,MAXVAR),IBND1(MAXVAR),IBND2(0:MVAR1)
      COMMON/BOND01/IBCHAR(3,MAXVAR)
C
C  DIRCOS:  DIRECTION COSINE FOR THE BOND
C  IBND1:   ATOM NUMBER OF AN END ATOM OF THE BOND
C  IBND2:   ATOM NUMBER OF AN END ATOM OF THE BOND (IBOND1<IBOND2)
C  IBCHAR:  THREE INTGERS WHICH CHARACTERIZE THE BOND
C
CMSP  INCLUDE(TABLE1)
C TABLE1
C
      COMMON/TABLE1/IFRONT(MAXVAR),NBACK(0:MAXVAR),IBACK(2,0:MAXVAR)
C
C  IFRONT:  UNIT NUMBER PRECEDING TO THE I-TH BOND ANGLE
C  NBACK : NUMBER OF DIHEDRAL ANGLES BEYOND THE UNIT
C  IBACK : THE NUMBER OF THE DIHEDRAL ANGLE (IN WAKO ORDER). IF
C          THERE IS NO DIHEDRAL ANGLE BEYOND THE UNIT (EG. AT THE END)
C          IBACK=0.
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
C     COMMON/TOR2/  LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/  LAMIN,KAMIN,LCARB,KCARB
C     COMMON/RUNS/  INTER(3,MAXLEN)
      COMMON/NEWOLD/ NMUNIT(MAXATM),NUMNEW(MAXATM)
C     COMMON/DIHED/ INDEX(2,MAXVAR),NEDGE(2,MAXVAR),IFRONT(MAXVAR),
C    &   IBCHAR(3,MAXVAR),IUATM(0:MAXVAR),
C    &   NBACK(0:MAXVAR),IBACK(2,0:MAXVAR),
C    &   NEWK(MAXVAR)
      COMMON/DIHED/ INDEX(2,MAXVAR),IUATM(0:MAXVAR),NEWK(MAXVAR)
C     COMMON/GEN100/ INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/ NPRE(MXRS1)
C     COMMON/PREPAR/ LNUM,JMLAST,KMLAST,LNUMS,LEN,NUMATM
      COMMON/PREPAR/ LNUM,JMLAST,KMLAST,LNUMS,LEN
      DIMENSION  NPAIR(0:MAXVAR)
      DATA  NPAIR /0,MAXVAR*0/
      MA = 1
      DO  100  L = 1, LEN
C       IATMI = MA + INTER(1,L)
        IATMI = MA + INTATM(1,L)
C       NUM4 = INTER(2,L)
        NUM4 = INTATM(2,L)
        IATMF = IATMI + NUM4 - 1
        MAUNIT = NMUNIT(MA)
        IF (NUM4.EQ.0)  GOTO  20
C
C  1-4 INTERACTION
C
        DO  10  MB = IATMI, IATMF
        MBUNIT = NMUNIT(MB)
        KAB = MDIST (MAUNIT,MBUNIT,NUMVAR,IBCHAR,NBACK,IBACK)
        NPAIR(KAB) = NPAIR(KAB) + 1
  10    CONTINUE
C
C 20    KEY = INTER(3,L)
  20    KEY = INTATM(3,L)
        IF (KEY.EQ.0)  GOTO  40
        IATMI = IATMF + 1
        IATMF = NUMATM
        IF (KEY.GT.0)  IATMF = IATMI + KEY - 1
C
C  1-5 INTERACTION
C
        DO  30  MB = IATMI, IATMF
        MBUNIT = NMUNIT(MB)
        KAB = MDIST (MAUNIT,MBUNIT,NUMVAR,IBCHAR,NBACK,IBACK)
        NPAIR(KAB) = NPAIR(KAB) + 1
  30    CONTINUE
C
  40    IF (NUM4.EQ.0.AND.KEY.EQ.0)  MA = MA + 1
        IF (KEY.LT.0)  MA = MA + 1
  100 CONTINUE
C
C     WRITE(6,500)
      IS = 0
      MAXP = 0
      JABF = 10
      WRITE(6,510)
      DO  200  KAB = 0, KMAX
        NP = NPAIR(KAB)
        IS = IS + NP
        MAXP = MAX (MAXP, NP)
        IF (KAB.LE.JABF)  WRITE(6,511)  NP,KAB,IS,KAB
C       IF (KAB.EQ.2)  MAXPER=IS     CKM  THIS MAXPER IS LOCAL.  CKM
        IF (KAB.EQ.2)  MXPER=IS
  200 CONTINUE
      WRITE(6,515)  MAXP
      WRITE(6,517)
      WRITE(6,520)  IS
C     WRITE(6,530)  MAXPER
      WRITE(6,530)  MXPER
C 500 FORMAT('0',5X,'THE FOLLOWING DATA WILL BE HELPFUL WHEN YOU DETERMI
C    &NE THE SIZE'/' ',5X,'OF THE ARRAYS IPAIR AND JPAIR AND THE VALUES
C    &OF THE PARAMETER MAXPER.')
  510 FORMAT('0',5X,'THE NUMBER OF INTERACTABLE ATOM PAIRS IN THE UNIT',
     &    ' PAIRS OF THE SMALL DISTANCES'/ )
  511 FORMAT(' ',10X,'# PAIRS=',I8,'(KAB=',I2,')',5X,
     &               '# PAIRS=',I8,'(KAB=0 TO ',I2,')')
  515 FORMAT('0',15X,'MAXPER=',I5)
  517 FORMAT('0',5X,'MAXINT    IS USED WITH DIFFERENT MEANINGS IN THE FE
     &DER PROGRAMS'/ ' ',5X,'WITH AND WITHOUT CUTOFF AND DIPOLE APPROXIM
     &ATION'/'0',5X,'FOR FEDER WITH CUTOFF AND DIPOLE APPROXIMATION')
  520 FORMAT('0',9X,'TOTAL NUMBER OF INTERACTABLE ATOM PAIRS:',I8/
     &       '0',15X,'MAXINT=(AROUND 30% OF THIS NUMBER)'/
     &       '0',9X,'SINCE IT DEPENDS ON THE CONFORMATION, YOU CAN CHECK
     & IT ONLY AFTER YOU'/' ',9X,'RUN THE FEDER WITH CUTOFF AND DIPOLE A
     &PPROXIMATION, IN WHICH   NINT  TELLS US THIS NUMER')
  530 FORMAT('0',5X,'FOR FEDER WITHOUT CUTOFF AND DIPOLE APPROXIMATION'/
     &       '0',9X,'MAX OF THE NUMBER OF INTERACTABLE ATOM PAIRS IN THE
     & GROUPS OF UNIT PAIRS'/' ',9X,
     & 'WITH THE SAME VALUE OF DISTANCE :'/'0',15X,'MAXINT=',I8)
      RETURN
C     DEBUG SUBCHK
      END
      FUNCTION  MDIST (IA,IB,NUMVAR,IBCHAR,NBACK,IBACK)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION  IBCHAR(3,NUMVAR),NBACK(0:NUMVAR),IBACK(2,0:NUMVAR)
      MDIST = NUMVAR
      JA = MAX (IA,IB)
      JB = MIN (IA,IB)
      IF (JB.EQ.0)  GOTO  10
      MDIST = KDISTP (JA,JB,NUMVAR,IBCHAR)
      IF (NBACK(JB).EQ.0)  RETURN
  10  DO  20  I = 1, NBACK(JB)
        MD = KDISTP (JA,IBACK(I,JB),NUMVAR,IBCHAR)
        MDIST = MIN (MDIST,MD)
  20  CONTINUE
      RETURN
      END
C
      SUBROUTINE  RUN1 (LEN)
      IMPLICIT REAL*8(A-H,O-Z)
C
C THIS SUBROUTINE PUNCHOUTS THE DATA FOR THE FAST ECEPP
C
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE (SIZE)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (TORSNP)
C TORSNP
C ** ECEPP ORDER
      COMMON/TORSNP/AP(MAXVAR),NBP(MAXVAR),NSP(MAXVAR),IFTORP(MAXVAR)
C
C        : U=A(I){1+NS(I)COS(NB(I)*(DIHEDRAL ANGLE))}
C  AP     : A(I)
C  NBP    : NB(I)
C  NSP    : NS(I)
C  IFTORP : =1,  CALCULTES TORSIONAL ENERGY FOR THE DIHEDRAL ANGLE.
C          =0,  DOES NOT CALCULATE ENERGY FOR THE DIHEDRAL ANGLE.
C  THIS IS A LOCAL COMMON IN PRECEP.
CMSP  INCLUDE (TORSN0)
C TORSN0
C
      COMMON/TORSN0/A(MAXVAR),NB(MAXVAR),NS(MAXVAR),IFTOR(MAXVAR)
C
C        : U=A(I){1+NS(I)COS(NB(I)*(DIHEDRAL ANGLE))}
C  A     : A(I)
C  NB    : NB(I)
C  NS    : NS(I)
C  IFTOR : =1,  CALCULTES TORSIONAL ENERGY FOR THE DIHEDRAL ANGLE.
C          =0,  DOES NOT CALCULATE ENERGY FOR THE DIHEDRAL ANGLE.
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (ATOM)
C ATOM
C
      COMMON/ATOM00/KUNIT(MAXATM),KATOM(MXATM1),JATOM(MAXATM)
      COMMON/ATOM01/LATOM0(0:MAXVAR),LATOM1(MAXATM)
C
C  KUNIT:  UNIT NUMBER WHICH THE ATOM BELONGS TO.
C  KATOM:  SEQUENTIAL NUMBER OF THE ATOM IN WAKO ORDER.
C  JATOM:  SEQUENTIAL NUMBER OF THE ATOM IN ECEPP ORDER.
C   EXAMPLE:
C   ECEPP  WAKO         WAKO     ECEPP
C    1    KATOM(1)       1      JATOM(1)
C    2    KATOM(2)       2      JATOM(2)
C    3    KATOM(3)       3      JATOM(3)
C    .      .            .        .
C    .      .            .        .
C
C  LATOM0:
C  LATOM1:
C
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (INTER0)
C INTER0
C
      COMMON/INTER0/INTER(MAXATM),INTATM(3,MAXLEN)
C
C  INTER :    POINTER TO INTATM
C  INTATM:
C    IN ECEPPENERGY FUNCTION, THE NON-BONDED INTERACTION IS DEVIDED
C    INTO 1-4 PAIRS AND 1-5 PAIRS. INTATM IS A TABLE FOR THE ATOM
C    PAIRS OF THE TWO TYPES OF INTERACTIONS.
CMSP  INCLUDE (BOND)
C BOND
C
      COMMON/BOND00/DIRCOS(3,MAXVAR),IBND1(MAXVAR),IBND2(0:MVAR1)
      COMMON/BOND01/IBCHAR(3,MAXVAR)
C
C  DIRCOS:  DIRECTION COSINE FOR THE BOND
C  IBND1:   ATOM NUMBER OF AN END ATOM OF THE BOND
C  IBND2:   ATOM NUMBER OF AN END ATOM OF THE BOND (IBOND1<IBOND2)
C  IBCHAR:  THREE INTGERS WHICH CHARACTERIZE THE BOND
C
CMSP  INCLUDE (TABLE1)
C TABLE1
C
      COMMON/TABLE1/IFRONT(MAXVAR),NBACK(0:MAXVAR),IBACK(2,0:MAXVAR)
C
C  IFRONT:  UNIT NUMBER PRECEDING TO THE I-TH BOND ANGLE
C  NBACK : NUMBER OF DIHEDRAL ANGLES BEYOND THE UNIT
C  IBACK : THE NUMBER OF THE DIHEDRAL ANGLE (IN WAKO ORDER). IF
C          THERE IS NO DIHEDRAL ANGLE BEYOND THE UNIT (EG. AT THE END)
C          IBACK=0.
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (SSPAIR)
      COMMON/SSPAIR/KSSPER(6,2,MAXSS),JSS(3,MAXSS),KSS(MAXSS2),
     >              LSS(MAXSS2),NPAIR(MAXSS,2)
C
C  KSSPER:    THE ATOM NUMBERS WHICH BELONG TO THE DISULPHITE BONDS
C
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
CKM DEBUG
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
CKM DEBUG
C     COMMON/CYS001/ KCYS,NCYS,NPAIR(MAXSS,2)
      COMMON/CYS001/ KCYS
C     COMMON/IOUNIT/ JREAD
C     COMMON/TORQUE/ A(MAXVAR),NB(MAXVAR),NS(MAXVAR),IFTORP(MAXVAR),
C    &               INDXPV(MAXVAR)
      COMMON/TORQUE/ INDXPV(MAXVAR)
C     COMMON/TOR2/  LAMIN,KAMIN,LCARB,KCARB,NUMVAR
      COMMON/TOR2/  LAMIN,KAMIN,LCARB,KCARB
C     COMMON/RUNS/  INTER(3,MAXLEN)
      COMMON/UNITS/  NPREU(0:MAXVAR)
      COMMON/NEWOLD/ NMUNIT(MAXATM),NUMNEW(MAXATM)
C     COMMON/DIHED/ INDEX(2,MAXVAR),NEDGE(2,MAXVAR),IFRONT(MAXVAR),
C    &   IBCHAR(3,MAXVAR),IUATM(0:MAXVAR),
C    &   NBACK(0:MAXVAR),IBACK(2,0:MAXVAR),
C    &   NEWK(MAXVAR)
      COMMON/DIHED/ INDEX(2,MAXVAR),IUATM(0:MAXVAR),NEWK(MAXVAR)
      COMMON/DIPOL/ NUMDPL,NLDPL,NDPATM,KUNDPL(MAXDP),CHRGDP(MAXDP2),
     &   LSTDPL(MAXDP),LSTAMB(MAXDPL),JATDPL(MAXDBL),CHRGAM(MAXDBL),
     &   JCLDPL(MAXDBL)
C     COMMON/GEN100/ INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/ NPRE(MXRS1)
C     DIMENSION INTERR(MAXATM)
      CHARACTER*4  AANAME(36)
      DATA  AANAME /'ALA','ASP','CYS','GLU','PHE','GLY',
     &  'HIS','ILE','LYS','LEU','MET','ASN','PRO','GLN','ARG','SER',
     &  'THR','VAL','TRP','TYR','CYS','HPR','NLE','ORN','ORN+','HIS2',
     &  'HIS+','LYS+','ARG+','ASB','ASP-','GLU-',
     &  'PROU','PROF','HPRU','HPRF'/
C     CHARACTER  TITLE*80
C     CHARACTER*4 ALPH
      DATA  RCUT /7.D0/, IZERO /0/
C
C MAKE THE LIST  INTERR
C
CDIR@ IVDEP
      DO  5  J = 1, 3
C  5  INTER(J,LEN) = 0
   5  INTATM(J,LEN) = 0
C     NATM = NPRE(INUMRS+1)
CC*******
      NUMATM = NPRE(NUMRES+1)
CC*******
C     INTERR(1) = 1
      INTER(1) = 1
      IXI = 2
      DO  10  I = 1, LEN
C       INTER2 = INTER(2,I)
C       INTER3 = INTER(3,I)
        INTER2 = INTATM(2,I)
        INTER3 = INTATM(3,I)
        IF (INTER3.LT.0.OR.(INTER2.EQ.0.AND.INTER3.EQ.0))  THEN
C         INTERR(IXI) = I + 1
          INTER(IXI) = I + 1
          IXI = IXI + 1
        ENDIF
  10  CONTINUE
      IF (IXI.GT.NUMATM) GOTO  22
CDIR@ NEXTSCALAR
        DO  20  I = IXI, NUMATM
C 20    INTERR(I) = INTERR(I-1) + 1
  20    INTER(I) = INTER(I-1) + 1
C 22  IALL = INTERR(NATM)
  22  NUMINT = INTER(NUMATM)
      IF (LEN.GE.NUMINT)  GOTO  32
CDIR@ IVDEP
      DO I = 1, 3*(NUMINT - LEN)
C 30    INTER(J,I) = 0
         INTATM(I,LEN+1) = 0
      END DO
C
C OUTPUT
C
 32     CONTINUE
CC    WRITE(IOUT22,100)  TITLE
C     WRITE(IOUT22,110)  NATM,NUMVAR,INUMRS,IALL,NCYS
CC    WRITE(IOUT22,110)  NATM,NUMVAR,NUMRES,IALL,NSS
      CALL  RUN2
C     WRITE(IOUT22,130)  IUATM(0),NBACK(0),(IBACK(J,0),J=1,2),IZERO
C     NNUNIT = NPREU(INUMRS)
      NNUNIT = NPREU(NUMRES)
CDIR@ IVDEP
      DO  40  I = 1, NNUNIT-1
      K = NEWK(I)
      A(I)=AP(K)
      NB(I)=NBP(K)
      NS(I)=NSP(K)
      IFTOR(I)=IFTORP(K)
      INDXV(I)=INDEX(1,I)*100+INDEX(2,I)
C     WRITE(IOUT22,140)  (INDEX(J,I),J=1,2),(NEDGE(J,I),J=1,2),IFRONT(I)
C    &    ,(IBCHAR(J,I),J=1,3),A(K),NB(K),NS(K),IFTORP(K),
C    &    IUATM(I),NBACK(I),(IBACK(J,I),J=1,2),I
CC    WRITE(IOUT22,140)  (INDEX(J,I),J=1,2),IBND1(I),IBND2(I),IFRONT(I)
CC   &    ,(IBCHAR(J,I),J=1,3),A(K),NB(K),NS(K),IFTORP(K),
CC   &    IUATM(I),NBACK(I),(IBACK(J,I),J=1,2),I
 40   CONTINUE
CDIR@ IVDEP
      DO 35 I=1,NUMVAR
        J=INDXV(I)/100
        K=INDXV(I)-100*J
        REFANG(I) = ANGRAD(K,J)
 35   CONTINUE
      K = 1
      DO  50  I = 1, NPRE(2)
CC    WRITE(IOUT22,150)  (REFCRD(J,I),J=1,3),CHARGE(I),NBTYPE(I),
CC   &     NMUNIT(I),NUMNEW(I),I,ATNAME(I),AANAME(LIST(2)),K
      KUNIT(I)=NMUNIT(I)
      KATOM(I)=NUMNEW(I)
      JATOM(KATOM(I))=I
      RENAME(I)=AANAME(LIST(2))
      NMBRES(I)=K
 50   CONTINUE
C     DO  52  K = 2, INUMRS-1
      DO  52  K = 2, NUMRES-1
      DO  52  I = NPRE(K)+1, NPRE(K+1)
CC    WRITE(IOUT22,150)  (REFCRD(J,I),J=1,3),CHARGE(I),NBTYPE(I),
CC   &     NMUNIT(I),NUMNEW(I),I,ATNAME(I),AANAME(LIST(K)),K-1
      KUNIT(I)=NMUNIT(I)
      KATOM(I)=NUMNEW(I)
      JATOM(KATOM(I))=I
      RENAME(I)=AANAME(LIST(K))
      NMBRES(I)=K-1
 52   CONTINUE
C     K = INUMRS-1
      K = NUMRES-1
C     DO  54  I = NPRE(INUMRS)+1, NPRE(INUMRS+1)
      DO  54  I = NPRE(NUMRES)+1, NPRE(NUMRES+1)
CC    WRITE(IOUT22,150)  (REFCRD(J,I),J=1,3),CHARGE(I),NBTYPE(I),
CC   &     NMUNIT(I),NUMNEW(I),I,ATNAME(I),AANAME(LIST(K)),K-1
      KUNIT(I)=NMUNIT(I)
      KATOM(I)=NUMNEW(I)
      JATOM(KATOM(I))=I
      RENAME(I)=AANAME(LIST(K))
      NMBRES(I)=K-1
 54   CONTINUE
C     WRITE(IOUT22,110)  (INTERR(I),I=1,NATM)
CC    WRITE(IOUT22,110)  (INTER(I),I=1,NATM)
C     WRITE(IOUT22,170)  ((INTER(J,I),J=1,3),I=1,IALL)
CC    WRITE(IOUT22,170)  ((INTATM(J,I),J=1,3),I=1,IALL)
C
C DISULFIDE BONDS
C
C     IF (NCYS.EQ.0)  GOTO  2
      IF (NSS.EQ.0)   GOTO  2
C     DO  60  I = 1, NCYS
CDIR@ IVDEP
      DO  60  I = 1, NSS
      KSSPER(1,1,I) = NPRE(NPAIR(I,1)) + 3
      KSSPER(2,1,I) = NPRE(NPAIR(I,1)) + 5
      KSSPER(3,1,I) = NPRE(NPAIR(I,1)) + 10
      KSSPER(4,1,I) = NPRE(NPAIR(I,2)) + 3
      KSSPER(5,1,I) = NPRE(NPAIR(I,2)) + 5
      KSSPER(6,1,I) = NPRE(NPAIR(I,2)) + 10
CC    WRITE(IOUT22,110)  (KSSPER(J,1,I),J=1,6)
  60  CONTINUE
C
C DATA FOR THE DIPOLE CLUSTERS
C
   2  CONTINUE
CC    WRITE(IOUT22,200)
CC    WRITE(IOUT22,110)  NUMDPL,NLDPL,NDPATM
C     K = 0
C     DO  70  I = 1, NUMDPL
C     WRITE(IOUT22,210)  KUNDPL(I),CHRGDP(K+1),CHRGDP(K+2),LSTDPL(I)
  70  K = K+2
CC    WRITE(IOUT22,110)  (LSTAMB(I),I=1,NLDPL)
CC    DO  80  I = 1, NDPATM
CC80  WRITE(IOUT22,220)  JATDPL(I),CHRGAM(I),JCLDPL(I)
CC    WRITE(IOUT22,120)  RCUT
      RETURN
C
C PUNCHING FORMATS
C
  100 FORMAT(A80)
  110 FORMAT(16I5)
  120 FORMAT(10F8.3)
  130 FORMAT(53X,2I5,I4,I3,4X,I3)
  140 FORMAT(I4,I2,2X,2I5,2X,2I5,2I2,F10.4,3I3,I5,I5,I5,I5,1X,I5)
  150 FORMAT(3F10.4,4X,F10.3,4I5,2X,A4,1X,A4,I5)
  170 FORMAT(5(1X,3I5))
  200 FORMAT('CUTOFF')
  210 FORMAT(I5,2F10.4,I10)
  220 FORMAT(I10,F10.4,I5)
      END
      SUBROUTINE RUN2
      IMPLICIT REAL*8(A-H,O-Z)
C
CMSP  INCLUDE (MAXSIZE)
      PARAMETER(MAXATM=2050,MAXVAR=800,MAXRES=150,MAXSS=10,
     >          MXRS1=MAXRES+1,MXRS10=10*MAXRES,MAXLEN=6000,
     >          MAXDBL=1000,MAXDP=700,MAXDPL=MAXATM+MAXDBL/2,
     >          MAXDP2=MAXDP*2,MXPAIR=MAXVAR*(MAXVAR+1)/2,
     >          MXPAR1=(MAXVAR+1)*(MAXVAR+2)/2,MAXPER=16000,
     >          MAXCNS=900,MAXJ=2*MAXVAR,MAXSS2=MAXSS*2,
     >          MAXINT=40000,MAXI1=MAXINT/2,MAXI2=MAXINT-MAXI1,
     >          MXATM1=MAXATM+1,MVAR1=MAXVAR+1,
     >          MWORK=100000,MIWORK=100000,MCHWOR=100000)
C
C  MAXAT:  MAXIMUM NUMBER OF ATOMS IN A PROTEIN
C  MAXVAR: MAXMUM NUMBER OF DIHEDRAL ANGLE VARIABLES
C  MAXRS:  MAXMUM NUMBER OF RESIDUES
C  MAXSS:  MAXMUM NUMBER OF S-S CROSSLINK
C  MXRS1:  MAXRS+1
C  MXRS10: MAXRS*10
C  MAXLEN: ARRAY SIZE OF INTER IN PREP IN PRECEP ?
C  MAXDBL: MAXMUM NUMBER OF DIPOLES (?)
C  MWORK:  MAXIMUM SIZE OF REAL WORK ARRAY
C  MIWORK: MAXIMUM SIZE OF INTEGER WORK ARRAY
C  MCWORK: MAXIMUM SIZE OF CHARACTER WORK ARRAY
CMSP  INCLUDE(SIZE)
C...Translated by FPP 6.0 (3.06G3) 02/26/96  10:11:23   -dc
C SIZE
C  THIS COMMON BLOCK STORES THE NUMBERS RELATED TO PROTEIN SIZE
C
      COMMON/SIZE/NUMATM,NUMVAR,NN2,NUMINT,NSS,NUMRES
      COMMON/SIZE1/NATM1,NVAR1,NPAIR1
C
C  NUMATM:   NUMBER OF ATOMS IN A PROTEIN
C  NUMVAR:   NUMBER OF (DIHEDRAL) ANGLE VARIABLES
C  NN2:      NUMVAR*(NUMVAR+1)/2
C  NUMINT:     ?
C  NSS:      NUMBER OF S-S CROSSLINK (?)
C  NUMRES:   NUMBER OF RESIDUES
C  NATM1=NUMATM+1
C  NVAR1=NUMVAR+1
C  NPAIR1=(NUMVAR+1)*(NUMVAR+2)/2
CMSP  INCLUDE (VARANG)
      COMMON/VARANG/ANGRAD(10,MAXRES),VAR(MAXVAR),INDXV(MAXVAR),
     >              ANGLES(10,MAXRES)
C
C  ANGRAD :  DIHEDRAL ANGLES IN ECCEP ORDER (RADIAN)
C  VAR:    DIHEDRAL ANGLES IN WAKO ORDER (RADIAN)
C  INDXV : INDVX=NNN*100+MMM (MMM:1-10)
C            NNN: RESIDUE NUMBER
C            MMM: DIHEDRAL ANGLE NUMBER IN THE RESIDUE(NNN) IN ECEPP
C                 ORDER
C  ANGLES: DIHEDRAL ANGLES IN ECEPP ORDER (DEGREE)
C          USED AS THE WORK]]
CMSP  INCLUDE (ALPHA)
C ALPHA
C
      CHARACTER*4  ATNAME,RENAME
      CHARACTER*80 TITLE
      COMMON/ALPHA1/ATNAME(MAXATM),RENAME(MAXATM)
      COMMON/ALPHA2/NMBRES(MAXATM)
      COMMON/TITLE/TITLE
C
C  ATNAME:   ATOM NAMES (ECEPP ORDER)
C  RENAME :   RESIDUE NAMES (ECEPP ORDER)
C  NMBRES :   RESIDUE NUMBER (NORMAL NUMBERING)
C  TITLE  :   TITLE OF PRECEP
C
CMSP  INCLUDE (CHARGE)
C CHARGE
C
      COMMON/CHARGE/CHARGE(MAXATM)
C
C  CHARGE:  ATOMIC CHARGES
C
CMSP  INCLUDE (COORD)
C COORD
C
      COMMON/COORD/CO(3,MAXATM)
C
C  CO: VARIABLE COORDINATES (ECEPP ORDER)
C
CMSP  INCLUDE (NBTYPE)
C NBTYPE
C
      COMMON/NBTYPE/NBTYPE(MAXATM)
C
C  NBTYPE:   ATOM TYPE  (ECEPP ORDER)
C
CMSP  INCLUDE (REFRNC)
C REFRNC
C
      COMMON/REFRNC/REFCRD(3,MAXATM),REFANG(MAXVAR)
C
C  REFCRD:    REFERENCE COORDINATES FOR COORDINATES GENERATION
C             (ECEPP ORDER)
C  REFANG:    REFERENCE ANGLES IN RADIAN (WAKO ORDER)
CMSP  INCLUDE (UNITNUMS)
      COMMON/UNITNU  /IN1,IN2,IN3,IN4,IFN4,
     *               IOUT1,IOUT2,IOUT3,
     * IN01,IOUT02,IOUT06,
C
C PREIN
C
     * IN11,IN13,IOUT12,IOUT14,IOUT16,IN15,IN17,IOUT18,IN19,IOUT20,
C
C PRECEP
C
     * IN21,IN23,IN25,IN27,IN29,
     * IOUT22,IOUT24,IOUT26,IOUT28,IOUT30,
C
C MINIMIZATION
C
     * IN31,IN33,IN35,IN37,IN39,
     * IOUT32,IOUT34,IOUT36,IOUT38,IOUT39,IOUT40,
C
C NORMAL MODE
C
     * IN41,IN43,IN45,IN47,IN49,
     * IOUT42,IOUT44,IOUT46,IOUT48,IOUT50,IOUT52,IOUT54,IOUT56,IOUT58,
     * IOUT60,IOUT62,IOUT64,IOUT66,
C
C MONTE CARLO
C
     * IN71,IN73,IN75,IN77,IN79,
     * IOUT72,IOUT74,IOUT76,IOUT78
C
C PRIMARY INPUT FILE ----- IN01
C PRIMARY OUTPUT FILE ---- IOUT02
C PRIMARY LOG FILE ------- IOUT06
C
C ODD NUMBERS ARE RESERVED FOR INPUT,
C EVEN NUMBERS ARE RESERVED FOR OUTPUT
C FOR EXPLICIT DEFINITIONS OF INPUT AND OUTPUT FILES, PLEASE SEE MAIN
CMSP  INCLUDE (PRIMRY)
C PRIMRY
C
       INTEGER LIST
       COMMON /PRIMRY/LIST(MAXRES)
C
C   LIST : AMINO ACID RESIDUE NUMBER
C
      COMMON/BONDS/UTOR(10,MAXRES),NDXARR(10,MAXRES),
     &             NV(MAXRES)
      COMMON/CHECK/KNDRES(36),KNDEND(20)
C     COMMON/GEN100/INUMRS,LIST(MAXRES),NPRE(MXRS1)
      COMMON/GEN100/NPRE(MXRS1)
      COMMON/GEN000/CHG(26,36),ALPHA(26,36),TITLE2(4,56),LTYPE(26,36)
      COMMON/GEN002/CHIANG(3,7,36),NATOMS(36),NCHI(36), NDPT1(7,36),
     1    NDPT2(7,36),NUM(7,36)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
C     COMMON/IOUNIT/JREAD
      COMMON/PRAM/NREG,NEND,LR(6,20),LRT1(7,36)
      COMMON/PUT14/NSN14(26,36),NFN14(26,36),MSX14(22,20),MFX14(22,20),
     1   MSN14(22,20),MFN14(22,20)
      COMMON/PUT15/NSN15(26,36),MSN15(22,20),MSX15(22,20)
C     CHARACTER*4 ALPH,EALPHA,ALPHA
      CHARACTER*4 EALPHA,ALPHA
CC    DIMENSION A(10)
C     DO 210 I=1,INUMRS
      DO 210 I=1,NUMRES
      LISTI=LIST(I)
      LISTI = IABS(LISTI)
C     IF (I.EQ.1.OR.I.EQ.INUMRS) GO TO 120
      IF (I.EQ.1.OR.I.EQ.NUMRES) GO TO 120
      NS=NCHI(LISTI) + 3
  120 K = NPRE(I)+1
C     IF (I .NE. 1 .AND. I .NE. INUMRS) GO TO 140
      IF (I .NE. 1 .AND. I .NE. NUMRES) GO TO 140
      NS = NBOND(LISTI)
C     IF(I.EQ.INUMRS) NS=NS-1
      IF(I.EQ.NUMRES) NS=NS-1
  140 IF(NS.LE.0) GO TO 190
CDIR@ IVDEP
      DO 150 J = 1,NS
      ANGLES(J,I) = ANGRAD(J,I) * 57.29578
      IF (ANGLES(J,I).GT.180.0) ANGLES(J,I) = ANGLES(J,I) - 360.0
      IF (ANGLES(J,I).LT.(-180.0)) ANGLES(J,I) = ANGLES(J,I) + 360.0
  150 CONTINUE
      GO TO 210
  190 CONTINUE
  210 CONTINUE
      RETURN
C
 310  FORMAT(//1X,46HNO.IN LIST  RESIDUE NAME       DIHEDRAL ANGLES/
     1 1X,10HCHAIN  NO.,16X,10I9)
  320 FORMAT(1X,I5,1X,I3,3X,4A4,1X,10(1X,F8.3))
  330 FORMAT(1X,I5,1X,I3,1X,2HD-,4A4,1X,10(1X,F8.3))
  340 FORMAT(10F8.3)
  350 FORMAT(//12X,18HATOMIC COORDINATES,24X,6HCHARGE/11X,1HX,9X,
     1   1HY,9X,1HZ,7X,4HATOM,4X,4HTYPE,2X,8H(E.C.U.),3X,8HATOM NO.)
  360 FORMAT(5X,3F10.4,5X,A4,4X,I2,F10.3,5X,I5)
  370 FORMAT (/1X,I5,1X,4A4/)
  380 FORMAT (/1X,I5,1X,2HD-,4A4/)
  390 FORMAT (1H )
C
      END
