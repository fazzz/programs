C***********************************************************************
      SUBROUTINE NMA
C***********************************************************************
C        MAIN SUBROUTINE FOR NORMAL MODE ANALYSIS
C***********************************************************************
C     THIS PROGRAM IS A CALC OF HMAT AND KMAT
C     IN ECEPP(WAKO-ORDER)
C
C  IN THE FOLLOWING DIMENSION STATEMENT,
C  NUMATM AND NUMVAR ARE THE NUMBERS OF
C  VARIABLE DIHEDRAL ANGLES AND ATOMS IN
C  THE MOLECULES, RESPECTINGLY, THESE
C  NUMBERS MUST BE CHANGED TO TREAT
C  A MOLECLES WHICH YOU WONT TO STADY.
C
C
C       EXAMPLES OF DIMENSION
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C  PARAMETER GIVING
C
      INCLUDE (MAXSIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/maxsize'
      INCLUDE (COMMAND)
CTTN  INCLUDE '/labo/qclib/inspidas/common/command'
      INCLUDE (UNITNUMS)
CTTN  INCLUDE '/labo/qclib/inspidas/common/unitnums'
      INCLUDE (FILEIO)
CTTN  INCLUDE '/labo/qclib/inspidas/common/fileio'
      INCLUDE (COORD)
CTTN  INCLUDE '/labo/qclib/inspidas/common/coord'
      INCLUDE (SIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/size'
      INCLUDE (BOND)
CTTN  INCLUDE '/labo/qclib/inspidas/common/bond'
      INCLUDE (ATOM)
CTTN  INCLUDE '/labo/qclib/inspidas/common/atom'
      CHARACTER*4 SUBTAS,NXTWD
      CHARACTER*20 FORMA
      CHARACTER*80 NAME
C
C*********************************************
C
C OUTPUT OF CHWAKO
C ATTENTION IIBND2 DOESNOT HAVE THE SAME ARRAY SIZE AS IBND2
      DIMENSION IIBND1(MAXVAR),IIBND2(MAXVAR)
      DIMENSION LUNIT(MAXATM),JBTYPE(MAXATM),COWAKO(MAXATM,3)
C OUTPUT OF INPUT
C     DIMENSION IBND1(MAXVAR),IBND2(MAXVAR)
C     DIMENSION IBCHAR(3,MAXVAR),COWAKO(MAXATM,3)
C     DIMENSION KUNIT(MAXATM),NBTYPE(MAXATM)
C WORKING DIMENSION OF INPUT
C     DIMENSION KATOM(MAXATM)
C OUTPUT OF BOND
      DIMENSION X(MAXATM),Y(MAXATM),Z(MAXATM)
      DIMENSION AMASS1(MAXVAR),AMASS2(MAXVAR)
      DIMENSION TIXX1(MAXVAR),TIXY1(MAXVAR),TIXZ1(MAXVAR)
     *         ,TIYY1(MAXVAR),TIYZ1(MAXVAR),TIZZ1(MAXVAR)
      DIMENSION TIXX2(MAXVAR),TIXY2(MAXVAR),TIXZ2(MAXVAR)
     *         ,TIYY2(MAXVAR),TIYZ2(MAXVAR),TIZZ2(MAXVAR)
      DIMENSION CMSX1(MAXVAR),CMSY1(MAXVAR),CMSZ1(MAXVAR)
      DIMENSION CMSX2(MAXVAR),CMSY2(MAXVAR),CMSZ2(MAXVAR)
      DIMENSION UVX(MAXVAR),UVY(MAXVAR),UVZ(MAXVAR)
      DIMENSION BVX1(MAXVAR),BVY1(MAXVAR),BVZ1(MAXVAR)
      DIMENSION BVX2(MAXVAR),BVY2(MAXVAR),BVZ2(MAXVAR)
C WORKING DIMENSION OF BOND
      DIMENSION AMS(MAXATM)
      DIMENSION AMOMX2(MAXVAR),AMOMY2(MAXVAR),AMOMZ2(MAXVAR)
C THESE VARIABLES (AH AKX AKY AKZ) MUST BE COMMON VARIABLES
CC OUTPUT OF HMAT
C     DIMENSION AH(MAXVAR,MAXVAR)
CC OUTPUT OF KMAT
C     DIMENSION AKX(MAXATM,MAXVAR)
C     *         ,AKY(MAXATM,MAXVAR),AKZ(MAXATM,MAXVAR)
C WORKING DIMENSION OF HMAT
      DIMENSION AOBX1(MAXVAR),AOBY1(MAXVAR),AOBZ1(MAXVAR)
      DIMENSION AOBX2(MAXVAR),AOBY2(MAXVAR),AOBZ2(MAXVAR)
      DIMENSION APBX1(MAXVAR),APBY1(MAXVAR),APBZ1(MAXVAR)
      DIMENSION APBX2(MAXVAR),APBY2(MAXVAR),APBZ2(MAXVAR)
C  WORKING DIMENSION IN KMAT
      DIMENSION FRNTX1(MAXVAR),FRNTY1(MAXVAR),FRNTZ1(MAXVAR)
      DIMENSION FRNTX2(MAXVAR),FRNTY2(MAXVAR),FRNTZ2(MAXVAR)
      DIMENSION BACKX1(MAXVAR),BACKY1(MAXVAR),BACKZ1(MAXVAR)
      DIMENSION BACKX2(MAXVAR),BACKY2(MAXVAR),BACKZ2(MAXVAR)
C
C     *** GET SUBTASK
C
  999 CONTINUE
      CALL NXTCMN(SUBTAS)
      WRITE(IOUT02,5) SUBTAS
      WRITE(IOUT06,5) SUBTAS
    5 FORMAT(/5X,' NEXT SUBTASK : ',A4,/)
      IF (SUBTAS.EQ.'QUIT') GOTO 990
C-----------C A L C U L A T E   H - M A T R I X ------------------------
C           ( ELEMENTS OF H-MATRIX ARE STORED IN A COMMON ARRAY AH )
C
      IF (SUBTAS.EQ.'HMAT') THEN
        CALL CHWAKO (IIBND1,IIBND2,LUNIT
     *                  ,JBTYPE,COWAKO)
CCCCC
C     DO 5 I=1,749
C5    PRINT*,'COWAKO(I,J)=',I,(COWAKO(I,J),J=1,3)
        CALL BOND(NUMATM,NUMVAR,IIBND1,IIBND2
     *           ,IBCHAR,JBTYPE,COWAKO
     *           ,X,Y,Z
     *           ,AMASS1,AMASS2
     *           ,TIXX1,TIXY1,TIXZ1
     *           ,TIYY1,TIYZ1,TIZZ1
     *           ,TIXX2,TIXY2,TIXZ2
     *           ,TIYY2,TIYZ2,TIZZ2
     *           ,CMSX1,CMSY1,CMSZ1
     *           ,CMSX2,CMSY2,CMSZ2
     *           ,UVX,UVY,UVZ
     *           ,BVX1,BVY1,BVZ1
     *           ,BVX2,BVY2,BVZ2
     *           ,AMS
     *           ,AMASS
     *           ,TIXX,TIYY,TIZZ
     *           ,TIXY,TIYZ,TIXZ
     *           ,ATIXX,ATIYY,ATIZZ
     *           ,ATIXY,ATIYZ,ATIXZ
     *           ,AMOMX2,AMOMY2,AMOMZ2)
C
C__________________________
CC   SAMPLING OF OUTPUT OF K-MATRIX
C        WRITE(30) NUMVAR,NUMATM
C        WRITE(30) AKX
C        WRITE(30) AKY
C        WRITE(30) AKZ
C
C__________________________
C
        CALL HMAT(IBCHAR
     *           ,AMASS1,AMASS2,AMASS
     *           ,TIXX1,TIXY1,TIXZ1,TIYY1,TIYZ1,TIZZ1
     *           ,TIXX2,TIXY2,TIXZ2,TIYY2,TIYZ2,TIZZ2
     *           ,CMSX1,CMSY1,CMSZ1,CMSX2,CMSY2,CMSZ2
     *           ,UVX,UVY,UVZ
     *           ,BVX1,BVY1,BVZ1,BVX2,BVY2,BVZ2
     *           ,ATIXX,ATIYY,ATIZZ,ATIXY,ATIYZ,ATIXZ
     *           ,AOBX1,AOBY1,AOBZ1,AOBX2,AOBY2,AOBZ2
     *           ,APBX1,APBY1,APBZ1,APBX2,APBY2,APBZ2)
C
C
CC   SAMPLING OF OUTPUT OF H-MATRIX
C        WRITE(35) NUMVAR
CCC      WRITE(35) ((AH(II,JJ),II=1,JJ),JJ=1,NUMVAR)
C        WRITE(35) AH
C
C
        GOTO 999
      END IF
C-----------C A L C U L A T E   K - M A T R I X ------------------------
C
C           ( ELEMENTS OF KV-MATRIX ARE DUMPED TO A FILE )
C
      IF (SUBTAS.EQ.'KMAT') THEN
        CALL GTFLNM(NAME)
        CALL NXTWRD(COMLY2,COMLEN,NXTWD,4)
        FORMA='UNFORMATTED'
        IF (NXTWD.EQ.'OVER') FORMA='OVERWRITE  '
        CALL OPENWT(IOUT46,FORMA,NAME,IOUT06)
        WRITE(IOUT06,8400) NAME
 8400   FORMAT(5X,' WRITTEN TO ',A60)
        WRITE (IOUT02,8500) NAME
 8500   FORMAT(5X,'ELEMENTS OF KV-MATRIX ARE WRITTEN TO FILE:',
     &         A60)
        CALL CHWAKO (IIBND1,IIBND2,LUNIT
     *                ,JBTYPE,COWAKO)
        CALL BOND(NUMATM,NUMVAR,IIBND1,IIBND2
     *           ,IBCHAR,JBTYPE,COWAKO
     *           ,X,Y,Z
     *           ,AMASS1,AMASS2
     *           ,TIXX1,TIXY1,TIXZ1
     *           ,TIYY1,TIYZ1,TIZZ1
     *           ,TIXX2,TIXY2,TIXZ2
     *           ,TIYY2,TIYZ2,TIZZ2
     *           ,CMSX1,CMSY1,CMSZ1
     *           ,CMSX2,CMSY2,CMSZ2
     *           ,UVX,UVY,UVZ
     *           ,BVX1,BVY1,BVZ1
     *           ,BVX2,BVY2,BVZ2
     *           ,AMS
     *           ,AMASS
     *           ,TIXX,TIYY,TIZZ
     *           ,TIXY,TIYZ,TIXZ
     *           ,ATIXX,ATIYY,ATIZZ
     *           ,ATIXY,ATIYZ,ATIXZ
     *           ,AMOMX2,AMOMY2,AMOMZ2)
        CALL KMAT(IBCHAR,LUNIT
     *           ,X,Y,Z,AMASS1,AMASS2,AMASS
     *           ,TIXX1,TIXY1,TIXZ1,TIYY1,TIYZ1,TIZZ1
     *           ,TIXX2,TIXY2,TIXZ2,TIYY2,TIYZ2,TIZZ2
     *           ,CMSX1,CMSY1,CMSZ1,CMSX2,CMSY2,CMSZ2
     *           ,UVX,UVY,UVZ
     *           ,BVX1,BVY1,BVZ1
     *           ,ATIXX,ATIYY,ATIZZ,ATIXY,ATIYZ,ATIXZ
     *           ,FRNTX1,FRNTY1,FRNTZ1,FRNTX2,FRNTY2,FRNTZ2
     *           ,BACKX1,BACKY1,BACKZ1,BACKX2,BACKY2,BACKZ2)
        CLOSE (IOUT46)
        GOTO 999
      END IF
C---------D I A G O N A L I Z A T I O N --------------------------------
C
      IF (SUBTAS.EQ.'DIAG') THEN
        CALL DIAG
        GOTO 999
      END IF
C---------P R I N T   O U T   E I G E N   V A L U E S ------------------
C                       (FORMATTED,TO UNIT 42)
      IF (SUBTAS.EQ.'WRIT') THEN
        CALL GTFLNM(NAME)
        CALL OPENWT(IOUT42,'FORMATTED',NAME,IOUT06)
        WRITE(IOUT06,8000) NAME
 8000   FORMAT(5X,' WRITTEN TO ',A60)
        CALL WTEIG(IOUT42)
        CLOSE (IOUT42)
        WRITE (IOUT02,8100) NAME
 8100   FORMAT(5X,'EIGEN VALUES AND EIGEN VECTORS ARE WRITTEN TO FILE:',
     &         A60)
        GOTO 999
      END IF
C---------P R I N T   O U T   E I G E N   V A L U E S ------------------
C                       (UNFORMATTED,TO UNIT 44)
      IF (SUBTAS.EQ.'PUT ') THEN
        CALL GTFLNM(NAME)
        CALL NXTWRD(COMLY2,COMLEN,NXTWD,4)
        FORMA='UNFORMATTED'
        IF (NXTWD.EQ.'OVER') FORMA='OVERWRITE  '
        CALL OPENWT(IOUT44,FORMA,NAME,IOUT06)
        WRITE(IOUT06,8200) NAME
 8200   FORMAT(5X,' WRITTEN TO ',A60)
        CALL PTEIG(IOUT44)
        CLOSE (IOUT44)
        WRITE (IOUT02,8300) NAME
 8300   FORMAT(5X,'EIGEN VALUES AND EIGEN VECTORS ARE WRITTEN TO FILE:',
     &         A60)
        GOTO 999
      END IF
C---------PRINT OUT EIGEN VALUE HISTOGRAM             ------------------
C
      IF (SUBTAS.EQ.'GRPH') THEN
        CALL OUTGR(IOUT06,60)
        CALL OUTGR(IOUT02,100)
        GOTO 999
      END IF
C---------A N A L Y S I S ----------------------------------------------
C
      IF (SUBTAS.EQ.'ANAL') THEN
        CALL ANALYS
        GOTO 999
      END IF
      GOTO 999
  990 RETURN
      END
C
C-----------------------------------------------------------------------
C     SUBROUTINE BOND
      SUBROUTINE BOND(NUMATM,NUMVAR,IBND1,IBND2
     *         ,IBCHAR,NBTYPE,COWAKO
     *         ,X,Y,Z
     *         ,AMASS1,AMASS2
     *         ,TIXX1,TIXY1,TIXZ1
     *         ,TIYY1,TIYZ1,TIZZ1
     *         ,TIXX2,TIXY2,TIXZ2
     *         ,TIYY2,TIYZ2,TIZZ2
     *         ,CMSX1,CMSY1,CMSZ1
     *         ,CMSX2,CMSY2,CMSZ2
     *         ,UVX,UVY,UVZ
     *         ,BVX1,BVY1,BVZ1
     *         ,BVX2,BVY2,BVZ2
     *         ,AMS
     *         ,AMASS
     *         ,TIXX,TIYY,TIZZ
     *         ,TIXY,TIYZ,TIXZ
     *         ,ATIXX,ATIYY,ATIZZ
     *         ,ATIXY,ATIYZ,ATIXZ
     *         ,AMOMX2,AMOMY2,AMOMZ2)
C-----------------------------------------------------------------------
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE (MAXSIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/maxsize'
C
C  OUTPUT FROM INPUT
      DIMENSION IBND1(MAXVAR),IBND2(MAXVAR)
      DIMENSION IBCHAR(3,MAXVAR)
      DIMENSION NBTYPE(MAXATM)
      DIMENSION COWAKO(MAXATM,3)
C  MASS OF ATOMS WITH RESPECT TO TYPE
      DIMENSION AMAST(21)
C  OUTPUT OF BOND
      DIMENSION X(MAXATM),Y(MAXATM),Z(MAXATM)
      DIMENSION AMASS1(MAXVAR),AMASS2(MAXVAR)
C
C         IN THE FOLLOWING DIMENSION STATEMENT, ARRAY MAMES
C         1 AT THE END REFER TO QUANTITIES PERTAINING TO
C         RIGID BODY-1, AND THOSE WITH NUMBER 2 TO RIGID BODY-2.
C
      DIMENSION TIXX1(MAXVAR),TIXY1(MAXVAR),TIXZ1(MAXVAR)
     *,         TIYY1(MAXVAR),TIYZ1(MAXVAR),TIZZ1(MAXVAR)
      DIMENSION TIXX2(MAXVAR),TIXY2(MAXVAR),TIXZ2(MAXVAR)
     *,         TIYY2(MAXVAR),TIYZ2(MAXVAR),TIZZ2(MAXVAR)
      DIMENSION CMSX1(MAXVAR),CMSY1(MAXVAR),CMSZ1(MAXVAR)
      DIMENSION CMSX2(MAXVAR),CMSY2(MAXVAR),CMSZ2(MAXVAR)
      DIMENSION UVX(MAXVAR),UVY(MAXVAR),UVZ(MAXVAR)
      DIMENSION BVX1(MAXVAR),BVY1(MAXVAR),BVZ1(MAXVAR)
      DIMENSION BVX2(MAXVAR),BVY2(MAXVAR),BVZ2(MAXVAR)
C WORKING DIMENSION OF BOND
      DIMENSION AMS(MAXATM)
      DIMENSION AMOMX2(MAXVAR),AMOMY2(MAXVAR),AMOMZ2(MAXVAR)
C  DATA      MASS OF ATOM
      DATA AMAST/4*1.D0, 1.0D0, 5*12.D0, 3*0.0
     *          ,14.D0, 2*0.0, 2*16.D0, 0.0, 2*32.D0/
C
C  TOTAL MASS(AMASS),TOTAL MOMENT(AMOM),
C  TOTAL CENTRE OF MASS(ACEN)
C
      AMASS=0.0
      AMOMX=0.0
      AMOMY=0.0
      AMOMZ=0.0
      DO 1000 JJ=1,NUMATM
      IMS=NBTYPE(JJ)
      AMS(JJ)=AMAST(IMS)
      AMASS=AMASS+AMS(JJ)
      AMOMX=AMOMX+AMS(JJ)*COWAKO(JJ,1)
      AMOMY=AMOMY+AMS(JJ)*COWAKO(JJ,2)
      AMOMZ=AMOMZ+AMS(JJ)*COWAKO(JJ,3)
 1000 CONTINUE
      ACENX=AMOMX/AMASS
      ACENY=AMOMY/AMASS
      ACENZ=AMOMZ/AMASS
C
C  COORDINATE SYSTEM OF CENTER OF MASS
C  TOTAL TENSOR OF INERTIA
C
      TIXX=0.0
      TIYY=0.0
      TIZZ=0.0
      TIXY=0.0
      TIXZ=0.0
      TIYZ=0.0
C
      DO 1100 JJ=1,NUMATM
      X(JJ)=COWAKO(JJ,1)-ACENX
      Y(JJ)=COWAKO(JJ,2)-ACENY
      Z(JJ)=COWAKO(JJ,3)-ACENZ
      BTIXX=AMS(JJ)*(Y(JJ)**2+Z(JJ)**2)
      BTIYY=AMS(JJ)*(X(JJ)**2+Z(JJ)**2)
      BTIZZ=AMS(JJ)*(X(JJ)**2+Y(JJ)**2)
      BTIXY=-AMS(JJ)*X(JJ)*Y(JJ)
      BTIXZ=-AMS(JJ)*X(JJ)*Z(JJ)
      BTIYZ=-AMS(JJ)*Y(JJ)*Z(JJ)
C
      TIXX=BTIXX+TIXX
      TIYY=BTIYY+TIYY
      TIZZ=BTIZZ+TIZZ
      TIXY=BTIXY+TIXY
      TIXZ=BTIXZ+TIXZ
      TIYZ=BTIYZ+TIYZ
 1100 CONTINUE
C
C THE INVERSE MATRIX OF TENSOR OF INERTIA,
C WHOSE ELEMENT AER DESIGNATE AS ATIXX,....
C
      ATIXX=0.0
      ATIYY=0.0
      ATIZZ=0.0
      ATIXY=0.0
      ATIYZ=0.0
      ATIXZ=0.0
      ADAT=0.0
      ADAT=TIXX*TIYY*TIZZ
     *   +2.*TIXY*TIYZ*TIXZ
     *   -TIXZ*TIXZ*TIYY
     *   -TIXY*TIXY*TIZZ
     *   -TIYZ*TIYZ*TIXX
C
      ATIXX=(TIYY*TIZZ-TIYZ*TIYZ)/ADAT
      ATIYY=(TIXX*TIZZ-TIXZ*TIXZ)/ADAT
      ATIZZ=(TIXX*TIYY-TIXY*TIXY)/ADAT
      ATIXY=(TIYZ*TIXZ-TIXY*TIZZ)/ADAT
      ATIYZ=(TIXZ*TIXY-TIYZ*TIXX)/ADAT
      ATIXZ=(TIXY*TIYZ-TIXZ*TIYY)/ADAT
C
C CALC OF AMOUNTS OF BONDS
C        ABOUT OF RIGID BODY-1 OR -2,
C        MASS, TENSOR-OF-INERTIA AND CENTER-OF-MASS.
C
      DO 8 MM=1,NUMVAR
   8  CONTINUE
      AML1=0.0
      AILX1=0.0
      AILY1=0.0
      AILZ1=0.0
      ATLXX1=0.0
      ATLYY1=0.0
      ATLZZ1=0.0
      ATLXY1=0.0
      ATLYZ1=0.0
      ATLXZ1=0.0
      AML2=0.0
      AILX2=0.0
      AILY2=0.0
      AILZ2=0.0
      ATLXX2=0.0
      ATLYY2=0.0
      ATLZZ2=0.0
      ATLXY2=0.0
      ATLYZ2=0.0
      ATLXZ2=0.0
      AML3=0.0
      AILX3=0.0
      AILY3=0.0
      AILZ3=0.0
      ATLXX3=0.0
      ATLYY3=0.0
      ATLZZ3=0.0
      ATLXY3=0.0
      ATLYZ3=0.0
      ATLXZ3=0.0
C
      DO 2000 II=NUMVAR,1,-1
C
C MASS,MOMENT AND INERTIA-TENSOR
C ARE FIRST SUMMED OVER ATOMS BELONGING TO A UNIT.
C
        UMASS=0.0
        UMOMX=0.0
        UMOMY=0.0
        UMOMZ=0.0
C
        UTIXX=0.0
        UTIYY=0.0
        UTIZZ=0.0
        UTIXY=0.0
        UTIXZ=0.0
        UTIYZ=0.0
C
      IF(II.EQ.NUMVAR) THEN
         IU2=NUMATM
      ELSE
         IU2=IBND2(II+1)-1
      ENDIF
      IU1=IBND2(II)
C
      DO 2100 KK=IU1,IU2
C
      UMASS=UMASS+AMS(KK)
      UMOMX=UMOMX+AMS(KK)*X(KK)
      UMOMY=UMOMY+AMS(KK)*Y(KK)
      UMOMZ=UMOMZ+AMS(KK)*Z(KK)
C
      UTIXX=UTIXX+AMS(KK)*(Y(KK)**2+Z(KK)**2)
      UTIYY=UTIYY+AMS(KK)*(X(KK)**2+Z(KK)**2)
      UTIZZ=UTIZZ+AMS(KK)*(X(KK)**2+Y(KK)**2)
      UTIXY=UTIXY-AMS(KK)*X(KK)*Y(KK)
      UTIXZ=UTIXZ-AMS(KK)*X(KK)*Z(KK)
      UTIYZ=UTIYZ-AMS(KK)*Y(KK)*Z(KK)
 2100 CONTINUE
C
C  SELECTION OF LEVEL FROM THE TYPE OF THE BOND
C
      IF(IBCHAR(3,II).NE.0) THEN
C
C         NOW ON BRANCH OF LEVEL-3
C
          AML3=AML3+UMASS
          AILX3=AILX3+UMOMX
          AILY3=AILY3+UMOMY
          AILZ3=AILZ3+UMOMZ
          ATLXX3=ATLXX3+UTIXX
          ATLYY3=ATLYY3+UTIYY
          ATLZZ3=ATLZZ3+UTIZZ
          ATLXY3=ATLXY3+UTIXY
          ATLXZ3=ATLXZ3+UTIXZ
          ATLYZ3=ATLYZ3+UTIYZ
C
          AMASS2(II)=AML3
          AMOMX2(II)=AILX3
          AMOMY2(II)=AILY3
          AMOMZ2(II)=AILZ3
          TIXX2(II)=ATLXX3
          TIYY2(II)=ATLYY3
          TIZZ2(II)=ATLZZ3
          TIXY2(II)=ATLXY3
          TIXZ2(II)=ATLXZ3
          TIYZ2(II)=ATLYZ3
C
        IF(IBCHAR(3,II).EQ.1) THEN
C
C           NOW ON THE FIRST UNIT OF THE BRANCH OF LEVEL-3
C
            AML2=AML2+AML3
            AILX2=AILX2+AILX3
            AILY2=AILY2+AILY3
            AILZ2=AILZ2+AILZ3
            ATLXX2=ATLXX2+ATLXX3
            ATLYY2=ATLYY2+ATLYY3
            ATLZZ2=ATLZZ2+ATLZZ3
            ATLXY2=ATLXY2+ATLXY3
            ATLXZ2=ATLXZ2+ATLXZ3
            ATLYZ2=ATLYZ2+ATLYZ3
C
            AML3=0.0
            AILX3=0.0
            AILY3=0.0
            AILZ3=0.0
            ATLXX3=0.0
            ATLYY3=0.0
            ATLZZ3=0.0
            ATLXY3=0.0
            ATLXZ3=0.0
            ATLYZ3=0.0
        ENDIF
      ELSE
C
C        NOW ON LEVEL-1 OR -2
C
        IF(IBCHAR(2,II).NE.0)THEN
C
C        NOW ON A BRANCH OF LEVEL2
C
            AML2=AML2+UMASS
            AILX2=AILX2+UMOMX
            AILY2=AILY2+UMOMY
            AILZ2=AILZ2+UMOMZ
            ATLXX2=ATLXX2+UTIXX
            ATLYY2=ATLYY2+UTIYY
            ATLZZ2=ATLZZ2+UTIZZ
            ATLXY2=ATLXY2+UTIXY
            ATLXZ2=ATLXZ2+UTIXZ
            ATLYZ2=ATLYZ2+UTIYZ
C
            AMASS2(II)=AML2
            AMOMX2(II)=AILX2
            AMOMY2(II)=AILY2
            AMOMZ2(II)=AILZ2
            TIXX2(II)=ATLXX2
            TIYY2(II)=ATLYY2
            TIZZ2(II)=ATLZZ2
            TIXY2(II)=ATLXY2
            TIXZ2(II)=ATLXZ2
            TIYZ2(II)=ATLYZ2
C
          IF(IBCHAR(2,II).EQ.1) THEN
C
C           NOW ON THE FIRST UNIT OF THE BRANCH
C           OF LEVEL-2
C
              AML1=AML2+AML1
              AILX1=AILX2+AILX1
              AILY1=AILY2+AILY1
              AILZ1=AILZ2+AILZ1
              ATLXX1=ATLXX2+ATLXX1
              ATLYY1=ATLYY2+ATLYY1
              ATLZZ1=ATLZZ2+ATLZZ1
              ATLXY1=ATLXY2+ATLXY1
              ATLXZ1=ATLXZ2+ATLXZ1
              ATLYZ1=ATLYZ2+ATLYZ1
C
              AML2=0.0
              AILX2=0.0
              AILY2=0.0
              AILZ2=0.0
              ATLXX2=0.0
              ATLYY2=0.0
              ATLZZ2=0.0
              ATLXY2=0.0
              ATLXZ2=0.0
              ATLYZ2=0.0
          ENDIF
        ELSE
C
C         NOW ON A BRANCH OF LEVEL-1
C
          IF(IBCHAR(1,II).NE.0) THEN
              AML1=AML1+UMASS
              AILX1=AILX1+UMOMX
              AILY1=AILY1+UMOMY
              AILZ1=AILZ1+UMOMZ
              ATLXX1=ATLXX1+UTIXX
              ATLYY1=ATLYY1+UTIYY
              ATLZZ1=ATLZZ1+UTIZZ
              ATLXY1=ATLXY1+UTIXY
              ATLXZ1=ATLXZ1+UTIXZ
              ATLYZ1=ATLYZ1+UTIYZ
C
              AMASS2(II)=AML1
              AMOMX2(II)=AILX1
              AMOMY2(II)=AILY1
              AMOMZ2(II)=AILZ1
              TIXX2(II)=ATLXX1
              TIYY2(II)=ATLYY1
              TIZZ2(II)=ATLZZ1
              TIXY2(II)=ATLXY1
              TIXZ2(II)=ATLXZ1
              TIYZ2(II)=ATLYZ1
C
          ENDIF
        ENDIF
      ENDIF
C
C CALC OF CENTER OF MASS
C OF RIGID BODY-2
C
      CMSX2(II)=AMOMX2(II)/AMASS2(II)
      CMSY2(II)=AMOMY2(II)/AMASS2(II)
      CMSZ2(II)=AMOMZ2(II)/AMASS2(II)
C
C CALC OF AMOUNTS OF BONDS
C OF RIGID BODY-2
C      AMASS1,CENTRE-OF-MASS AND TENSOR-OF-INRETIA
C
       AMASS1(II)=AMASS-AMASS2(II)
       CMSX1(II)=-CMSX2(II)*AMASS2(II)/AMASS1(II)
       CMSY1(II)=-CMSY2(II)*AMASS2(II)/AMASS1(II)
       CMSZ1(II)=-CMSZ2(II)*AMASS2(II)/AMASS1(II)
       TIXX1(II)=TIXX-TIXX2(II)
       TIYY1(II)=TIYY-TIYY2(II)
       TIZZ1(II)=TIZZ-TIZZ2(II)
       TIXY1(II)=TIXY-TIXY2(II)
       TIXZ1(II)=TIXZ-TIXZ2(II)
       TIYZ1(II)=TIYZ-TIYZ2(II)
C
C     UNIT VECTOR OF BONDS;UV
C     BOND VECTOR;BV
C
C       VECTOR IN THE RIGID BODY-1
C
      BVX1(II)=X(IBND1(II))
      BVY1(II)=Y(IBND1(II))
      BVZ1(II)=Z(IBND1(II))
C
C       VECTOR IN THE RIGID BODY-2
C
      BVX2(II)=X(IBND2(II))
      BVY2(II)=Y(IBND2(II))
      BVZ2(II)=Z(IBND2(II))
C
C       UNIT VECTOR OF THE BOND
C
           ANORM=(BVX2(II)-BVX1(II))**2
     *          +(BVY2(II)-BVY1(II))**2
     *          +(BVZ2(II)-BVZ1(II))**2
           ANORM=DSQRT(ANORM)
      UVX(II)=(BVX2(II)-BVX1(II))/ANORM
      UVY(II)=(BVY2(II)-BVY1(II))/ANORM
      UVZ(II)=(BVZ2(II)-BVZ1(II))/ANORM
C
 2000 CONTINUE
      RETURN
             END
C-----------------------------------------------------------------------
      SUBROUTINE HMAT(IBCHAR
     *         ,AMASS1,AMASS2,AMASS
     *         ,TIXX1,TIXY1,TIXZ1,TIYY1,TIYZ1,TIZZ1
     *         ,TIXX2,TIXY2,TIXZ2,TIYY2,TIYZ2,TIZZ2
     *         ,CMSX1,CMSY1,CMSZ1,CMSX2,CMSY2,CMSZ2
     *         ,UVX,UVY,UVZ
     *         ,BVX1,BVY1,BVZ1,BVX2,BVY2,BVZ2
     *         ,ATIXX,ATIYY,ATIZZ,ATIXY,ATIYZ,ATIXZ
     *         ,AOBX1,AOBY1,AOBZ1,AOBX2,AOBY2,AOBZ2
     *         ,APBX1,APBY1,APBZ1,APBX2,APBY2,APBZ2)
C-----------------------------------------------------------------------
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE (MAXSIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/maxsize'
      INCLUDE (SIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/size'
      INCLUDE (HMATRIX)
CTTN  INCLUDE '/labo/qclib/inspidas/common/hmatrix'
C
C   FROM MAIN
      DIMENSION IBCHAR(3,MAXVAR)
C
C   FROM OUTPUT OF BOND
C
      DIMENSION AMASS1(MAXVAR),AMASS2(MAXVAR)
      DIMENSION TIXX1(MAXVAR),TIXY1(MAXVAR),TIXZ1(MAXVAR)
     *,         TIYY1(MAXVAR),TIYZ1(MAXVAR),TIZZ1(MAXVAR)
      DIMENSION TIXX2(MAXVAR),TIXY2(MAXVAR),TIXZ2(MAXVAR)
     *,         TIYY2(MAXVAR),TIYZ2(MAXVAR),TIZZ2(MAXVAR)
      DIMENSION CMSX1(MAXVAR),CMSY1(MAXVAR),CMSZ1(MAXVAR)
      DIMENSION CMSX2(MAXVAR),CMSY2(MAXVAR),CMSZ2(MAXVAR)
      DIMENSION UVX(MAXVAR),UVY(MAXVAR),UVZ(MAXVAR)
      DIMENSION BVX1(MAXVAR),BVY1(MAXVAR),BVZ1(MAXVAR)
      DIMENSION BVX2(MAXVAR),BVY2(MAXVAR),BVZ2(MAXVAR)
C
C  OUTPUT OF HMAT
C
C  THIS ARRAY AH MUST BE COMMON VARIABLE
C     DIMENSION AH(MAXVAR,MAXVAR)
C WORKING DIMENSION OF HMAT
      DIMENSION AOBX1(MAXVAR),AOBY1(MAXVAR),AOBZ1(MAXVAR)
      DIMENSION AOBX2(MAXVAR),AOBY2(MAXVAR),AOBZ2(MAXVAR)
      DIMENSION APBX1(MAXVAR),APBY1(MAXVAR),APBZ1(MAXVAR)
      DIMENSION APBX2(MAXVAR),APBY2(MAXVAR),APBZ2(MAXVAR)
C
C  CALC OF QUANTITIES PERTAINING TO A BOND
C
      DO 1000 II=1,NUMVAR
C
C       QUANTITIES APPEARING IN THE FIRST TERM
C       IN THE RHS OF EQ(26)
C
C  1) RIGID BODY-1
C
      POSX1=BVX1(II)-CMSX1(II)
      POSY1=BVY1(II)-CMSY1(II)
      POSZ1=BVZ1(II)-CMSZ1(II)
C
      BDX1=UVY(II)*POSZ1-UVZ(II)*POSY1
      BDY1=UVZ(II)*POSX1-UVX(II)*POSZ1
      BDZ1=UVX(II)*POSY1-UVY(II)*POSX1
C
C  2) RIGID BODY-2
C
      POSX2=BVX2(II)-CMSX2(II)
      POSY2=BVY2(II)-CMSY2(II)
      POSZ2=BVZ2(II)-CMSZ2(II)
C
      BDX2=UVY(II)*POSZ2-UVZ(II)*POSY2
      BDY2=UVZ(II)*POSX2-UVX(II)*POSZ2
      BDZ2=UVX(II)*POSY2-UVY(II)*POSX2
C
C  3) CALC OF AMOUNTS OF BONDS
C
C   RIGID BODY-1
      AOBX1(II)=AMASS1(II)*BDX1
      AOBY1(II)=AMASS1(II)*BDY1
      AOBZ1(II)=AMASS1(II)*BDZ1
C
C   RIGID BODY-2
      AOBX2(II)=AMASS2(II)*BDX2
      AOBY2(II)=AMASS2(II)*BDY2
      AOBZ2(II)=AMASS2(II)*BDZ2
C
C   QUANTITIES APPEARING IN THE SECOND
C   TERM IN THE RHS OF EQ(26)
C
C      TENSOR * UNIT VECTOR
C         RIGID BODY-1
C
      AIUX1=TIXX1(II)*UVX(II)
     *     +TIXY1(II)*UVY(II)
     *     +TIXZ1(II)*UVZ(II)
      AIUY1=TIXY1(II)*UVX(II)
     *     +TIYY1(II)*UVY(II)
     *     +TIYZ1(II)*UVZ(II)
      AIUZ1=TIXZ1(II)*UVX(II)
     *     +TIYZ1(II)*UVY(II)
     *     +TIZZ1(II)*UVZ(II)
C
C         RIGID BODY-2
C
      AIUX2=TIXX2(II)*UVX(II)
     *     +TIXY2(II)*UVY(II)
     *     +TIXZ2(II)*UVZ(II)
      AIUY2=TIXY2(II)*UVX(II)
     *     +TIYY2(II)*UVY(II)
     *     +TIYZ2(II)*UVZ(II)
      AIUZ2=TIXZ2(II)*UVX(II)
     *     +TIYZ2(II)*UVY(II)
     *     +TIZZ2(II)*UVZ(II)
C
C      UNIT VECTOR * BOND VECTOR
C         RIGID BODY-1
      AUBX1=UVY(II)*BVZ1(II)-UVZ(II)*BVY1(II)
      AUBY1=UVZ(II)*BVX1(II)-UVX(II)*BVZ1(II)
      AUBZ1=UVX(II)*BVY1(II)-UVY(II)*BVX1(II)
C         RIGID BODY-2
      AUBX2=UVY(II)*BVZ2(II)-UVZ(II)*BVY2(II)
      AUBY2=UVZ(II)*BVX2(II)-UVX(II)*BVZ2(II)
      AUBZ2=UVX(II)*BVY2(II)-UVY(II)*BVX2(II)
C
C         MASS * CENTER * UNIT * BOND
C
C         RIGID BODY-1
      AMYBX1=(CMSY1(II)*AUBZ1-CMSZ1(II)*AUBY1)*AMASS1(II)
      AMYBY1=(CMSZ1(II)*AUBX1-CMSX1(II)*AUBZ1)*AMASS1(II)
      AMYBZ1=(CMSX1(II)*AUBY1-CMSY1(II)*AUBX1)*AMASS1(II)
C         RIGID BODY-2
      AMYBX2=(CMSY2(II)*AUBZ2-CMSZ2(II)*AUBY2)*AMASS2(II)
      AMYBY2=(CMSZ2(II)*AUBX2-CMSX2(II)*AUBZ2)*AMASS2(II)
      AMYBZ2=(CMSX2(II)*AUBY2-CMSY2(II)*AUBX2)*AMASS2(II)
C
C
C         RIGID BODY-1
      APBX1(II)=AMYBX1-AIUX1
      APBY1(II)=AMYBY1-AIUY1
      APBZ1(II)=AMYBZ1-AIUZ1
C         RIGID BODY-2
      APBX2(II)=AMYBX2-AIUX2
      APBY2(II)=AMYBY2-AIUY2
      APBZ2(II)=AMYBZ2-AIUZ2
 1000 CONTINUE
C
C CALC OF THE HMAT
C
      DO 2000 II=1,NUMVAR
C
      DO 2100 JJ=II,NUMVAR
C
C   SELECTION OF RIGID BODY
C
      IF(IBCHAR(2,II).EQ.0) THEN
C                         BOND-II IS ON A MAIN CHAIN
                     ICASE=1
      ELSE
          IF(IBCHAR(1,II).NE.IBCHAR(1,JJ)) THEN
C                         BOND-II AND -JJ ARE NOT ON THE SAME BRANCH
                     ICASE=2
          ELSE
              IF(IBCHAR(3,II).EQ.0) THEN
C                         BOND-II IS ON A MAIN BRANCH
                     ICASE=1
              ELSE
                  IF(IBCHAR(2,II).EQ.IBCHAR(2,JJ)) THEN
                     ICASE=1
                  ELSE
                     ICASE=2
                  ENDIF
              ENDIF
          ENDIF
      ENDIF
C
C IN THE CASE OF 1;ICASE=1
C
      IF(ICASE.EQ.1) THEN
          AMX=AOBX1(II)*AOBX2(JJ)
          AMY=AOBY1(II)*AOBY2(JJ)
          AMZ=AOBZ1(II)*AOBZ2(JJ)
C
C IN THE CASE OF 1;ICASE=2
C
      ELSE
          AMX=AOBX2(II)*AOBX2(JJ)
          AMY=AOBY2(II)*AOBY2(JJ)
          AMZ=AOBZ2(II)*AOBZ2(JJ)
      ENDIF
        AM=(AMX+AMY+AMZ)/AMASS
C
        ARAX=ATIXX*APBX2(JJ)
     *      +ATIXY*APBY2(JJ)
     *      +ATIXZ*APBZ2(JJ)
        ARAY=ATIXY*APBX2(JJ)
     *      +ATIYY*APBY2(JJ)
     *      +ATIYZ*APBZ2(JJ)
        ARAZ=ATIXZ*APBX2(JJ)
     *      +ATIYZ*APBY2(JJ)
     *      +ATIZZ*APBZ2(JJ)
C
C        THE SECOND TERM
      IF(ICASE.EQ.1) THEN
        ARA=APBX1(II)*ARAX+APBY1(II)*ARAY+APBZ1(II)*ARAZ
        AH(II,JJ)=AM+ARA
        AH(JJ,II)=AH(II,JJ)
      ELSE
C                   IN THIS CASE WE MUST CONSIDER
C                   THE DIRECTIONS OF UNITVECTOR
C
        ARA=APBX2(II)*ARAX+APBY2(II)*ARAY+APBZ2(II)*ARAZ
        AH(II,JJ)=(AM+ARA)*(-1.D0)
        AH(JJ,II)=AH(II,JJ)
      ENDIF
C
 2100 CONTINUE
 2000 CONTINUE
C
C
      NN=(NUMVAR+1)*NUMVAR
CC    WRITE(21) ((AH(JJ,II),JJ=1,II),II=1,NUMVAR)
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE KMAT(IBCHAR,KUNIT
     *         ,X,Y,Z,AMASS1,AMASS2,AMASS
     *         ,TIXX1,TIXY1,TIXZ1,TIYY1,TIYZ1,TIZZ1
     *         ,TIXX2,TIXY2,TIXZ2,TIYY2,TIYZ2,TIZZ2
     *         ,CMSX1,CMSY1,CMSZ1,CMSX2,CMSY2,CMSZ2
     *         ,UVX,UVY,UVZ
     *         ,BVX1,BVY1,BVZ1
     *         ,ATIXX,ATIYY,ATIZZ,ATIXY,ATIYZ,ATIXZ
     *         ,FRNTX1,FRNTY1,FRNTZ1,FRNTX2,FRNTY2,FRNTZ2
     *         ,BACKX1,BACKY1,BACKZ1,BACKX2,BACKY2,BACKZ2)
C-----------------------------------------------------------------------
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE (MAXSIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/maxsize'
      INCLUDE (SIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/size'
      INCLUDE (UNITNUMS)
CTTN  INCLUDE '/labo/qclib/inspidas/common/unitnums'
      INCLUDE (EIGEN)
CTTN  INCLUDE '/labo/qclib/inspidas/common/eigen'
C
C  INPUT FROM MAIN
      DIMENSION IBCHAR(3,MAXVAR)
      DIMENSION KUNIT(MAXATM)
C  WORKING DIMENSION IN KMAT
      DIMENSION FRNTX1(MAXVAR),FRNTY1(MAXVAR),FRNTZ1(MAXVAR)
      DIMENSION FRNTX2(MAXVAR),FRNTY2(MAXVAR),FRNTZ2(MAXVAR)
      DIMENSION BACKX1(MAXVAR),BACKY1(MAXVAR),BACKZ1(MAXVAR)
      DIMENSION BACKX2(MAXVAR),BACKY2(MAXVAR),BACKZ2(MAXVAR)
C  OUTPUT OF BOND
      DIMENSION X(MAXATM),Y(MAXATM),Z(MAXATM)
      DIMENSION AMASS1(MAXVAR),AMASS2(MAXVAR)
      DIMENSION TIXX1(MAXVAR),TIXY1(MAXVAR),TIXZ1(MAXVAR)
     *,         TIYY1(MAXVAR),TIYZ1(MAXVAR),TIZZ1(MAXVAR)
      DIMENSION TIXX2(MAXVAR),TIXY2(MAXVAR),TIXZ2(MAXVAR)
     *,         TIYY2(MAXVAR),TIYZ2(MAXVAR),TIZZ2(MAXVAR)
      DIMENSION CMSX1(MAXVAR),CMSY1(MAXVAR),CMSZ1(MAXVAR)
      DIMENSION CMSX2(MAXVAR),CMSY2(MAXVAR),CMSZ2(MAXVAR)
      DIMENSION UVX(MAXVAR),UVY(MAXVAR),UVZ(MAXVAR)
      DIMENSION BVX1(MAXVAR),BVY1(MAXVAR),BVZ1(MAXVAR)
C OUTPUT OF KMAT
C  THIS ARRAY AH MUST BE COMMON VARIAVLE
C     DIMENSION AKX(MAXATM,MAXVAR)
C    *         ,AKY(MAXATM,MAXVAR),AKZ(MAXATM,MAXVAR)
      DIMENSION AKX(MAXVAR)
     *         ,AKY(MAXVAR),AKZ(MAXVAR)
      DIMENSION KVX(MAXVAR)
     *         ,KVY(MAXVAR),KVZ(MAXVAR)
C
      DO 1000 I=1,MAXVAR
        KVX(I)=0.D0
        KVY(I)=0.D0
        KVZ(I)=0.D0
 1000 CONTINUE
C
      DO 2000 KK=1,NUMATM
        DO 3000 II=1,NUMVAR
C
C  AT FIRST WE NEED TWO KINDS OF QUANTITIES,
C FRNT AND BACK, PERTAINING TO A BOND
C
C  CALC OF FRNT
C
C        CALC OF (1-M1/M)*Y
C
C        RIGID BODY-1
      RCOX1=(1.D0-AMASS1(II)/AMASS)*BVX1(II)
      RCOY1=(1.D0-AMASS1(II)/AMASS)*BVY1(II)
      RCOZ1=(1.D0-AMASS1(II)/AMASS)*BVZ1(II)
C
C        RIGID BODY-2
      RCOX2=(1.D0-AMASS2(II)/AMASS)*BVX1(II)
      RCOY2=(1.D0-AMASS2(II)/AMASS)*BVY1(II)
      RCOZ2=(1.D0-AMASS2(II)/AMASS)*BVZ1(II)
C
C       ADDITION M1/M*Y1
C
C        RIGID BODY-1
      RCOX1=RCOX1+AMASS1(II)/AMASS*CMSX1(II)
      RCOY1=RCOY1+AMASS1(II)/AMASS*CMSY1(II)
      RCOZ1=RCOZ1+AMASS1(II)/AMASS*CMSZ1(II)
C
C        RIGID BODY-2
      RCOX2=RCOX2+AMASS2(II)/AMASS*CMSX2(II)
      RCOY2=RCOY2+AMASS2(II)/AMASS*CMSY2(II)
      RCOZ2=RCOZ2+AMASS2(II)/AMASS*CMSZ2(II)
C
C      VECTOR PRODUCT OF UNIT VECTOR
C      TO ABOUVE AMOUNT
C
C        RIGID BODY-1
      FRNTX1(II)=UVY(II)*RCOZ1-UVZ(II)*RCOY1
      FRNTY1(II)=UVZ(II)*RCOX1-UVX(II)*RCOZ1
      FRNTZ1(II)=UVX(II)*RCOY1-UVY(II)*RCOX1
C
C        RIGID BODY-2
      FRNTX2(II)=UVY(II)*RCOZ2-UVZ(II)*RCOY2
      FRNTY2(II)=UVZ(II)*RCOX2-UVX(II)*RCOZ2
      FRNTZ2(II)=UVX(II)*RCOY2-UVY(II)*RCOX2
C
C  CALC OF NEXT AMOUNTS OF BOND
C
C      UNIT VECTOR * BOND VECTOR
C
C        RIGID BODY-1
      RCPX1=UVY(II)*BVZ1(II)-UVZ(II)*BVY1(II)
      RCPY1=UVZ(II)*BVX1(II)-UVX(II)*BVZ1(II)
      RCPZ1=UVX(II)*BVY1(II)-UVY(II)*BVX1(II)
C
C        RIGID BODY-2
      RCPX2=UVY(II)*BVZ1(II)-UVZ(II)*BVY1(II)
      RCPY2=UVZ(II)*BVX1(II)-UVX(II)*BVZ1(II)
      RCPZ2=UVX(II)*BVY1(II)-UVY(II)*BVX1(II)
C
C      ONCE MORE VECTOR PRODUCT OF M1*Y1
C         *      *         *     *         *      *
C        RIGID BODY-1
      RCQX1=(CMSY1(II)*RCPZ1-CMSZ1(II)*RCPY1)*AMASS1(II)
      RCQY1=(CMSZ1(II)*RCPX1-CMSX1(II)*RCPZ1)*AMASS1(II)
      RCQZ1=(CMSX1(II)*RCPY1-CMSY1(II)*RCPX1)*AMASS1(II)
C
C        RIGID BODY-2
      RCQX2=(CMSY2(II)*RCPZ2-CMSZ2(II)*RCPY2)*AMASS2(II)
      RCQY2=(CMSZ2(II)*RCPX2-CMSX2(II)*RCPZ2)*AMASS2(II)
      RCQZ2=(CMSX2(II)*RCPY2-CMSY2(II)*RCPX2)*AMASS2(II)
C
C      CALC OF I * UNIT VECTOR
C         *     *
C        RIGID BODY-1
      RCRX1=TIXX2(II)*UVX(II)
     *     +TIXY2(II)*UVY(II)
     *     +TIXZ2(II)*UVZ(II)
      RCRY1=TIXY2(II)*UVX(II)
     *     +TIYY2(II)*UVY(II)
     *     +TIYZ2(II)*UVZ(II)
      RCRZ1=TIXZ2(II)*UVX(II)
     *     +TIYZ2(II)*UVY(II)
     *     +TIZZ2(II)*UVZ(II)
C         *     *
C        RIGID BODY-2
      RCRX2=TIXX1(II)*UVX(II)
     *     +TIXY1(II)*UVY(II)
     *     +TIXZ1(II)*UVZ(II)
      RCRY2=TIXY1(II)*UVX(II)
     *     +TIYY1(II)*UVY(II)
     *     +TIYZ1(II)*UVZ(II)
      RCRZ2=TIXZ1(II)*UVX(II)
     *     +TIYZ1(II)*UVY(II)
     *     +TIZZ1(II)*UVZ(II)
C
C      RCQ + RCR
C         *     *     *
C        RIGID BODY-1
      RCQX1=RCQX1+RCRX1
      RCQY1=RCQY1+RCRY1
      RCQZ1=RCQZ1+RCRZ1
C
C        RIGID BODY-2
      RCQX2=RCQX2+RCRX2
      RCQY2=RCQY2+RCRY2
      RCQZ2=RCQZ2+RCRZ2
C
C   BACK
C          *               *
C        RIGID BODY-1
      BACKX1(II)=ATIXX*RCQX1
     *          +ATIXY*RCQY1
     *          +ATIXZ*RCQZ1
      BACKY1(II)=ATIXY*RCQX1
     *          +ATIYY*RCQY1
     *          +ATIYZ*RCQZ1
      BACKZ1(II)=ATIXZ*RCQX1
     *          +ATIYZ*RCQY1
     *          +ATIZZ*RCQZ1
C          *               *
C        RIGID BODY-2
      BACKX2(II)=ATIXX*RCQX2
     *          +ATIXY*RCQY2
     *          +ATIXZ*RCQZ2
      BACKY2(II)=ATIXY*RCQX2
     *          +ATIYY*RCQY2
     *          +ATIYZ*RCQZ2
      BACKZ2(II)=ATIXZ*RCQX2
     *          +ATIYZ*RCQY2
     *          +ATIZZ*RCQZ2
C
C  CALC OF KMAT
C
      JJ=KUNIT(KK)
C
C  SELECTION OF RIGID BODY
C
      IF(IBCHAR(2,II).EQ.0) THEN
C                      THE BOND ON A MAIN CHAIN
         IF(II.GT.JJ) THEN
C                      SELECTION = RIGID BODY-1
                  ICASE=1
         ELSE
C                      SELECTION = RIGID BODY-2
                  ICASE=2
         ENDIF
      ELSE
C                        BOND ON A SIDE CHAIN
         IF(IBCHAR(1,JJ).NE.IBCHAR(1,II)) THEN
C                        ATOM NOT ON THE SIDE CHAIN OF THE BOND
C                        SELECTION = RIGID BODY-1
                  ICASE=1
         ELSE
C                        ATOM ON THE SAME SIDE CHAIN OF THE BOND
           IF(IBCHAR(2,JJ).LT.IBCHAR(2,II)) THEN
C                        SELECTION = RIGID BODY-1
                  ICASE=1
           ELSE
C
              IF(IBCHAR(3,II).EQ.0) THEN
C                        BOND ON MAIN SIDE CHAIN
C                        SELECTION = RIGID BODY-2
                  ICASE=2
              ELSE
C                        BOND ON A BRANCH SIDE CHAIN
C                        SELECTION = RIGID BODY-1
               IF(IBCHAR(3,JJ).GE.IBCHAR(3,II)) ICASE=2
               IF(IBCHAR(3,JJ).LT.IBCHAR(3,II)) ICASE=1
              ENDIF
           ENDIF
        ENDIF
      ENDIF
C
      IF(ICASE.EQ.1) THEN
C
C          SELECTION = RIGID BODY-1
C
            DACKX1=BACKY1(II)*Z(KK)-BACKZ1(II)*Y(KK)
            DACKY1=BACKZ1(II)*X(KK)-BACKX1(II)*Z(KK)
            DACKZ1=BACKX1(II)*Y(KK)-BACKY1(II)*X(KK)
C
C             ELEMENT OF KMAT
C
C           AKX(KK,II)=FRNTX1(II)-DACKX1
C           AKY(KK,II)=FRNTY1(II)-DACKY1
C           AKZ(KK,II)=FRNTZ1(II)-DACKZ1
            AKX(II)=FRNTX1(II)-DACKX1
            AKY(II)=FRNTY1(II)-DACKY1
            AKZ(II)=FRNTZ1(II)-DACKZ1
      ELSE
C
C          SELECTION = RIGID BODY-2
C
            DACKX2=BACKY2(II)*Z(KK)-BACKZ2(II)*Y(KK)
            DACKY2=BACKZ2(II)*X(KK)-BACKX2(II)*Z(KK)
            DACKZ2=BACKX2(II)*Y(KK)-BACKY2(II)*X(KK)
C
C             ELEMENT OF KMAT
C
C           AKX(KK,II)=-FRNTX2(II)+DACKX2
C           AKY(KK,II)=-FRNTY2(II)+DACKY2
C           AKZ(KK,II)=-FRNTZ2(II)+DACKZ2
            AKX(II)=-FRNTX2(II)+DACKX2
            AKY(II)=-FRNTY2(II)+DACKY2
            AKZ(II)=-FRNTZ2(II)+DACKZ2
      ENDIF
        DO 4000 J=1,NUMVAR
          KVX(J)= KVX(J) + AKX(II) * EIGVEC(II,J)
          KVY(J)= KVY(J) + AKY(II) * EIGVEC(II,J)
          KVZ(J)= KVZ(J) + AKZ(II) * EIGVEC(II,J)
 4000   CONTINUE
 3000 CONTINUE
C
CKM   WRITE(IOUT46) (KVX(I),I=1,NUMVAR)
CKM   WRITE(IOUT46) (KVY(I),I=1,NUMVAR)
CKM   WRITE(IOUT46) (KVZ(I),I=1,NUMVAR)
      WRITE(IOUT46) (AKX(I),I=1,NUMVAR),(AKY(I),I=1,NUMVAR),
     &              (AKZ(I),I=1,NUMVAR)
 2000 CONTINUE
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE CHWAKO (IIBND1,IIBND2,LUNIT
     *                ,JBTYPE,COWAKO)
C-----------------------------------------------------------------------
C  READING OF PRECEP
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INCLUDE (MAXSIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/maxsize'
      INCLUDE (COORD)
CTTN  INCLUDE '/labo/qclib/inspidas/common/coord'
      INCLUDE (SIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/size'
      INCLUDE (BOND)
CTTN  INCLUDE '/labo/qclib/inspidas/common/bond'
      INCLUDE (ATOM)
CTTN  INCLUDE '/labo/qclib/inspidas/common/atom'
      INCLUDE (NBTYPE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/nbtype'
C
C OUTPUT OF CHWAKO
C ATTENTION IIBND2 DOESNOT HAVE THE SAME ARRAY SIZE AS IBND2
      DIMENSION IIBND1(MAXVAR),IIBND2(MAXVAR)
      DIMENSION LUNIT(MAXATM),JBTYPE(MAXATM)
      DIMENSION COWAKO(MAXATM,3)
C OUTPUT OF INRUT
C     DIMENSION IBND1(MAXVAR),IBND2(MAXVAR)
C     DIMENSION IBCHAR(3,MAXVAR),COWAKO(MAXATM,3)
C     DIMENSION KUNIT(MAXATM),NBTYPE(MAXATM)
C WORKING DIMENSION OF INPUT
C     DIMENSION KATOM(MAXATM)
C
      DO 1000 II=1,NUMVAR
        NN1=IBND1(II)
        NN2=IBND2(II)
        IIBND1(II)=KATOM(NN1)
        IIBND2(II)=KATOM(NN2)
 1000 CONTINUE
C
      DO 2000 JJ=1,NUMATM
C
        KK=KATOM(JJ)
        NA1=KUNIT(JJ)
        NA2=NBTYPE(JJ)
        LUNIT(KK)=NA1
        JBTYPE(KK)=NA2
 2000 CONTINUE
C
      DO 4000 JJ=1,NUMATM
        KK=KATOM(JJ)
        DO 4100 LL=1,3
          COWAKO(KK,LL)=CO(LL,JJ)
 4100   CONTINUE
 4000 CONTINUE
      RETURN
      END
C-----------------------------------------------------------------------
       SUBROUTINE DIAG
C-----------------------------------------------------------------------
C SOLVE THE GENERALIZED EIGEN VALUE EQUATION
C      FV = HVE
C           F :SECOND-DERIVATIVE MATRIX
C           H :KINETIC ENRGY MATRIX
C           V :EIGEN VECTOR MATRIX
C           E :EIGEN VALUE MATRIX
C BY USEING LIBRARY PROGRAM NICER.
C (REFERENCE)
C    BEPPU & NINOMIYA,(1981) COMP.PHYS.COM.23,123-126
C
      IMPLICIT REAL*8(A-H,O-Z)
      INCLUDE (MAXSIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/maxsize'
      INCLUDE (SIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/size'
      INCLUDE (HMATRIX)
CTTN  INCLUDE '/labo/qclib/inspidas/common/hmatrix'
      INCLUDE (FMATRIX)
CTTN  INCLUDE '/labo/qclib/inspidas/common/fmatrix'
      INCLUDE (EIGEN)
CTTN  INCLUDE '/labo/qclib/inspidas/common/eigen'
      INCLUDE (UNITNUMS)
CTTN  INCLUDE '/labo/qclib/inspidas/common/unitnums'
      DIMENSION AB(MAXVAR,MAXVAR),BD(MAXVAR),
     &          W1(MAXVAR),W2(MAXVAR),W3(MAXVAR),W4(MAXVAR),
     &          W5(MAXVAR),W6(MAXVAR),W7(MAXVAR)
C
C AB : THE RIGHT UPPER HALF ELEMENTS (INCLUDING THE DIAGONAL ELEMENTS )
C      ARE THOSE OF F-MATRIX AND
C      THE LEFT LOWER HALF ELEMENTS ARE THOSE OF H-MATRIX
C BD : BD(I) = H(I,I)
C
      DO 100 I=2,NUMVAR
        DO 110 J=1,I-1
          AB(I,J)=AH(I,J)
  110   CONTINUE
  100 CONTINUE
      K=0
      DO 200 J=1,NUMVAR
        DO 210 I=1,J
          K=K+1
          AB(I,J)=G(K)
  210   CONTINUE
  200  CONTINUE
       DO 300 I=1,NUMVAR
         BD(I)=AH(I,I)
  300  CONTINUE
C
C EIGEN VALUES AND EIGEN VECTORS
C EIGEN VALUES ARE ORDERED FROM THE SMALLEST VALUE (IORD=-1)
C
      ICHO=0
      IORD=-1
      EPS=1.E-10
      CALL NGHOUD(AB,MAXVAR,NUMVAR,NUMVAR,NUMVAR,
     &            EPS,IORD,ICHO,BD,EIGVAL,EIGVEC,ILL,
     &            W1,W2,W3,W4,W5,W6,W7)
      IF (ILL .NE. 0) THEN
        WRITE(IOUT06,*) ' STOPPED AT NGHOUD BECAUSE ILL=' ,ILL
        STOP
      END IF
C
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE OUTGR(IOUT,COLMS)
C-----------------------------------------------------------------------
      IMPLICIT REAL*8(A-H,O-Z)
      INTEGER IOUT, COLMS
C
C INITIALIZE
C ----------
      PARAMETER(PI = 3.1415926535)
      PARAMETER(C  = 2.9979E10 )
      INCLUDE (MAXSIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/maxsize'
      INCLUDE (SIZE)
CTTN  INCLUDE '/labo/qclib/inspidas/common/size'
      INCLUDE (EIGEN)
CTTN  INCLUDE '/labo/qclib/inspidas/common/eigen'
      INCLUDE (UNITNUMS)
CTTN  INCLUDE '/labo/qclib/inspidas/common/unitnums'
C
      REAL*8 NWN,XWN
      DIMENSION NWN(128), XWN(128)
      REAL*8 WN(MAXVAR),MAXWN,MINWN,DWN
      INTEGER OUTRNG
C
C GET MAXIMUM & MINIMUM VALUE OF WN(I)
C ------------------------------------
      WN(1)=SQRT(4.1855E26 * EIGVAL(1))/(2*PI*C)
      MAXWN = WN(1)
      MINWN = WN(1)
      DO 991 I=2,NUMVAR
        WN(I)=SQRT(4.1855E26 * EIGVAL(I))/(2*PI*C)
        IF (MAXWN.LT.WN(I)) THEN
          MAXWN = WN(I)
        END IF
        IF (MINWN.GT.WN(I)) THEN
          MINWN = WN(I)
        END IF
  991 CONTINUE
C
C SET MAXIMUM VALUE (SPECIAL)
C ---------------------------
      MAXWN = 1000.0
C
C SET DWN (REMARK : NOT TO LOSE MAXIMUM, DEVIDE (MAX-MIN) BY (COLMS-1).)
C --------
      DWN = (MAXWN - MINWN) / (COLMS - 1)
                                                                        
C
C SET MID_VALUE(XWN(I)) & CLEAR COUNTER(NWN(I))
C ---------------------------------------------
      DO 993 I=1,COLMS
        XWN(I) = MINWN + (I-0.5) * DWN
        NWN(I) = 0.0
  993 CONTINUE
C
C COUNTING
C --------
      OUTRNG = 0
      DO 992 I=1,NUMVAR
        J = INT((WN(I) - MINWN) / DWN) + 1
        IF (J.LE.COLMS) THEN
          NWN(J) = NWN(J) + 1
        ELSE
          OUTRNG = OUTRNG + 1
        END IF
  992 CONTINUE
C
C OUTPUT HISTGRAM
C ---------------
      CALL GRAPH(IOUT,'HIST','WAVE_NUMBER HISTGRAM',COLMS+12,22
     &           ,COLMS
     &           ,XWN,5,'WAVE NUMBER'
     &           ,NWN,3,'NUMBER')
      WRITE(IOUT,600) OUTRNG
  600 FORMAT(' ',I5,' DATA ARE OUT OF RANGE.')
      END
