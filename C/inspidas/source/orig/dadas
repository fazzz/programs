CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C     PROGRAM NAME : DADAS (DISTANCE ANALYSIS IN DIHEDRAL ANGLE SPACE)
C
C     VERSION : 2.50
C
C     PRODUCED BY W.BRAUN & N.GO (198X.X.X)
C
C     MODIFIED BY T.IKURA (1992.2.14)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      PROGRAM MAIN
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (NAR=21,ML=100,MAN=1000,MC=100,MVAR=900,NUMR=21)
      PARAMETER (MA=2000)
C
      REAL*8 RATOM(NAR),CUT(5),WEVW(ML),WEJ(ML),WEW(ML),ANGI(MAN,MC),
     *       GRDVAR(MVAR)
C
COM      REAL TSTR1(2),TSTR2(2),TEND(2),TDIFF(2)
C
      INTEGER ISTR1,ISTR2,IEND,IDIFF
C
      INTEGER NUMLBR(NUMR),NCP(30,NUMR),ICP(4,30,NUMR),LIMIT(ML),
     *        NAC(ML),MV(ML),WC,NCON(MA),ICON(4,MA)
C
      CHARACTER NAMLBR(NUMR)*4,NAMATP(30,NUMR)*4,WV*1,CRDID*4
C
      EXTERNAL GRDEB
C
C--------
C
COM      CALL  ETIME(TSTR1)
C
         CALL  CLOCKM(ISTR1)
C
C--------
C
C     CALL  UNIXIO
C
C--------
C
      CALL  INSTRD
C
      CALL  INCONN(NAMLBR,NUMLBR,NAMATP,NCP,ICP)
C
      CALL  INRAD(RATOM)
C
      CALL  INCHRM
C
      CALL  INSEQ
C
      CALL  INCNTL(WV,IRAN,NCONF,ISTCON,IAC,JC,WC,FC,EPS,LTIME,
     *             CRDID,CUT,NLOOP,LIMIT,NAC,MV,WEVW,WEJ,WEW,ICRD)
C
      IF (IRAN.EQ.-1) THEN
        CALL  INIAN(NCONF,ANGI)
      END IF
C
COM------ VER.2.50
C
      IF (IRAN.EQ.-2) THEN
        CALL  INIANE(NCONF,ANGI)
      END IF
C
COM------
C
      CALL  INCNST(IAC,JC,WC,NCONF)
C
C--------
C
      CALL  SEQUE
C
      CALL  PARAM
C
      CALL  CONN(NAMLBR,NUMLBR,NAMATP,NCP,ICP,NCON,ICON)
C
      CALL  RADIUS(RATOM)
C
      CALL  VARAN(WV)
C
      CALL  DCNSTR
C
C--------
C
      DO 10 I=1,NCONF
C
        WRITE(6,*) 'CALCULATION FOR #',I
C
C--------
C
        CALL  SPV(I,WV,IRAN,ISTCON,IAC,JC,WC,ANGI)
C
C--------
C
COM        CALL  ETIME(TSTR2)
C
        CALL  CLOCKM(ISTR2)
C
C--------
C
        DO 20 J=1,NLOOP
C
          CALL  DEFNKL(J,NAC,MV,WEVW,WEJ,WEW)
C
          CALL  ACTIV
C
          CALL  GRDEB(EB,GRDVAR,JC,WC,WV)
C
          CALL  MINCG(GRDEB,EPS,LIMIT(J),FC,GRDVAR,EB,JC,WC,J,WV)
C
C--------
C
COM          CALL  ETIME(TEND)
COM          TTIME=TEND(1)-TSTR1(1)
COM          IF (TTIME.GE.(LTIME*60.)) THEN
COM            NLOOP=J
COM            GOTO 30
COM          END IF
C
          CALL  CLOCKM(IEND)
          ITIME=IEND-ISTR1
          IF (ITIME.GE.(LTIME*3600.)) THEN
            NLOOP=J
            GOTO 30
          END IF
C
C--------
C
  20    CONTINUE
C
C--------
C
COM  30    CALL  ETIME(TEND)
COM        TDIFF(1)=TEND(1)-TSTR2(1)
COM        TDIFF(2)=TEND(2)-TSTR2(2)
C
  30    CALL  CLOCKM(IEND)
        IDIFF=IEND-ISTR2
C
        CALL  GRDEB(EB,GRDVAR,JC,WC,WV)
C
COM     CALL  OUTPAR(I,GRDVAR,TDIFF)
C
        CALL  OUTPAR(I,GRDVAR,IDIFF)
C
        CALL  OUTTGT(I,NLOOP,LIMIT,NAC)
C
        CALL  OUTVD(CUT(1),CUT(2),I)
C
        CALL  OUTVV(CUT(3),NCON,ICON)
C
        IF (JC.GE.1) THEN
          CALL  OUTVJ(CUT(4))
        END IF
C
        IF (WC.GE.1) THEN
          CALL  OUTVW(CUT(5))
        END IF
C
COM------ VER.2.50
C
        IF (IRAN.EQ.-2) THEN
          CALL  OUTANE
        ELSE
          CALL  OUTANG
        END IF
C
COM------
C
        IF (ICRD.EQ.1) THEN
          CALL  OUTCRD(CRDID,I)
        END IF
C
        IF (ICRD.EQ.2) THEN
          CALL  OUTPDB(CRDID,I)
        END IF
C
COM------ VER.2.50
C
        IF (ICRD.EQ.3) THEN
          CALL  OUTFLX(CRDID,I)
        END IF
C
COM------
C
  10  CONTINUE
C
C--------
C
      WRITE(6,*) 'DADAS ENDED'
C
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      BLOCK DATA
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/GEN005/IDENT(9)
      COMMON/GEN006/PROANG(3)
      COMMON/GEN007/LBG(3),LEN(3)
      COMMON/PRAM/NREG,NEND,LR(6,20),LRT1(7,26)
      COMMON/PRINT/IPRNT
      COMMON/FIXANG/OMEGA,PHIPRO
      COMMON/CHARM0/ICHRM,NFULR,NENDG
      COMMON/CYSVAL/VALSS,VALSC
C
      REAL*8 IDENT
C
C--------
C
      DATA INSS/10/
      DATA INSC/11/
      DATA INSR/12/
      DATA INS/13/
      DATA INC/14/
      DATA INI/15/
      DATA INCL/16/
      DATA INCU/17/
      DATA INCH/18/
      DATA INCJ/19/
      DATA INCA/20/
      DATA INCW/21/
C
C--------
C
      DATA JPAR/50/
      DATA JTGT/51/
      DATA JVIO/52/
      DATA JANG/53/
      DATA JCO/54/
C
C--------
C
      DATA IPRNT/0/
C
      DATA PROANG/2.136666977D0,1.962081692D0,1.832595715D0/
C     PROANG(1)=122.422D0*PI/180.D0
C     PROANG(2)=112.419D0*PI/180.D0
C     PROANG(3)=105.000D0*PI/180.D0
C
      DATA LBG/3,8,5/
      DATA LEN/10,10,7/
C
      DATA NREG/26/
      DATA NEND/20/
C
      DATA IDENT/1.D0,3*0.D0,1.D0,3*0.D0,1.D0/
C
      DATA OMEGA,PHIPRO/180.D0,-75.D0/
C
      DATA VALSS,VALSC/2.04D0,3.05D0/
C
C--------
C
      DATA ICHRM,NFULR,NENDG/22,21,14/
C
C--------
C
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE SRWEND(SENTCE,IFLEND)
C
C     THIS SUB. MEASURES LENGTH OF FILE NAME.
C
C--------
C
      CHARACTER SRC*1,SENTCE*72
C
C--------
C
      IFLEND=0
C
      DO 10  I=1,72
        SRC=SENTCE(I:I)
        IF (SRC .NE. ' ') THEN
          IFLEND=IFLEND+1
        END IF
  10  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INSTRD
C
C--------
      IMPLICIT REAL*8 (A-H,O-Z)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/CHECK/KNDRES(26),KNDEND(20)
      COMMON/GEN000/CHG(26,26),ALPHA(26,26),TITLE(4,46),LTYPE(26,26)
      COMMON/GEN001/XOORD(3,26,26),SNTH2(26),CSTH2(26),SDEL(26),
     *              CDEL(26)
      COMMON/GEN002/CHIANG(3,7,26),NATOMS(26),NCHI(26),NDPT1(7,26),
     *              NDPT2(7,26),NUM(7,26)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     *              NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),
     *             NDTYPE(22,20)
      COMMON/GEN008/NGEOM(26)
      COMMON/TREE/NBR1(7,26),NPOI1(2,7,26)
      COMMON/PRAM/NREG,NEND,LR(6,20),LRT1(7,26)
C
      INTEGER NSN14(26,26),NFN14(26,26),MSX14(22,20),MFX14(22,20),
     *        MSN14(22,20),MFN14(22,20),NSN15(26,26),MSN15(22,20),
     *        MSX15(22,20),NBB(8,26),NSS(8,26),NANG(8,26),NTOR(26),
     *        NBBN(20),NSSN(20),NANGN(20)
      REAL*8 AR(8,26),AAN(20)
      CHARACTER ALPHA*3,TITLE*4,EALPHA*3
C
C--------
C
      DO 10 I=1,NREG
        READ (INSS,500) (TITLE(L,I),L=1,4)
        READ (INSS,510) NATOMS(I),NCHI(I),SNTH2(I),CSTH2(I),SDEL(I),
     *                  CDEL(I)
        READ (INSS,520) KNDRES(I),NTOR(I),NGEOM(I)
C
        IF (NTOR(I) .NE. 0) THEN
          NT=NTOR(I)
          DO 20 J=1,NT
            READ (INSS,530) AR(J,I),NBB(J,I),NSS(J,I),NANG(J,I)
  20      CONTINUE
        END IF
C
        NUMCHI=NCHI(I)
C
        IF (NUMCHI .NE. 0) THEN
          DO 30 J=1,NUMCHI
            READ (INSS,540) (CHIANG(L,J,I),L=1,3),NDPT1(J,I),
     *                      NDPT2(J,I),NUM(J,I),LRT1(J,I),NBR1(J,I),
     *                      (NPOI1(L,J,I),L=1,2)
  30      CONTINUE
        END IF
C
        NATOM=NATOMS(I)
        READ (INSS,550) ALPHA(1,I),LTYPE(1,I),CHG(1,I),NSN15(1,I),
     *                  NSN14(1,I),NFN14(1,I)
        DO 40 J=2,NATOM
          READ (INSS,560) (XOORD(L,J-1,I),L=1,3),ALPHA(J,I),LTYPE(J,I),
     *                    CHG(J,I),NSN15(J,I),NSN14(J,I),NFN14(J,I)
  40    CONTINUE
        READ (INSS,560) (XOORD(L,NATOM,I),L=1,3)
  10  CONTINUE
C
      DO 50 I=1,NEND
        READ (INSS,500) (TITLE(L,I+NREG),L=1,4)
        READ (INSS,570) NDATOM(I),NBOND(I),(NNDPT1(L,I),NNDPT2(L,I),
     *                  L=1,6)
        READ (INSS,580) KNDEND(I),AAN(I),NBBN(I),NSSN(I),NANGN(I)
        NB=NBOND(I)
C
        IF (NB .EQ. 0) THEN
          NB=1
        END IF
C
        READ (INSS,570) (LR(L,I),L=1,NB)
        ND=NDATOM(I)-3
C
        IF (ND .LT. 7) THEN
          ND=7
        END IF
C
        READ (INSS,570) (MSX15(L,I),L=1,ND)
        READ (INSS,570) (MSX14(L,I),L=1,ND)
        READ (INSS,570) (MFX14(L,I),L=1,ND)
        NATOM=NDATOM(I)
        DO 60 J=1,NATOM
          READ (INSS,560) (ENOORD(L,J,I),L=1,3),EALPHA(J,I),
     *                    NDTYPE(J,I),ECHG(J,I),MSN15(J,I),
     *                    MSN14(J,I),MFN14(J,I)
  60    CONTINUE
  50  CONTINUE
C
C--------
C
 500  FORMAT(4A4)
 510  FORMAT(2I5,4F10.7)
 520  FORMAT(3I4)
 530  FORMAT(F10.4,3I5)
 540  FORMAT(5X,3F9.6,5X,7I3)
 550  FORMAT(37X,A3,I2,F10.6,I5,2X,4I3)
 560  FORMAT(3F10.4,7X,A3,I2,F10.2,I5,2X,4I3)
 570  FORMAT(14I5)
 580  FORMAT(I4,F10.4,3I5)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INCONN(NAMLBR,NUMLBR,NAMATP,NCP,ICP)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (NUMR=21)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
C
      INTEGER NUMLBR(NUMR),NCP(30,NUMR),ICP(4,30,NUMR)
      CHARACTER*4 NAMLBR(NUMR),NAMATP(30,NUMR)
C
C--------
C
      DO 10 I=1,NUMR
        READ (INSC,500) NAMLBR(I)
        READ (INSC,510) NUMLBR(I)
        DO 20 J=1,NUMLBR(I)
          READ (INSC,520) NAMATP(J,I),NCP(J,I),(ICP(K,J,I),K=1,4)
  20    CONTINUE
  10  CONTINUE
C
C--------
C
 500  FORMAT(A4)
 510  FORMAT(I5)
 520  FORMAT(5X,A4,I5,1X,4I4)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INRAD(RATOM)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (NAR=21)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
C
      REAL*8 RATOM(NAR)
C
C--------
C
      DO 10 I=1,NAR
        READ (INSR,500) RATOM(I)
  10  CONTINUE
C
 500  FORMAT(F5.2)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INCHRM
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      COMMON/CHARM0/ICHRM,NFULR,NENDG
      COMMON/CHARM1/IND(26,26),INDC(22,20),NOATM(26),NTATOM(2,20)
      COMMON/CHARM2/ATMNAM(26,26),ATMNME(20,20),ID
      COMMON/CHARM3/VAL
C
      CHARACTER*4 ATMNAM,ATMNME,ID
C
C--------
C
      READ(ICHRM,500) ID,VAL
C
      DO 10 I=1,NFULR
C
        READ(ICHRM,510) NOATM(I)
        NAF=NOATM(I)
C
        DO 20 J=1,NAF
          READ(ICHRM,520) IND(J,I),ATMNAM(J,I)
  20    CONTINUE
C
  10  CONTINUE
C
      DO 30 I=1,NENDG
C
        READ(ICHRM,530) NTATOM(1,I),NTATOM(2,I)
        NAE=NTATOM(1,I)
C
        DO 40 J=1,NAE
          READ(ICHRM,520) INDC(J,I),ATMNME(J,I)
  40    CONTINUE
C
  30  CONTINUE
C
C--------
C
 500  FORMAT(A4,F10.3)
 510  FORMAT(10X,I5)
 520  FORMAT(2X,I2,1X,A4)
 530  FORMAT(10X,2I5)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INSEQ
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MSP=10)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/CYS/KCYS,NCYS,NPAIR(2,MSP)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
C
      CHARACTER NAMRE*4,TIDA*80
C
C--------
C
      READ (INS,500) TIDA
      READ (INS,510) INUMRS,NCYS
      NL=INT(INUMRS*.1)+1
      DO 10 I=1,NL
        J=10*(I-1)
        READ (INS,520) (NAMRE(J+K),K=1,10)
  10  CONTINUE
C
      IF (NCYS .NE. 0) THEN
        READ (INS,530) ((NPAIR(J,I),J=1,2),I=1,NCYS)
      END IF
C
C--------
C
 500  FORMAT(A80)
 510  FORMAT(I5,10X,I5)
 520  FORMAT(5X,10A4)
 530  FORMAT(20I4)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INCNTL(WV,IRAN,NCONF,ISTCON,IAC,JC,WC,FC,EPS,LTIME,
     *                  CRDID,CUT,NLOOP,LIMIT,NAC,MV,WEVW,WEJ,WEW,ICRD)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (ML=100)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
C
      REAL*8 CUT(5),WEVW(ML),WEJ(ML),WEW(ML)
      INTEGER LIMIT(ML),NAC(ML),MV(ML),WC
      CHARACTER*1 WV
      CHARACTER*4 CRDID
C
C--------
C
      READ (INC,500) WV
      READ (INC,510) IRAN,NCONF,ISTCON,IAC,JC,WC
      READ (INC,*) FC,EPS,LTIME
      READ (INC,520) (CUT(I),I=1,5)
      READ (INC,530) NLOOP
      DO 10 I=1,NLOOP
        READ (INC,540) LIMIT(I),NAC(I),MV(I),WEVW(I),WEJ(I),WEW(I)
  10  CONTINUE
      READ (INC,550) CRDID,ICRD
C
C--------
C
 500  FORMAT(A1)
 510  FORMAT(6I5)
 520  FORMAT(5F10.2)
 530  FORMAT(I5)
 540  FORMAT(3I5,3F10.2)
 550  FORMAT(A4,I5)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INIAN(NCONF,ANGI)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MAN=1000,MC=100)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
C
      REAL*8 ANGI(MAN,MC)
COM   REAL*8 ANGI(MAN,MC),TERM(10)
C
C--------
C
      RD=3.141592653589793D0/180.D0
C
      DO 10 I=1,NCONF
COM     READ (INI) (TERM(L),L=1,10)
        DO 20 J=1,INUMRS-2
          K=10*(J-1)
          READ (INI,500) (ANGI(K+L,I),L=1,10)
COM       READ (INI) (ANGI(K+L,I),L=1,10)
          DO 30 L=1,10
            ANGI(K+L,I)=RD*ANGI(K+L,I)
  30      CONTINUE
  20    CONTINUE
COM     READ (INI) (TERM(L),L=1,10)
  10  CONTINUE
C
C--------
C
 500  FORMAT(10F8.3)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INIANE(NCONF,ANGI)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MAN=1000,MC=100)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
C
COM   REAL*8 ANGI(MAN,MC)
      REAL*8 ANGI(MAN,MC),TERM(10)
C
C--------
C
      RD=3.141592653589793D0/180.D0
C
      DO 10 I=1,NCONF
COM     READ (INI) (TERM(L),L=1,10)
        READ (INI,500) (TERM(L),L=1,10)
        DO 20 J=1,INUMRS-2
          K=10*(J-1)
          READ (INI,500) (ANGI(K+L,I),L=1,10)
COM       READ (INI) (ANGI(K+L,I),L=1,10)
          DO 30 L=1,10
            ANGI(K+L,I)=RD*ANGI(K+L,I)
  30      CONTINUE
  20    CONTINUE
COM     READ (INI) (TERM(L),L=1,10)
        READ (INI,500) (TERM(L),L=1,10)
  10  CONTINUE
C
C--------
C
 500  FORMAT(10F8.3)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE INCNST(IAC,JC,WC,NCONF)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      INTEGER WC
C
C--------
C
      CALL  CNSTL
C
      CALL  CNSTU
C
      CALL  CNSTH
C
      CALL  CNSTS
C
      IF (IAC .EQ. 1) THEN
        CALL  CNSTA(NCONF)
      END IF
C
      IF (JC .GE. 1) THEN
        CALL  CNSTJ
      END IF
C
      IF (WC .GE. 1) THEN
        CALL  CNSTW
      END IF
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CNSTL
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MCL=10000)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/CNSL1/VALL(MCL),WL(MCL)
      COMMON/CNSL2/NL,NUML1(MCL),NUML2(MCL)
      COMMON/CNSL3/AML1(MCL),AML2(MCL)
C
      CHARACTER*3 AML1,AML2
C
C--------
C
      READ (INCL,500) NL
C
      IF (NL .EQ. 0) THEN
        RETURN
      END IF
C
      DO 10 I=1,NL
        READ (INCL,510) AML1(I),NUML1(I),AML2(I),NUML2(I),VALL(I),WL(I)
  10  CONTINUE
C
C--------
C
 500  FORMAT(I5)
 510  FORMAT(A3,I3,1X,A3,I3,2F10.4)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CNSTU
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MCU=10000)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/CNSU1/VALU(MCU),WU(MCU)
      COMMON/CNSU2/NU,NUMU1(MCU),NUMU2(MCU)
      COMMON/CNSU3/AMU1(MCU),AMU2(MCU)
C
      CHARACTER*3 AMU1,AMU2
C
C--------
C
      READ (INCU,500) NU
C
      IF (NU .EQ. 0) THEN
        RETURN
      END IF
C
      DO 10 I=1,NU
        READ (INCU,510) AMU1(I),NUMU1(I),AMU2(I),NUMU2(I),VALU(I),WU(I)
  10  CONTINUE
C
C--------
C
 500  FORMAT(I5)
 510  FORMAT(A3,I3,1X,A3,I3,2F10.4)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CNSTH
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MCL=10000,MCU=10000,MCH=100)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/CNSL1/VALL(MCL),WL(MCL)
      COMMON/CNSL2/NL,NUML1(MCL),NUML2(MCL)
      COMMON/CNSL3/AML1(MCL),AML2(MCL)
      COMMON/CNSU1/VALU(MCU),WU(MCU)
      COMMON/CNSU2/NU,NUMU1(MCU),NUMU2(MCU)
      COMMON/CNSU3/AMU1(MCU),AMU2(MCU)
      COMMON/HBND1/NH,NUMH1(MCH),NUMH2(MCH)
      COMMON/HBND2/AMH1(MCH),AMH2(MCH)
C
      REAL*8 VALHL(MCH),VALHU(MCH)
C
      CHARACTER*3 AML1,AML2,AMU1,AMU2,AMH1,AMH2
C
C--------
C
      READ (INCH,500) NH
C
      IF (NH .EQ. 0) THEN
        RETURN
      END IF
C
      DO 10 I=1,NH
        READ (INCH,510) AMH1(I),NUMH1(I),AMH2(I),NUMH2(I),VALHL(I),
     *                  VALHU(I)
  10  CONTINUE
C
      DO 20 I=1,NH
        AML1(I+NL)=AMH1(I)
        NUML1(I+NL)=NUMH1(I)
        AML2(I+NL)=AMH2(I)
        NUML2(I+NL)=NUMH2(I)
        VALL(I+NL)=VALHL(I)
        WL(I+NL)=1.0D0
        AMU1(I+NU)=AMH1(I)
        NUMU1(I+NU)=NUMH1(I)
        AMU2(I+NU)=AMH2(I)
        NUMU2(I+NU)=NUMH2(I)
        VALU(I+NU)=VALHU(I)
        WU(I+NU)=1.0D0
  20  CONTINUE
      NL=NL+NH
      NU=NU+NH
C
C--------
C
 500  FORMAT(I5)
 510  FORMAT(A3,I3,1X,A3,I3,2F10.4)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CNSTS
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MCL=10000,MCU=10000,MSP=10)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/CNSL1/VALL(MCL),WL(MCL)
      COMMON/CNSL2/NL,NUML1(MCL),NUML2(MCL)
      COMMON/CNSL3/AML1(MCL),AML2(MCL)
      COMMON/CNSU1/VALU(MCU),WU(MCU)
      COMMON/CNSU2/NU,NUMU1(MCU),NUMU2(MCU)
      COMMON/CNSU3/AMU1(MCU),AMU2(MCU)
      COMMON/CYS/KCYS,NCYS,NPAIR(2,MSP)
      COMMON/CYSVAL/VALSS,VALSC
C
      CHARACTER*3 AMSS,AMSC,AML1,AML2,AMU1,AMU2
C
C--------
C
      AMSS='SG '
      AMSC='CB '
C
      IF (NCYS .EQ. 0) THEN
        RETURN
      END IF
C
      DO 10 I=1,NCYS
        J=3*(I-1)+NL+1
        AML1(J)=AMSS
        NUML1(J)=NPAIR(1,I)-1
        AML2(J)=AMSS
        NUML2(J)=NPAIR(2,I)-1
        VALL(J)=VALSS
        AML1(J+1)=AMSS
        NUML1(J+1)=NPAIR(1,I)-1
        AML2(J+1)=AMSC
        NUML2(J+1)=NPAIR(2,I)-1
        VALL(J+1)=VALSC
        AML1(J+2)=AMSC
        NUML1(J+2)=NPAIR(1,I)-1
        AML2(J+2)=AMSS
        NUML2(J+2)=NPAIR(2,I)-1
        VALL(J+2)=VALSC
  10  CONTINUE
C
      DO 20 I=1,NCYS*3
        AMU1(I+NU)=AML1(I+NL)
        NUMU1(I+NU)=NUML1(I+NL)
        AMU2(I+NU)=AML2(I+NL)
        NUMU2(I+NU)=NUML2(I+NL)
        VALU(I+NU)=VALL(I+NL)
        WL(I+NL)=1.0D0
        WU(I+NU)=1.0D0
  20  CONTINUE
C
      NL=NL+NCYS*3
      NU=NU+NCYS*3
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CNSTA(NCONF)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MC=100,MAC=20)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/ACON1/IARAN(MC),NOC(MC),NORESC(MAC,MC)
      COMMON/ACON2/ANGC(MAC,MC)
C
      CHARACTER*4 ANGC
C
C--------
C
      DO 10 J=1,NCONF
        READ (INCA,500) IARAN(J),NOC(J)
        DO 20 I=1,NOC(J)
          READ (INCA,510) NORESC(I,J),ANGC(I,J)
  20   CONTINUE
  10  CONTINUE
C
C--------
C
 500  FORMAT(2I5)
 510  FORMAT(I5,1X,A4)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CNSTJ
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MJC=100,MUNI=900)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/JCON1/JRAN,NOJ,NORESJ(MJC),NJ(MJC)
      COMMON/JCON2/ANGJLO(MJC),ANGJUP(MJC),CENTJ(MUNI),HLJ(MUNI),
     *             VJ(MUNI),WJ
      COMMON/JCON3/ANGJ(MJC)
C
      CHARACTER*4 ANGJ
C
C--------
C
      READ (INCJ,500) JRAN,NOJ
      DO 10 I=1,NOJ
        READ (INCJ,510) NORESJ(I),ANGJ(I),ANGJLO(I),ANGJUP(I)
  10  CONTINUE
C
C--------
C
 500  FORMAT(2I5)
 510  FORMAT(I5,1X,A4,2F10.3)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CNSTW
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MWC=100,MUNI=900)
C
      COMMON/IUNIT/INSS,INSC,INSR,INS,INC,INI,INCL,INCU,INCH,INCJ,
     *             INCA,INCW
      COMMON/WCON1/IWRAN,NOW,NORESW(MWC),NW(MWC)
      COMMON/WCON2/ANGWLO(MWC),ANGWUP(MWC),CENTW(MUNI),HLW(MUNI),
     *             VW(MUNI),WW
C
C--------
C
      READ (INCW,500) IWRAN,NOW
      DO 10 I=1,NOW
        READ (INCW,510) NORESW(I),ANGWLO(I),ANGWUP(I)
  10  CONTINUE
C
C--------
C
 500  FORMAT(2I5)
 510  FORMAT(I5,1X,2F10.3)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE SEQUE
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
C
      CHARACTER*4 NAMEND(20),NAMFUL(26),NAMRE
      CHARACTER*80 TIDA
C
      DATA NAMEND/'H2N ','H3N ','CH3N','MCON','HCON','CISH',
     *            'TRAH','H2NP','P-GL','HN  ','COOH','COO ',
     *            'COM ','CONH','CONM','COM2','COOM','COOE',
     *            'CO  ','CO  '/
      DATA NAMFUL/'ALA ','ASP ','CYS ','GLU ','PHE ','GLY ',
     *            'HIS ','ILE ','LYS ','LEU ','MET ','ASN ',
     *            'PRO ','GLN ','ARG ','SER ','THR ','VAL ',
     *            'TRP ','TYR ','CYE ','H-PR','NORL','ORN ',
     *            'HISE','BEAS'/
C
C--------
C
      DO 10 I=1,10
C
        IF (NAMRE(1) .EQ. NAMEND(I)) THEN
          LIST(1)=I
        END IF
C
  10  CONTINUE
C
      IF (LIST(1) .EQ. 0) THEN
        STOP 'NO VALID AMINO ENDGROUP'
      END IF
C
      DO 20 J=2,INUMRS-1
        DO 30 I=1,26
C
          IF (NAMRE(J) .EQ. NAMFUL(I)) THEN
            LIST(J)=I
          END IF
C
  30    CONTINUE
C
        IF (LIST(J) .EQ. 0) THEN
          STOP 'NO VALID AMINO RESIDUE'
        END IF
C
  20  CONTINUE
      DO 40 I=11,20
C
        IF (NAMRE(INUMRS) .EQ. NAMEND(I)) THEN
          LIST(INUMRS)=I
        END IF
C
  40  CONTINUE
C
      IF (LIST(INUMRS) .EQ. 0) THEN
        STOP 'NO VALID CARBOXYL ENDGROUP'
      END IF
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE PARAM
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/CHECK/KNDRES(26),KNDEND(20)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN000/CHG(26,26),ALPHA(26,26),TITLE(4,46),LTYPE(26,26)
      COMMON/GEN002/CHIANG(3,7,26),NATOMS(26),NCHI(26),NDPT1(7,26),
     *              NDPT2(7,26),NUM(7,26)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     *              NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),
     *              NDTYPE(22,20)
C
      CHARACTER ALPHA*3,TITLE*4,EALPHA*3,ALPH*3
C
C--------
C
      NPRE(1)=0
      LAMIN=LIST(1)
      KAMIN=KNDEND(LAMIN)
      KAMIN=IABS(KAMIN)
      NA=NDATOM(LAMIN)
C
      DO 10 I=1,NA
        ALPH(I)=EALPHA(I,LAMIN)
        NBTYPE(I)=NDTYPE(I,LAMIN)
        CHARGE(I)=ECHG(I,LAMIN)
  10  CONTINUE
C
      NA=NA-3
      LASTFL=INUMRS-1
      DO 20 I=2,LASTFL
        LISTI=LIST(I)
        LISTI=IABS(LISTI)
        KINDI=KNDRES(LISTI)
        KINDI=IABS(KINDI)
        NATOM=NATOMS(LISTI)
        NPRE(I)=NA
        K=1
C
        IF (I .EQ. 2) THEN
C
          IF (KINDI.NE.6) THEN
            IF (KINDI.NE.13) THEN
              IF (KINDI.NE.22) THEN
                IF (KIND.NE.31) THEN
                  K=4
                END IF
              END IF
            END IF
          END IF
C
          IF (KINDI.EQ.13) THEN
            IF (KAMIN.EQ. 1) THEN
              STOP 'KAMIN 1'
            ELSE IF (KAMIN .EQ. 2) THEN
              STOP 'KAMIN 2'
            ELSE IF (KAMIN.EQ. 3) THEN
              STOP 'KAMIN 3'
            END IF
          END IF
C
          IF (KINDI.EQ.22) THEN
            IF (KAMIN.EQ. 1) THEN
              STOP 'KAMIN 1'
            ELSE IF (KAMIN .EQ. 2) THEN
              STOP 'KAMIN 2'
            ELSE IF (KAMIN.EQ. 3) THEN
              STOP 'KAMIN 3'
            END IF
          END IF
C
        END IF
C
        DO 30 L=K,NATOM
          N=NA+L
          ALPH(N)=ALPHA(L,LISTI)
          NBTYPE(N)=LTYPE(L,LISTI)
          CHARGE(N)=CHG(L,LISTI)
  30    CONTINUE
C
        IF (I .EQ. 2) THEN
C
          IF (KAMIN .EQ. 1) THEN
            NBTYPE(NA+1)=14
          ELSE IF (KAMIN.EQ.3) THEN
            NBTYPE(NA+1)=14
          END IF
C
          IF (KINDI .EQ. 6) THEN
            IF (KAMIN .EQ. 1) THEN
              ALPH(3)=ALPH(1)
            ELSE IF (KAMIN.EQ.2) THEN
              ALPH(4)=ALPH(2)
              CHARGE(4)=CHARGE(2)
            END IF
          ELSE IF (KINDI.EQ.31) THEN
            IF (KAMIN .EQ. 1) THEN
              ALPH(3)=ALPH(1)
            ELSE IF (KAMIN.EQ.2) THEN
              ALPH(4)=ALPH(2)
              CHARGE(4)=CHARGE(2)
            END IF
          END IF
C
        END IF
C
        NA=NA+NATOM
  20  CONTINUE
C
      NPRE(INUMRS)=NA
      LCARB=LIST(INUMRS)
      KCARB=KNDEND(LCARB)
      KCARB=IABS(KCARB)
      NATOM=NDATOM(LCARB)
      NPRE(INUMRS+1)=NPRE(INUMRS)+NATOM-1
C
      IF (NATOM.NE.1) THEN
        NA=NA-1
        DO 40 I=2,NATOM
          N=NA+I
          ALPH(N)=EALPHA(I,LCARB)
          NBTYPE(N)=NDTYPE(I,LCARB)
          CHARGE(N)=ECHG(I,LCARB)
  40    CONTINUE
C
        IF (KCARB.EQ.12) THEN
          NN=NPRE(INUMRS-1)+7
          CHARGE(NN)=ECHG(1,LCARB)
        END IF
C
      END IF
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CONN(NAMLBR,NUMLBR,NAMATP,NCP,ICP,NCON,ICON)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (NUMR=21,MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
C
      INTEGER NUMRES(MRES),NREC(MRES),NCON(MA),ICON(4,MA),IC(4),
     *        NUMLBR(NUMR),NCP(30,NUMR),ICP(4,30,NUMR)
      CHARACTER*4 NITRO,ICARB,NAMAT,NAMACD,NAMRE,NAMLBR(NUMR),
     *            NAMATP(30,NUMR)
      CHARACTER*80 TIDA
C
      DATA NITRO/'N   '/,ICARB/'C   '/
C
C--------
C
      LASTFL=INUMRS-1
      NUMRES(1)=0
      NATOM=0
C
      DO 10 IRES=2,LASTFL
        NAMACD=NAMRE(IRES)
        DO 20 I=1,NUMR
          IF (NAMACD .EQ. NAMLBR(I)) THEN
            NUMRES(IRES)=NUMLBR(I)
            NREC(IRES)=I
          END IF
  20    CONTINUE
  10  CONTINUE
C
      DO 30 IRES=2,LASTFL
        IABS0=NPRE(IRES)-NPRE(2)
        I=NREC(IRES)
        DO 40 J=1,NUMRES(IRES)
          NAMAT=NAMATP(J,I)
          NC=NCP(J,I)
          IC(1)=ICP(1,J,I)
          IC(2)=ICP(2,J,I)
          IC(3)=ICP(3,J,I)
          IC(4)=ICP(4,J,I)
C
          IF (NAMAT.EQ.NITRO) THEN
            CALL PEPCON(NREC,NAMATP,LASTFL,NUMRES,NC,IC,IABS0,IRES-1,
     *                  ICARB)
          END IF
C
          IF (NAMAT.EQ.ICARB) THEN
            CALL PEPCON(NREC,NAMATP,LASTFL,NUMRES,NC,IC,IABS0,IRES+1,
     *                  NITRO)
          END IF
C
          NATOM=NATOM+1
          NCON(NATOM)=NC
          DO 50 L=1,NC
            ICON(L,NATOM)=IC(L)+IABS0
  50      CONTINUE
  40    CONTINUE
  30  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE PEPCON(NREC,NAMATP,LFL,NRES,NUMCON,ICONN,ICORR,
     *                  NURE,NAM)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (NUMR=21,MRES=90)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
C
      INTEGER ICONN(4),NRES(NUMR),NREC(MRES)
      CHARACTER*4 NAM,NATO,NAMATP(30,NUMR)
C
C--------
C
      IF (NUMCON .GE. 4) THEN
        RETURN
      END IF
      IF (NURE .LE. 1) THEN
        RETURN
      END IF
      IF (NURE .GT. LFL) THEN
        RETURN
      END IF
      IATO=NPRE(NURE)-NPRE(2)
      I=NREC(NURE)
C
      DO 10 J=1,NRES(NURE)
        NATO=NAMATP(J,I)
        IF (NAM .EQ. NATO) THEN
          NUMCON=NUMCON+1
          ICONN(NUMCON)=IATO+J-ICORR
          RETURN
        END IF
  10  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE RADIUS(RATOM)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (NAR=21,MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
C
      REAL*8 RATOM(NAR)
C
      CHARACTER*3 ALPH
C
C--------
C
      NAT=NPRE(INUMRS+1)
      DO 10 I=1,NAT
        RAD(I)=RATOM(NBTYPE(I))
  10  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE VARAN(WV)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1)
C
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     *             NV(MRES)
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/PRAM/NREG,NEND,LR(6,20),LRT1(7,26)
      COMMON/GEN002/CHIANG(3,7,26),NATOMS(26),NCHI(26),NDPT1(7,26),
     *              NDPT2(7,26),NUM(7,26)
      COMMON/TREE/NBR1(7,26),NPOI1(2,7,26)
C
      CHARACTER*1 WV
C
C---- INITIATION -----
C
      NVPRE(1)=0
      NVPRE(2)=0
      NV(1)=0
      NTPRE(1)=0
      NTPRE(2)=0
      ITREE=0
      NVAR=0
C
      DO 10 I=1,MTR
        INDPSI(I)=0
  10  CONTINUE
C
C----------------------------------------
C---- FULL RESIDUE WITHOUT LAST ONE -----
C----------------------------------------
C
      DO 20  IRES=2,INUMRS-2
        IABS0=NPRE(IRES)
        IABS1=NPRE(IRES+1)
        IABSV=NVPRE(IRES)
        ITR0=NTPRE(IRES)
        ILIST=LIST(IRES)
C
C========= FOR IRES = GLY ==========
C
        IF (ILIST .EQ. 6) THEN
C
C---- FOR PHI -----
C
          NVAR=NVAR+1
          ITREE=ITREE+1
          NABEG(NVAR)=IABS0+1
          NAEND(NVAR)=IABS0+3
          IRBEG(ITREE)=IABS0+4
          IREND(ITREE)=IABS0+7
          NBR(ITREE)=1
          NPOINT(1,ITREE)=ITR0+2
          NPOINT(2,ITREE)=0
          INODE(NVAR)=ITREE
          NDXARR(1,IRES)=1
C
C---- FOR PSI -----
C
          NVAR=NVAR+1
          ITREE=ITREE+1
          NABEG(NVAR)=IABS0+3
          NAEND(NVAR)=IABS0+7
          IRBEG(ITREE)=IABS0+8
          IREND(ITREE)=IABS1+1
          NBR(ITREE)=1
          NPOINT(1,ITREE)=ITR0+3
          NPOINT(2,ITREE)=0
          INODE(NVAR)=ITREE
          NDXARR(2,IRES)=2
          INDPSI(ITREE)=1
C
C---- FOR OMEGA -----
C
          ITREE=ITREE+1
          IRBEG(ITREE)=IABS1+2
          IREND(ITREE)=IABS1+3
          NBR(ITREE)=1
          NPOINT(1,ITREE)=ITR0+4
          NPOINT(2,ITREE)=0
C
C---- FOR OMEGA OF OMEGA VARIABLE VERSION -----
C
          IF (WV.EQ.'Y') THEN
            NVAR=NVAR+1
            NABEG(NVAR)=IABS0+7
            NAEND(NVAR)=IABS1+1
            INODE(NVAR)=ITREE
            NDXARR(3,IRES)=3
          END IF
C
        ELSE
C
C========= IF IRES = PRO ==========
C
          IF (ILIST .EQ. 13) THEN
C
C---- FOR PHI (DUMMY) -----
C
            ITREE=ITREE+1
            IRBEG(ITREE)=IABS0+4
            IREND(ITREE)=IABS0+6
            NBR(ITREE)=1
            NPOINT(1,ITREE)=ITR0+2
            NPOINT(2,ITREE)=0
C
C---- FOR CHI1 (DUMMY) -----
C
            ITREE=ITREE+1
            IRBEG(ITREE)=IABS0+8
            IREND(ITREE)=IABS0+17
            NBR(ITREE)=1
            NPOINT(1,ITREE)=ITR0+3
            NPOINT(2,ITREE)=0
C
C---- FOR PSI -----
C
            NVAR=NVAR+1
            ITREE=ITREE+1
            NABEG(NVAR)=IABS0+3
            NAEND(NVAR)=IABS0+6
            IRBEG(ITREE)=IABS0+7
            IREND(ITREE)=IABS1+1
            NBR(ITREE)=1
            NPOINT(1,ITREE)=ITR0+4
            NPOINT(2,ITREE)=0
            INODE(NVAR)=ITREE
            NDXARR(1,IRES)=2
            INDPSI(ITREE)=1
C
C---- FOR OMEGA -----
C
            ITREE=ITREE+1
            IRBEG(ITREE)=IABS1+2
            IREND(ITREE)=IABS1+3
            NBR(ITREE)=1
            NPOINT(1,ITREE)=ITR0+5
            NPOINT(2,ITREE)=0
C
C---- FOR OMEGA OF OMEGA VARIABLE VERSION -----
C
           IF (WV.EQ.'Y') THEN
              NVAR=NVAR+1
              NABEG(NVAR)=IABS0+6
              NAEND(NVAR)=IABS1+1
              INODE(NVAR)=ITREE
              NDXARR(2,IRES)=3
            END IF
C
          ELSE
C
C========= NORMAL CASE ==========
C
C---- FOR PHI -----
C
            NVAR=NVAR+1
            ITREE=ITREE+1
            NABEG(NVAR)=IABS0+1
            NAEND(NVAR)=IABS0+3
            IRBEG(ITREE)=IABS0+4
            IREND(ITREE)=IABS0+6
            NBR(ITREE)=2
            NPOINT(1,ITREE)=ITR0+2
            NPOINT(2,ITREE)=ITR0+NCHI(ILIST)+2
            INODE(NVAR)=ITREE
            NDXARR(1,IRES)=1
C
C---- FOR CHI -----
C
            IF (NCHI(ILIST) .GT. 0) THEN
              INTV=3
              DO 30 IS=1,NCHI(ILIST)
                INTV=INTV+1
                NVAR=NVAR+1
                ITREE=ITREE+1
                NABEG(NVAR)=IABS0+NDPT1(IS,ILIST)
                NAEND(NVAR)=IABS0+NDPT2(IS,ILIST)
                IRBEG(ITREE)=IABS0+LRT1(IS,ILIST)
                IREND(ITREE)=IRBEG(ITREE)+NUM(IS,ILIST)-1
                NBR(ITREE)=NBR1(IS,ILIST)
                NBRIT=NBR(ITREE)
C
                IF (NBRIT.EQ.0) THEN
                  NPOINT(1,ITREE)=0
                  NPOINT(2,ITREE)=0
                ELSE
C
                  IF (NBRIT.NE.2) THEN
                    NPOINT(1,ITREE)=ITR0+NPOI1(1,IS,ILIST)-2
                    NPOINT(2,ITREE)=0
                  ELSE
                    NPOINT(1,ITREE)=ITR0+NPOI1(1,IS,ILIST)-2
                    NPOINT(2,ITREE)=ITR0+NPOI1(2,IS,ILIST)-2
                  END IF
C
                END IF
C
                INODE(NVAR)=ITREE
                NDXARR(INTV,IRES)=INTV
  30          CONTINUE
            END IF
C
C---- FOR PSI -----
C
            NVAR=NVAR+1
            ITREE=ITREE+1
            NABEG(NVAR)=IABS0+3
            NAEND(NVAR)=IABS0+6
            IRBEG(ITREE)=IABS0+7
            IREND(ITREE)=IABS1+1
            NBR(ITREE)=1
            NPOINT(1,ITREE)=ITR0+NCHI(ILIST)+3
            NPOINT(2,ITREE)=0
            INODE(NVAR)=ITREE
            NDXARR(2,IRES)=2
            INDPSI(ITREE)=1
C
C---- FOR OMEGA -----
C
            ITREE=ITREE+1
            IRBEG(ITREE)=IABS1+2
            IREND(ITREE)=IABS1+3
            NBR(ITREE)=1
            NPOINT(1,ITREE)=ITR0+NCHI(ILIST)+4
            NPOINT(2,ITREE)=0
C
C---- FOR OMEGA OF OMEGA VARIABLE VERSION -----
C
            IF (WV.EQ.'Y') THEN
              NVAR=NVAR+1
              NABEG(NVAR)=IABS0+6
              NAEND(NVAR)=IABS1+1
              INODE(NVAR)=ITREE
              NDXARR(3,IRES)=3
            END IF
C
          END IF
C
        END IF
C
        NVPRE(IRES+1)=NVAR
        NTPRE(IRES+1)=ITREE
        NV(IRES)=NVAR-IABSV
  20  CONTINUE
C
C----------------------------
C---- LAST FULL RESIDUE -----
C----------------------------
C
      IRES=INUMRS-1
      IABS0=NPRE(IRES)
      IABS1=NPRE(INUMRS)
      IABS2=NPRE(INUMRS+1)
      IABSV=NVPRE(IRES)
      ITR0=NTPRE(IRES)
      ILIST=LIST(IRES)
C
C---- FOR PHI -----
C
      ITREE=ITREE+1
      IRBEG(ITREE)=IABS0+4
      IREND(ITREE)=IABS0+6
C
      IF (ILIST.NE.6) THEN
        IREND(ITREE)=IABS0+7
      END IF
C
      NBR(ITREE)=1
      NPOINT(1,ITREE)=ITR0+2
      NPOINT(2,ITREE)=0
C
      IF (ILIST.NE.13) THEN
        NVAR=NVAR+1
        NABEG(NVAR)=IABS0+1
        NAEND(NVAR)=IABS0+3
      END IF
C
      IF (ILIST.NE.6) THEN
        IF (ILIST.NE.13) THEN
          NBR(ITREE)=2
          NPOINT(2,ITREE)=ITR0+NCHI(ILIST)+2
        END IF
      END IF
C
      INODE(NVAR)=ITREE
      NDXARR(1,IRES)=1
C
C---- FOR CHI -----
C
      IF (ILIST.NE.6) THEN
        IF (ILIST.NE.13) THEN
C
C==== NORMAL CASE =====
C
          INTV=2
C
          DO 40 IS=1,NCHI(ILIST)
            INTV=INTV+1
            NVAR=NVAR+1
            ITREE=ITREE+1
            NABEG(NVAR)=IABS0+NDPT1(IS,ILIST)
            NAEND(NVAR)=IABS0+NDPT2(IS,ILIST)
            IRBEG(ITREE)=IABS0+LRT1(IS,ILIST)
            IREND(ITREE)=IRBEG(ITREE)+NUM(IS,ILIST)-1
            NBR(ITREE)=NBR1(IS,ILIST)
            NBRIT=NBR(ITREE)
C
            IF (NBRIT.EQ.0) THEN
              NPOINT(1,ITREE)=0
              NPOINT(2,ITREE)=0
            ELSE
              IF (NBRIT.NE.2) THEN
                NPOINT(1,ITREE)=ITR0+NPOI1(1,IS,ILIST)-2
                NPOINT(2,ITREE)=0
              ELSE
                NPOINT(1,ITREE)=ITR0+NPOI1(1,IS,ILIST)-2
                NPOINT(2,ITREE)=ITR0+NPOI1(2,IS,ILIST)-2
              END IF
            END IF
C
            INODE(NVAR)=ITREE
            NDXARR(INTV,IRES)=INTV
  40      CONTINUE
C
        ELSE
C
C==== FOR PRO =====
C
          ITREE=ITREE+1
          IRBEG(ITREE)=IABS0+8
          IREND(ITREE)=IABS0+17
          NBR(ITREE)=1
          NPOINT(1,ITREE)=ITR0+3
          NPOINT(2,ITREE)=0
        END IF
      END IF
C
C---- FOR PSI -----
C
      NVAR=NVAR+1
      ITREE=ITREE+1
      NABEG(NVAR)=IABS0+3
      NAEND(NVAR)=IABS0+6
      IRBEG(ITREE)=IABS0+7
      IREND(ITREE)=IABS0+7
      NBR(ITREE)=1
C
      IF (ILIST .EQ. 6) THEN
        NCHI(ILIST)=0
        NAEND(NVAR)=IABS0+7
        IRBEG(ITREE)=IABS0+8
        IREND(ITREE)=IABS0+8
      END IF
C
      IF (ILIST .EQ. 13) THEN
        NCHI(ILIST)=1
      END IF
C
      NPOINT(1,ITREE)=ITR0+NCHI(ILIST)+3
      NPOINT(2,ITREE)=0
      INODE(NVAR)=ITREE
      NDXARR(2,IRES)=2
      INDPSI(ITREE)=1
C
C---- FOR OMEGA -----
C
      ITREE=ITREE+1
      IRBEG(ITREE)=IABS1+1
      IREND(ITREE)=IABS2
      NBR(ITREE)=0
      NPOINT(1,ITREE)=0
      NPOINT(2,ITREE)=0
C
      NVPRE(INUMRS)=NVAR
      NTPRE(INUMRS)=ITREE
      NV(IRES)=NVAR-IABSV
      NV(INUMRS)=0
      IND1=1
C
C------------------------------------------
C---- FOR NUMBERS OF UNIT AND RESIDUE -----
C------------------------------------------
C
      DO 50 IR=1,INUMRS
        IND2=NPRE(IR+1)
        DO 60 I=IND1,IND2
          NUMRE(I)=IR
  60    CONTINUE
        IND1=IND2+1
  50  CONTINUE
C
      DO 70 I=1,IRBEG(1)-1
        NUNIT(I)=0
  70  CONTINUE
C
      DO 80 IU=1,NTPRE(INUMRS)
        IBEG=IRBEG(IU)
        IEND=IREND(IU)
        DO 90 I=IBEG,IEND
          J=INDPSI(IU)*(I-IBEG)*(I-IEND)
          IF (J.EQ.0) THEN
            NUNIT(I)=IU
          END IF
  90    CONTINUE
  80  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE DCNSTR
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10,MCL=10000,MCU=10000)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1,MTR1=MTR+1)
      PARAMETER (MCU2=2*MCU,MCL2=2*MCL)
C
      COMMON/CNSL1/VALL(MCL),WL(MCL)
      COMMON/CNSL2/NL,NUML1(MCL),NUML2(MCL)
      COMMON/CNSL3/AML1(MCL),AML2(MCL)
      COMMON/CNSU1/VALU(MCU),WU(MCU)
      COMMON/CNSU2/NU,NUMU1(MCU),NUMU2(MCU)
      COMMON/CNSU3/AMU1(MCU),AMU2(MCU)
      COMMON/DSTR/IAL1(MCL2),IAL2(MCL2),BL(MCL2),IAU1(MCU2),
     *            IAU2(MCU2),BU(MCU2),NDIFFL(MCL2),NDIFFU(MCU2),
     *            DLW(MCL2),DUW(MCU2)
      COMMON/PRCON/NDLOW(MTR1),NDUP(MTR1),NACLOW(MTR),NACUP(MTR)
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
C
      CHARACTER*3 ALPH,AML1,AML2,AMU1,AMU2
C
C--------
C
      NVAR=NTPRE(INUMRS)
      LMAX=0
      KMAX=0
C
      DO 10 I=1,NVAR+1
        NDLOW(I)=0
        NDUP(I)=0
 10   CONTINUE
C
C--------
C
      IF (NL .GT. 0) THEN
C
        DO 20 I=1, NL
          NUM1=NUML1(I)
          NUM2=NUML2(I)
          IR1=NUM1+1
          IR2=NUM2+1
          NALOW=NPRE(IR1)+1
          NAUP=NPRE(IR1+1)
          VAL=VALL(I)
          ICHK=0
          JCHK=0
C
          DO 30 NA=NALOW,NAUP
            IF (AML1(I).EQ.ALPH(NA)) THEN
              NEW1=NA
              ICHK=1
            END IF
  30      CONTINUE
C
          IF (ICHK.EQ.0) THEN
            WRITE (6,*) I,AML1(I)
            STOP ' ERROR IN LOWER CONSTRAINT1'
          END IF
C
          NALOW=NPRE(IR2)+1
          NAUP=NPRE(IR2+1)
C
          DO 40 NA=NALOW,NAUP
            IF (AML2(I).EQ.ALPH(NA)) THEN
              NEW2=NA
              JCHK=1
            END IF
  40      CONTINUE
C
          IF (JCHK.EQ.0) THEN
            WRITE (6,*) I,AML2(I)
            STOP ' ERROR IN LOWER CONSTRAINT2'
          END IF
C
          DO 50 NDOIT =1,2
            IVLOW=NTPRE(IR1-1)
            IVUP=NTPRE(IR1+1)
C
            IF (IVLOW.EQ.0) THEN
              IVLOW=1
            END IF
C
            DO 60 IVAR=IVLOW,IVUP
              IPSI=INDPSI(IVAR)*(NEW1-IRBEG(IVAR))*(NEW1-IREND(IVAR))
C
              IF (NEW1.GE.IRBEG (IVAR)) THEN
                IF (NEW1.LE.IREND (IVAR)) THEN
                  IF (IPSI .EQ.0) THEN
C
                    IVARN=IVAR
                    LLOW=IVARN+1
                    LUP=NVAR+1
C
                    DO 70 L=LLOW,LUP
                      NDLOW(L)=NDLOW(L)+1
  70                CONTINUE
C
                    IEL=IABS(IR1-IR2)
C
                    IF (NDLOW(IVARN+1)   .EQ.NDLOW(IVARN)+1) THEN
                      LNEW=NDLOW(IVARN)+1
                    ELSE
                      LINIT=NDLOW(IVARN+1)-1
                      LEND=NDLOW(IVARN)+1
                      LNEW=NDLOW(IVARN)+1
C
                      DO 80 L=LINIT, LEND,-1
                        IF (NDIFFL(L)  .LE.IEL) THEN
                          LNEW=L+1
                          GOTO 85
                        END IF
  80                  CONTINUE
  85                  CONTINUE
C
                    END IF
C
                    LMAX=LMAX+1
C
                    IF (LMAX.NE.   LNEW) THEN
C
                      DO 90 L=LMAX,    LNEW+1,-1
                        IAL1(L)=IAL1(L-1)
                        IAL2(L)=IAL2(L-1)
                        BL(L)=BL(L-1)
                        NDIFFL(L)=NDIFFL(L-1)
                        DLW(L)=DLW(L-1)
  90                  CONTINUE
C
                    END IF
C
                    IAL1(LNEW)=NEW1
                    IAL2(LNEW)=NEW2
                    BL(LNEW)=VAL*VAL
                    NDIFFL(LNEW)=IEL
                    DLW(LNEW)=WL(I)
C
                  END IF
                END IF
              END IF
C
  60        CONTINUE
C
            NEW2T=NEW2
            NEW2=NEW1
            NEW1=NEW2T
            IR2T=IR2
            IR2=IR1
            IR1=IR2T
C
  50      CONTINUE
  20    CONTINUE
      END IF
C
C--------
C
      IF (NU .GT. 0) THEN
C
        DO 100 I=1, NU
C
          NUM1=NUMU1(I)
          NUM2=NUMU2(I)
          IR1=NUM1+1
          IR2=NUM2+1
          NALOW=NPRE(IR1)+1
          NAUP=NPRE(IR1+1)
          VAL=VALU(I)
          ICHK=0
          JCHK=0
C
          DO 110  NA=NALOW,NAUP
            IF (AMU1(I).EQ.ALPH(NA)) THEN
              NEW1=NA
              ICHK=1
            END IF
 110      CONTINUE
C
          IF (ICHK.EQ.0) THEN
            WRITE (6,*) I,AMU1(I)
            STOP ' ERROR IN UPPER CONSTRAINT1'
          END IF
C
          NALOW=NPRE(IR2)+1
          NAUP=NPRE(IR2+1)
C
          DO 120  NA=NALOW,NAUP
            IF (AMU2(I).EQ.ALPH(NA)) THEN
              NEW2=NA
              JCHK=1
            END IF
 120      CONTINUE
C
          IF (JCHK.EQ.0) THEN
            WRITE (6,*) I,AMU2(I)
            STOP ' ERROR IN UPPER CONSTRAINT2'
          END IF
C
          DO 130 NDOIT =1,2
            IVLOW=NTPRE(IR1-1)
            IVUP=NTPRE(IR1+1)
C
            IF (IVLOW.EQ.0) THEN
              IVLOW=1
            END IF
C
            DO 140 IVAR=IVLOW,IVUP
              IPSI=INDPSI(IVAR)*(NEW1-IRBEG(IVAR))*(NEW1-IREND(IVAR))
C
              IF (NEW1.GE.IRBEG (IVAR)) THEN
                IF (NEW1.LE.IREND (IVAR)) THEN
                  IF (IPSI .EQ.0) THEN
C
                    IVARN=IVAR
                    LLOW=IVARN+1
                    LUP=NVAR+1
C
                    DO 150 L=LLOW,LUP
                      NDUP(L)=NDUP(L)+1
 150                CONTINUE
C
                    IEL=IABS(IR1-IR2)
C
                    IF (NDUP(IVARN+1)    .EQ.NDUP(IVARN)+1) THEN
                      LNEW=NDUP(IVARN)+1
                    ELSE
                      LINIT=NDUP(IVARN+1)-1
                      LEND=NDUP(IVARN)+1
                      LNEW=NDUP(IVARN)+1
C
                      DO 160 L=LINIT, LEND,-1
                        IF (NDIFFU(L)  .LE.IEL) THEN
                          LNEW=L+1
                          GOTO 165
                        END IF
 160                  CONTINUE
 165                  CONTINUE
C
                    END IF
C
                    KMAX=KMAX+1
C
                    IF (KMAX.NE.   LNEW) THEN
                      DO 170 L=KMAX,    LNEW+1,-1
                        IAU1(L)=IAU1(L-1)
                        IAU2(L)=IAU2(L-1)
                        BU(L)=BU(L-1)
                        NDIFFU(L)=NDIFFU(L-1)
                        DUW(L)=DUW(L-1)
 170                  CONTINUE
                    END IF
C
                    IAU1(LNEW)=NEW1
                    IAU2(LNEW)=NEW2
                    BU(LNEW)=VAL*VAL
                    NDIFFU(LNEW)=IEL
                    DUW(LNEW)=WU(I)
C
                  END IF
                END IF
              END IF
 140        CONTINUE
C
            NEW2T=NEW2
            NEW2=NEW1
            NEW1=NEW2T
            IR2T=IR2
            IR2=IR1
            IR1=IR2T
C
 130      CONTINUE
 100    CONTINUE
      END IF
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE SPV(I,WV,IRAN,ISTCON,IAC,JC,WC,ANGI)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10)
      PARAMETER (MAC=20,MC=100,MJC=100,MWC=100,MAN=1000)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1)
C
      COMMON/DHANGL/VAR(MVAR),VART(MTR)
      COMMON/FIXANG/OMEGA,PHIPRO
      COMMON/ACON1/IARAN(MC),NOC(MC),NORESC(MAC,MC)
      COMMON/ACON2/ANGC(MAC,MC)
      COMMON/JCON1/JRAN,NOJ,NORESJ(MJC),NJ(MJC)
      COMMON/JCON2/ANGJLO(MJC),ANGJUP(MJC),CENTJ(MVAR),HLJ(MVAR),
     *             VJ(MVAR),WJ
      COMMON/JCON3/ANGJ(MJC)
      COMMON/WCON1/JWRAN,NOW,NORESW(MWC),NW(MWC)
      COMMON/WCON2/ANGWLO(MWC),ANGWUP(MWC),CENTW(MVAR),HLW(MVAR),
     *             VW(MVAR),WW
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
C
      CHARACTER ANGC*4,ANGJ*4,WV*1
      REAL*8 LO,ANGI(MAN,MC),RNUM(MVAR*2)
      INTEGER NC(MAC),WC
      INTEGER*4 IX
C
      RD=3.141592653589793D0/180.D0
      PI2=3.141592653589793D0*2
C
      IX=0
C
C-------------------------
C---- INITIAL ANGLES -----
C-------------------------
C
COM------ VER.2.50
C
COM   IF (IRAN.EQ.-1) THEN
      IF (IRAN.LE.-1) THEN
COM------
        DO 10 NRE=2,INUMRS-1
C
          K0=10*(NRE-2)
          K1=NVPRE(NRE)+1
          K2=NVPRE(NRE+1)
          KK1=NTPRE(NRE)+1
          KK2=NTPRE(NRE+1)
C
          IF (WV.EQ.'Y') THEN
            IF (NRE.EQ.INUMRS-1) THEN
              VAR(K2)=ANGI(K0+2,I)
              VART(KK2)=ANGI(K0+3,I)
            ELSE
              VAR(K2-1)=ANGI(K0+2,I)
              VAR(K2)=ANGI(K0+3,I)
            END IF
          ELSE
            VAR(K2)=ANGI(K0+2,I)
            VART(KK2)=ANGI(K0+3,I)
          END IF
C
          IF (LIST(NRE)   .EQ.6) THEN
            VAR(K1)=ANGI(K0+1,I)
          ELSE
            IF (LIST(NRE)   .EQ.13) THEN
              VART(KK1)=ANGI(K0+1,I)
            ELSE
              VAR(K1)=ANGI(K0+1,I)
              J=3
C
              IF (WV.EQ.'Y') THEN
                IF (NRE.EQ.INUMRS-1) THEN
                  KK=1
                ELSE
                  KK=2
                END IF
              ELSE
                KK=1
              END IF
C
              DO 20 K=K1+1,K2-KK
                J=J+1
                JJ=K0+J
                VAR(K)=ANGI(JJ,I)
  20          CONTINUE
C
            END IF
          END IF
  10    CONTINUE
C
C---- IAC = 1 -----
C
        IF (IAC.EQ.1) THEN
          DO 30 L=1,NOC(I)
C
            IF (ANGC(L,I) .EQ.'PHI ') THEN
              NC(L)=NVPRE(NORESC(L,I)+1)+1
            END IF
C
            IF (ANGC(L,I) .EQ.'PSI ') THEN
              IF (WV.EQ.'Y') THEN
                NC(L)=NVPRE(NORESC(L,I)+2)-1
              ELSE
                NC(L)=NVPRE(NORESC(L,I)+2)
              END IF
            END IF
C
            IF (ANGC(L,I) .EQ.'CHI1') THEN
              NC(L)=NVPRE(NORESC(L,I)+1)+2
            END IF
C
            IF (ANGC(L,I) .EQ.'CHI2') THEN
              NC(L)=NVPRE(NORESC(L,I)+1)+3
            END IF
C
  30      CONTINUE
C
          NOC2=2*NOC(I)
C
          DO 40  L=1,IARAN(I)
            CALL  RANU2(IX,RNUM,NOC2,ITST)
  40      CONTINUE
C
          DO 50  L=1,NOC(I)
            VAR(NC(L))=RD*(360.D0*(RNUM(L)-0.5))
  50      CONTINUE
        END IF
C
      ELSE
C
C---- RANDOMLY GENERATE -----
C
        NUMVAR=NVPRE(INUMRS)
        NR2=2*NUMVAR
C
        DO 60 J=1,ISTCON
          CALL  RANU2(IX,RNUM,NR2,ITST)
  60    CONTINUE
C
        ISTCON=ISTCON+1
C
        DO 70 J=1,NUMVAR
          VAR(J)=RD*(360.D0*(RNUM(J)-0.5))
  70    CONTINUE
C
        DO 80 J=2,INUMRS-1
C
          IF (WV.EQ.'Y') THEN
            IF (J.EQ.INUMRS-1) THEN
              KK2=NTPRE(J+1)
              VART(KK2)=OMEGA*RD
            ELSE
             K2=NVPRE(J+1)
             VAR(K2)=OMEGA*RD
            END IF
          ELSE
            KK2=NTPRE(J+1)
            VART(KK2)=OMEGA*RD
          END IF
C
          IF (LIST(J)   .EQ.13) THEN
            KK1=NTPRE(J)+1
            VART(KK1)=PHIPRO*RD
          END IF
C
  80    CONTINUE
C
      END IF
C
C---------------------------
C---- INFORMATION OF J -----
C---------------------------
C
      IF (JC.GE.1) THEN
        DO 90 J=1,NOJ
C
          IF (ANGJ(J)  .EQ.'PHI ') THEN
            NJ(J)=NVPRE(NORESJ(J)+1)+1
          END IF
C
          IF (ANGJ(J)  .EQ.'PSI ') THEN
            IF (WV.EQ.'Y') THEN
              NJ(J)=NVPRE(NORESJ(J)+2)-1
            ELSE
              NJ(J)=NVPRE(NORESJ(J)+2)
            END IF
          END IF
C
          IF (ANGJ(J)  .EQ.'CHI1') THEN
            NJ(J)=NVPRE(NORESJ(J)+1)+2
          END IF
C
          CENTJ(NJ(J))=0.5*RD*(ANGJUP(J)+ANGJLO(J))
          HLJ(NJ(J))=0.5*RD*(ANGJUP(J)-ANGJLO(J))
C
  90    CONTINUE
C
C---- SPECIFY ANGLES WITH J -----
C
        IF (JC.EQ.2) THEN
C
          NOJ2=2*NOJ
C
          DO 100  J=1,JRAN
            CALL  RANU2(IX,RNUM,NOJ2,ITST)
 100      CONTINUE
C
          DO 110  J=1,NOJ
            K=NJ(J)
            LO=ANGJLO(J)
            UP=ANGJUP(J)
C
            IF (VAR(K).LT.LO) THEN
              VAR(K)=CENTJ(K)+2*HLJ(K)*(RNUM(J)-0.5)
            END IF
C
            IF (VAR(K).GT.UP) THEN
              VAR(K)=CENTJ(K)+2*HLJ(K)*(RNUM(J)-0.5)
            END IF
C
 110      CONTINUE
        END IF
      END IF
C
C----------------------------------
C---- INFORMATION OF W-ANGLES -----
C----------------------------------
C
      IF (WV.EQ.'Y') THEN
        IF (WC.GE.1) THEN
C
          DO 120  J=1,NOW
            NW(J)=NVPRE(NORESW(J)+2)
            CENTW(NW(J))=0.5*RD*(ANGWUP(J)+ANGWLO(J))
            HLW(NW(J))=0.5*RD*(ANGWUP(J)-ANGWLO(J))
 120      CONTINUE
C
C---- SPECIFY W-ANGLES -----
C
          IF (WC.EQ.2) THEN
C
            NOW2=2*NOW
C
            DO 130  J=1,JWRAN
              CALL  RANU2(IX,RNUM,NOW2,ITST)
 130        CONTINUE
C
            DO 140  J=1,NOW
              K=NW(J)
              LO=ANGWLO(J)
              UP=ANGWUP(J)
C
              IF (UP.GT.180.D0) THEN
                IF (VAR(K).LT.0) THEN
                  VAR(K)=VAR(K)+PI2
                END IF
              END IF
C
              IF (VAR(K).LT.LO) THEN
                VAR(K)=CENTW(K)+2*HLW(K)*(RNUM(J)-0.5)
              END IF
C
              IF (VAR(K).GT.UP) THEN
                VAR(K)=CENTW(K)+2*HLW(K)*(RNUM(J)-0.5)
              END IF
C
 140        CONTINUE
          END IF
        END IF
      END IF
C
      NVAR=NVPRE(INUMRS)
C
      DO 150 IVAR=1,NVAR
        ITREE=INODE(IVAR)
        VART(ITREE)=VAR(IVAR)
 150  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE RANU2(IX,A,N,ICON)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      INTEGER*4 IX
      REAL*8 A(N)
C
C--------
C
      DO 10 I=1,N
        IX=IX*322771+1234567891
        IF (IX.LT.0) THEN
          IX=(IX+2147483647)+1
        END IF
        A(I)=FLOAT(IX)*0.4656613E-9
  10  CONTINUE
C
      ICON=0
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE DEFNKL(J,NAC,MV,WEVW,WEJ,WEW)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MVAR=900,MJC=100,MWC=100,ML=100)
C
      COMMON/JCON2/ANGJLO(MJC),ANGJUP(MJC),CENTJ(MVAR),HLJ(MVAR),
     *             VJ(MVAR),WJ
      COMMON/WCON2/ANGWLO(MWC),ANGWUP(MWC),CENTW(MVAR),HLW(MVAR),
     *             VW(MVAR),WW
      COMMON/NDIFF/NDIFF,NVAN,WVW
C
      REAL*8 WEVW(ML),WEJ(ML),WEW(ML)
C
      INTEGER NAC(ML),MV(ML)
C--------
C
      NDIFF=NAC(J)
      NVAN=MV(J)
      WVW=WEVW(J)
      WJ=WEJ(J)
      WW=WEW(J)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE ACTIV
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10,MCL=10000,MCU=10000)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1,MTR1=MTR+1)
      PARAMETER (MCU2=2*MCU,MCL2=2*MCL)
C
      COMMON/DSTR/IAL1(MCL2),IAL2(MCL2),BL(MCL2),IAU1(MCU2),IAU2(MCU2),
     *            BU(MCU2),NDIFFL(MCL2),NDIFFU(MCU2),DLW(MCL2),DUW(MCU2)
      COMMON/PRCON/NDLOW(MTR1),NDUP(MTR1),NACLOW(MTR),NACUP(MTR)
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/NDIFF/NDIFF,NVAN,WVW
C
C--------
C
      NVAR=NTPRE(INUMRS)
C
      DO 10 IVAR=1,  NVAR
        N1=NDLOW(IVAR)+1
        N2=NDLOW(IVAR+1)
        N=0
C
        IF (N1.LE.N2) THEN
          DO 20 I=N1,N2
            IF (NDIFFL(I)  .LE.NDIFF) THEN
              N=N+1
            END IF
  20      CONTINUE
        END IF
C
        NACLOW(IVAR)=N
        N1=NDUP(IVAR)+1
        N2=NDUP(IVAR+1)
        N=0
C
        IF (N1.LE.N2) THEN
          DO 30 I=N1,N2
            IF (NDIFFU(I)  .LE.NDIFF) THEN
              N=N+1
            END IF
  30      CONTINUE
        END IF
C
        NACUP(IVAR)=N
  10  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE GRDEB(EB,GRDVAR,JC,WC,WV)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MVAR=900)
C
      INTEGER WC
      REAL*8 GRDVAR(MVAR)
      CHARACTER*1 WV
C
C--------
C
      CALL  VIOBND(EB,GRDVAR,WV)
C
      IF (JC.GE.1) THEN
        CALL  GRDJ(EB,GRDVAR)
      END IF
C
      IF (WC.GE.1) THEN
        CALL  GRDW(EB,GRDVAR)
      END IF
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE VIOBND(EB,GRDVAR,WV)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10,MCL=10000,MCU=10000)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1,MTR1=MTR+1)
      PARAMETER (MCU2=2*MCU,MCL2=2*MCL,MVAR6=6*MVAR)
C
      COMMON/DSTR/IAL1(MCL2),IAL2(MCL2),BL(MCL2),IAU1(MCU2),
     *            IAU2(MCU2),BU(MCU2),NDIFFL(MCL2),NDIFFU(MCU2),
     *            DLW(MCL2),DUW(MCU2)
      COMMON/PRCON/NDLOW(MTR1),NDUP(MTR1),NACLOW(MTR),NACUP(MTR)
      COMMON/NDIFF/NDIFF,NVAN,WVW
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
C
      REAL*8 GRDVAR(MVAR),FIN(MVAR6),FOUT(MVAR6),X1(3),X2(3),DIFF(3)
      CHARACTER ALPH*3,WV*1
C
C--------
C
      EPSI=0.D0
C
      CALL  RENV
C
      CALL  GENER
C
      NVAR=NVPRE(INUMRS)
      NVAR6=6*NTPRE(INUMRS)
      EB=0
C
      DO 10 I=1,NVAR6
        FIN(I)=0.0D0
  10  CONTINUE
C
      IF (NVAN .GE. 0) THEN
        CALL  HCORE(EB,FIN,WV)
      END IF
C
      IND0=0
C
C--------
C
      DO 20 IVAR=1,NTPRE(INUMRS)
        IF (NACLOW    (IVAR).GT.0) THEN
          LLOW=NDLOW(IVAR)+1
          LUP=LLOW+NACLOW(IVAR)-1
          DO 30 L=LLOW,  LUP
            BLSQ=BL(L)
            DO 40 K=1,3
              X1(K)=COORD(K,IAL1(L))
              X2(K)=COORD(K,IAL2(L))
  40        CONTINUE
C
            DSQ=0
C
            DO 50 K=1,3
              DIFF(K)=X1(K)-X2(K)
              DSQ=DSQ+DIFF(K)*DIFF(K)
  50        CONTINUE
C
            DELSQ=BLSQ-DSQ
C
            IF (DELSQ.GT.EPSI) THEN
              DELSW=DLW(L)*DELSQ/BLSQ
              IF (IAL1(L).GT.IAL2(L)) THEN
                EB=EB+DELSQ*DELSW
              END IF
              XC1=X1(2)*X2(3)-X1(3)*X2(2)
              XC2=X1(3)*X2(1)-X1(1)*X2(3)
              XC3=X1(1)*X2(2)-X1(2)*X2(1)
              IND=IND0+1
              FIN(IND)=FIN(IND)-DELSW*XC1
              IND=IND+1
              FIN(IND)=FIN(IND)-DELSW*XC2
              IND=IND+1
              FIN(IND)=FIN(IND)-DELSW*XC3
              IND=IND+1
              FIN(IND)=FIN(IND)-DELSW*DIFF(1)
              IND=IND+1
              FIN(IND)=FIN(IND)-DELSW*DIFF(2)
              IND=IND+1
              FIN(IND)=FIN(IND)-DELSW*DIFF(3)
            END IF
C
  30      CONTINUE
C
        END IF
C
C--------
C
        IF (NACUP     (IVAR).GT.0) THEN
          LLOW=NDUP(IVAR)+1
          LUP=LLOW+NACUP(IVAR)-1
          DO 60 L=LLOW,  LUP
            BUSQ=BU(L)
C
            DO 70 K=1,3
              X1(K)=COORD(K,IAU1(L))
              X2(K)=COORD(K,IAU2(L))
  70        CONTINUE
C
            DSQ=0
C
            DO 80 K=1,3
              DIFF(K)=X1(K)-X2(K)
              DSQ=DSQ+DIFF(K)*DIFF(K)
  80        CONTINUE
C
            DELSQ=DSQ-BUSQ
C
            IF (DELSQ.GT.EPSI) THEN
              DELSW=DUW(L)*DELSQ/BUSQ
              IF (IAU1(L).GT.IAU2(L)) THEN
                EB=EB+DELSQ*DELSW
              END IF
              XC1=X1(2)*X2(3)-X1(3)*X2(2)
              XC2=X1(3)*X2(1)-X1(1)*X2(3)
              XC3=X1(1)*X2(2)-X1(2)*X2(1)
              IND=IND0+1
              FIN(IND)=FIN(IND)+DELSW*XC1
              IND=IND+1
              FIN(IND)=FIN(IND)+DELSW*XC2
              IND=IND+1
              FIN(IND)=FIN(IND)+DELSW*XC3
              IND=IND+1
              FIN(IND)=FIN(IND)+DELSW*DIFF(1)
              IND=IND+1
              FIN(IND)=FIN(IND)+DELSW*DIFF(2)
              IND=IND+1
              FIN(IND)=FIN(IND)+DELSW*DIFF(3)
            END IF
C
  60      CONTINUE
C
        END IF
C
        IND0=IND0+6
  20  CONTINUE
C
      CALL  TREESM(FIN,FOUT)
C
      DO 90 IVAR=1,NVAR
        NAB=NABEG(IVAR)
        NAE=NAEND(IVAR)
        DSQ=0
C
        DO 100 K=1,3
          DIFF(K)=COORD(K,NAE)-COORD(K,NAB)
          DSQ=DSQ+DIFF(K)*DIFF(K)
 100    CONTINUE
C
        DSQ=SQRT(DSQ)
        IND=6*INODE(IVAR)-5
        F1=FOUT(IND)
        IND=IND+1
        F2=FOUT(IND)
        IND=IND+1
        F3=FOUT(IND)
        IND=IND+1
        G1=FOUT(IND)
        IND=IND+1
        G2=FOUT(IND)
        IND=IND+1
        G3=FOUT(IND)
        R1=COORD(2,NAE)*G3-COORD(3,NAE)*G2
        R2=COORD(3,NAE)*G1-COORD(1,NAE)*G3
        R3=COORD(1,NAE)*G2-COORD(2,NAE)*G1
        TEMP=DIFF(1)*(F1+R1)
        TEMP=TEMP+DIFF(2)*(F2+R2)
        TEMP=TEMP+DIFF(3)*(F3+R3)
        GRDVAR(IVAR)=-TEMP/DSQ
  90  CONTINUE
C
      EB=EB/4
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE RENV
C
C--------
C

      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1)
C
      COMMON/DHANGL/VAR(MVAR),VART(MTR)
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     *             NV(MRES)
C
      PI=3.141592653589793D0
C
C--------
C
      NVAR=NVPRE(INUMRS)
      DO 10 IVAR=1,NVAR
        ITREE=INODE(IVAR)
        VART(ITREE)=VAR(IVAR)
  10  CONTINUE
C
      DO 20 IND=1,10
        ANGLES(IND,1)=PI
        ANGLES(IND,INUMRS)=PI
  20  CONTINUE
C
      DO 30 IR=2,     INUMRS-1
        IVLOW=NTPRE(IR)+1
        IVUP=NTPRE(IR+1)
        ANGLES(1,IR)=VART(IVLOW)
        ANGLES(2,IR)=VART(IVUP-1)
        ANGLES(3,IR)=VART(IVUP)
C
        IF (LIST(IR).NE.6) THEN
          IF (LIST(IR).NE.13) THEN
            IL=IVLOW+1
            IU=IVUP-2
            J=3
C
            DO 40 I=IL,IU
              J=J+1
              ANGLES(J,IR)=VART(I)
  40        CONTINUE
C
          END IF
        END IF
C
  30  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE TREESM(FIN,FOUT)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MVAR=900,MPRO=10)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1,MTR6=6*MTR)
C
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
C
      REAL*8 FIN(MTR6),FOUT(MTR6)
      INTEGER J(MTR),Q(MTR)
C
C--------
C
      L=1
      Q(1)=1
C
      DO 10 K=1,6
        FOUT(K)=FIN(K)
  10  CONTINUE
C
      J(1)=1
C
C--------  GOING DOWN -------
C
  20  L=L+1
      Q(L)=NPOINT(J(L-1),Q(L-1))
      IND=(Q(L)-1)*6
C
      DO 30 K=1,6
        IND=IND+1
        FOUT(IND)=FIN(IND)
  30  CONTINUE
C
      IF (NBR(Q(L)).NE.0) THEN
        J(L)=1
        GOTO 20
      END IF
C
C-------- GOING UP ----------
C
  40  L=L-1
      IF (L.NE.0) THEN
        IND0=(Q(L)-1)*6
        IND1=(Q(L+1)-1)*6
C
        DO 50 K=1,6
          IND0=IND0+1
          IND1=IND1+1
          FOUT(IND0)=FOUT(IND0)+FOUT(IND1)
  50    CONTINUE
C
        IF (J(L).EQ.NBR(Q(L))) THEN
          GOTO 40
        END IF
C
        J(L)=J(L)+1
        GOTO 20
      END IF
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE HCORE(EB,FIN,WV)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10,MSP=10)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1)
      PARAMETER (MTR6=6*MTR)
C
      COMMON/CYS/KCYS,NCYS,NPAIR(2,MSP)
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
      COMMON/NDIFF/NDIFF,NVAN,WVW
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
C
      REAL*8 FIN(MTR6)
      CHARACTER ALPH*3,WV*1
      INTEGER ICELL(MA),NBPERM(MA),IPCE(MA),IHB(28)
      LOGICAL*4 NOLFT(MA),RIGHT(MA),FRONT(MA),BACK(MA),TCYS
C
      DATA DCUT/5.0D0/
      DATA IHB/0,1,0,1,8*0,2*2,2*0,3*2,9*0/
C
C--------
C
      NAT=NPRE(INUMRS+1)
C
      DO 10 IR=2,INUMRS-1
        IL=NVPRE(IR)+1
        IU=NVPRE(IR+1)
        IRC=LIST(IR)
        NPREI=NPRE(IR)
        JBEG=NPRE(IR-1)+1
C
        IF (IRC  .EQ.13) THEN
          IBEG=NPREI+1
          IEND=NPREI+17
          JEND=IBEG-1
          JTST1=NABEG(IL-1)
          JTST2=JBEG+5
          JTST3=JBEG+6
          ITST=NPREI+7
C
          IF (IR.NE.2) THEN
            IF (LIST(IR-1).EQ.6) THEN
              JTST2=JBEG+6
              JTST3=JBEG+7
            END IF
          END IF
C
          DO 20 I=IBEG,IEND
            IF (I.NE. ITST) THEN
              ITRI=NUNIT(I)
              INDI=6*ITRI-5
              X1=COORD(1,I)
              Y1=COORD(2,I)
              Z1=COORD(3,I)
              RADI=RAD(I)
C
              DO 30 J=JBEG,  JEND
                IF (J.NE.  JTST1) THEN
                  IF (J.NE.  JTST2) THEN
                    IF (J.NE.  JTST3) THEN
                      ITRJ=NUNIT(J)
                      INDJ=6*ITRJ-5
                      X2=COORD(1,J)
                      Y2=COORD(2,J)
                      Z2=COORD(3,J)
                      RVW=RAD(J)+RADI
                      RVW=RVW*RVW
C
                      CALL CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,
     *                           INDI,INDJ,FIN,EB)
C
                    END IF
                  END IF
                END IF
  30          CONTINUE
C
            END IF
  20      CONTINUE
C
          I=NPREI+7
          ITRI=NUNIT(I)
          INDI=6*ITRI-5
          X1=COORD(1,I)
          Y1=COORD(2,I)
          Z1=COORD(3,I)
          RADI=RAD(I)
          JEND=NPREI+5
          JTST=NPREI+3
C
          DO 40 J=JBEG,  JEND
            IF (J.NE. JTST) THEN
              JJ=NBTYPE(J)
              IF (IHB(JJ).NE.1) THEN
                ITRJ=NUNIT(J)
                INDJ=6*ITRJ-5
                X2=COORD(1,J)
                Y2=COORD(2,J)
                Z2=COORD(3,J)
                RVW=RAD(J)+RADI
                RVW=RVW*RVW
C
                CALL CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,INDI,INDJ,FIN,EB)
C
              END IF
            END IF
  40      CONTINUE
C
          JBEG1=NPREI+8
          JEND=NPREI+17
          ITRJ=NUNIT(JBEG1)
          INDJ=6*ITRJ-5
C
          DO 50  J=JBEG1,JEND
            X2=COORD(1,J)
            Y2=COORD(2,J)
            Z2=COORD(3,J)
            RVW=RAD(J)+RADI
            RVW=RVW*RVW
C
            CALL CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,INDI,INDJ,FIN,EB)
C
  50      CONTINUE
C
        ELSE
C
          DO 60 IVAR=  IL,IU
            ITRI=INODE(IVAR)
            INDI=6*ITRI-5
            IBEG=IRBEG(ITRI)
            IEND=IREND(ITRI)
            JEND=IBEG-1
            NABIV=NABEG(IVAR)
            NABEN=NAEND(IVAR)
C
            DO 70 J=JBEG,  JEND
              IF (J.NE.  NABIV) THEN
                IF (J.NE.  NABEN) THEN
                  JJ=NBTYPE(J)
                  ITRJ=NUNIT(J)
                  INDJ=6*ITRJ-5
                  RADJ=RAD(J)
                  X2=COORD(1,J)
                  Y2=COORD(2,J)
                  Z2=COORD(3,J)
C
                  DO 80 I=IBEG,  IEND
                    IPSI=INDPSI(ITRI)*(I-IBEG)*(I-IEND)
                    IF (NUMRE(I).LT. NUMRE(J)+2) THEN
                      IF (IPSI .EQ.0) THEN
                        II=NBTYPE(I)
                        IF (IHB(II)+  IHB(JJ).NE.3) THEN
                          RVW=RAD(I)+RADJ
                          RVW=RVW*RVW
                          X1=COORD(1,I)
                          Y1=COORD(2,I)
                          Z1=COORD(3,I)
C
                          CALL CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,
     *                               INDI,INDJ,FIN,EB)
C
                        END IF
                      END IF
                    END IF
  80              CONTINUE
C
                END IF
              END IF
  70        CONTINUE
C
  60      CONTINUE
C
          IF (WV.NE.'Y') THEN
            IF (IR   .NE.2) THEN
              IBEG=NPREI+2
              IEND=NPREI+3
              ITRI=NUNIT(IBEG)
              INDI=6*ITRI-5
              JEND=NPRE(IR)
C
              IF (LIST(IR-1).EQ.6) THEN
                JTST1=JBEG+6
                JTST2=JBEG+7
              ELSE
                JTST1=JBEG+5
                JTST2=JBEG+6
              END IF
C
              DO 90 J=JBEG,  JEND
                IF (J.NE.  JTST1) THEN
                  IF (J.NE.  JTST2) THEN
                    JJ=NBTYPE(J)
                    ITRJ=NUNIT(J)
                    INDJ=6*ITRJ-5
                    RADJ=RAD(J)
                    X2=COORD(1,J)
                    Y2=COORD(2,J)
                    Z2=COORD(3,J)
C
                    DO 100 I=IBEG,  IEND
                      IF (NUMRE(I).LT. NUMRE(J)+2) THEN
                        II=NBTYPE(I)
                        IF (IHB(II)+  IHB(JJ).NE.3) THEN
                          RVW=RAD(I)+RADJ
                          RVW=RVW*RVW
                          X1=COORD(1,I)
                          Y1=COORD(2,I)
                          Z1=COORD(3,I)
C
                          CALL CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,
     *                               INDI,INDJ,FIN,EB)
C
                        END IF
                      END IF
 100                CONTINUE
C
                  END IF
                END IF
  90         CONTINUE
C
            END IF
          END IF
        END IF
  10  CONTINUE
C
C--------
C
      CALL  CELL(NAT,DCUT,NXMAX,NYMAX,NZMAX,NXY,NCE,ICELL)
C
      DO 110 L=1,NAT
        NBPERM(L)=L
 110  CONTINUE
C
      CALL  QSORT(NAT,NCE,ICELL,NBPERM,IPCE)
C
      CALL  BOUND(NCE,NXMAX,NYMAX,NZMAX,NXY,NOLFT,RIGHT,BACK,FRONT)
C
      IND1=IPCE(1)
C
      DO 120 ICA1=2,NCE+1
        IND2=IPCE(ICA1)
        IF (IND2.NE.IND1) THEN
          IND2=IND2-1
          IF (IND2.GT.IND1) THEN
            DO 130 ICI=IND1, IND2-1
              I=NBPERM(ICI)
              ITRI=NUNIT(I)
              INDI=6*ITRI-5
              IRI=NUMRE(I)
              X1=COORD(1,I)
              Y1=COORD(2,I)
              Z1=COORD(3,I)
              RADI=RAD(I)
C
              CALL  SST(IRI,TCYS,NP)
C
              JSTRT=ICI+1
C
              IF (TCYS) THEN
                CALL  JLPSS(JSTRT,IND2,I,INDI,X1,Y1,Z1,IRI,RADI,
     *                      NP,NBPERM,FIN,EB)
              ELSE
                CALL  JLP(JSTRT,IND2,I,INDI,X1,Y1,Z1,IRI,RADI,NBPERM,
     *                    FIN,EB)
              END IF
C
 130       CONTINUE
C
          END IF
C
          ICA=ICA1-1
C
          IF (FRONT(ICA)) THEN
            ICZ=ICA
          ELSE
            ICZ=ICA-NXMAX
          END IF
C
          IF (NOLFT(ICA)) THEN
            ICZ=ICZ-1
          END IF
C
          DO 140 I1=1,2
            ICY=ICZ
            DO 150 I2=1,3
              ICB=ICY
              DO 160 I3=1,3
                IF (ICA .LT.ICB) THEN
                  IND1B=IPCE(ICB)
                  IND2B=IPCE(ICB+1)-1
                  NUMIC=IND2B-IND1B
                  IF (NUMIC .GE.0) THEN
C
                    DO 170 ICI= IND1,IND2
                      I=NBPERM(ICI)
                      ITRI=NUNIT(I)
                      INDI=6*ITRI-5
                      IRI=NUMRE(I)
                      X1=COORD(1,I)
                      Y1=COORD(2,I)
                      Z1=COORD(3,I)
                      RADI=RAD(I)
C
                      CALL  SST(IRI,TCYS,NP)
C
                      IF (TCYS) THEN
                        CALL JLPSS(IND1B,IND2B,I,INDI,X1,Y1,Z1,IRI,
     *                             RADI,NP,NBPERM,FIN,EB)
                      ELSE
                        CALL JLP(IND1B,IND2B,I,INDI,X1,Y1,Z1,IRI,RADI,
     *                           NBPERM,FIN,EB)
                      END IF
 170                CONTINUE
C
                  END IF
C
                END IF
C
                IF (RIGHT(ICB)) THEN
                  GOTO 165
                ELSE
                  ICB=ICB+1
                END IF
C
 160          CONTINUE
 165          CONTINUE
C
              IF (BACK(ICY)) THEN
                GOTO 155
              ELSE
                ICY=ICY+NXMAX
              END IF
C
 150        CONTINUE
 155        CONTINUE
C
            ICZ=ICZ+NXY
C
            IF (ICZ.GT.NCE) THEN
              GOTO 145
            END IF
C
 140      CONTINUE
 145      CONTINUE
C
          IND1=IND2+1
        END IF
 120  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,INDI,INDJ,F,EB)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MA=2000,MVAR=900,MPRO=10,MCH=100)
      PARAMETER (MTR=MVAR+2*MPRO+1,MTR6=6*MTR)
C
      COMMON/NDIFF/NDIFF,NVAN,WVW
      COMMON/HBND1/NH,NUMH1(MCH),NUMH2(MCH)
      COMMON/HBND2/AMH1(MCH),AMH2(MCH)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
C
      REAL*8 F(MTR6)
      CHARACTER*3 ALPH,AMH1,AMH2
C
      DATA EPSI/0.0D0/
C
C--------
C
      IF (NBTYPE(I)   .EQ.12) THEN
        RETURN
      END IF
C
      IF (NBTYPE(J)   .EQ.12) THEN
        RETURN
      END IF
C
      DX=X1-X2
      DY=Y1-Y2
      DZ=Z1-Z2
      DSQ=DX*DX+DY*DY+DZ*DZ
      CIJ=RVW-DSQ
      CIJW=CIJ*WVW
C
      IF (CIJ.LE.EPSI) THEN
        RETURN
      END IF
C
      NREI=NUMRE(I)-1
      NREJ=NUMRE(J)-1
C
      NDF=IABS(NREI-NREJ)
      IF (NDF.GT.NVAN) THEN
        RETURN
      END IF
C
      IF (NH  .GT.0) THEN
        DO 10 K=1,NH
          IF (NREI.EQ.   NUMH1(K)) THEN
            IF (ALPH(I).EQ. AMH1(K)) THEN
              IF (NREJ.EQ.   NUMH2(K)) THEN
                IF (ALPH(J).EQ. AMH2(K)) THEN
                  RETURN
                END IF
              END IF
            END IF
          END IF
C
          IF (NREJ.EQ.   NUMH1(K)) THEN
            IF (ALPH(J).EQ. AMH1(K)) THEN
              IF (NREI.EQ.   NUMH2(K)) THEN
                IF (ALPH(I).EQ. AMH2(K)) THEN
                  RETURN
                END IF
              END IF
            END IF
          END IF
C
  10    CONTINUE
      END IF
C
      XC=Y1*Z2-Z1*Y2
      YC=Z1*X2-X1*Z2
      ZC=X1*Y2-Y1*X2
C
      EB=EB+CIJ*CIJW
C
      F1=CIJW*XC
      F3=CIJW*ZC
      F5=CIJW*DY
      F2=CIJW*YC
      F4=CIJW*DX
      F6=CIJW*DZ
C
      IF (INDI   .GT.0) THEN
        INDEX=INDI
        F(INDEX)=F(INDEX)-F1
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)-F2
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)-F3
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)-F4
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)-F5
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)-F6
      END IF
C
      IF (INDJ   .GT.0) THEN
        INDEX=INDJ
        F(INDEX)=F(INDEX)+F1
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)+F2
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)+F3
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)+F4
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)+F5
        INDEX=INDEX+1
        F(INDEX)=F(INDEX)+F6
      END IF
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE CELL(NAT,DCUT,NXMAX,NYMAX,NZMAX,NXY,NCE,ICELL)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MA=2000)
C
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
C
      INTEGER ICELL(MA)
      CHARACTER*3 ALPH
C
C--------
C
      CUTIN=1.D0/DCUT
C
      XMIN=COORD(1,1)
      YMIN=COORD(2,1)
      ZMIN=COORD(3,1)
C
      XMAX=COORD(1,1)
      YMAX=COORD(2,1)
      ZMAX=COORD(3,1)
C
      DO 10 I=2,NAT
        X=COORD(1,I)
        Y=COORD(2,I)
        Z=COORD(3,I)
C
        IF (X.LT.XMIN) THEN
          XMIN=X
        ELSE
          IF (X.GT.XMAX) THEN
            XMAX=X
          END IF
        END IF
C
        IF (Y.LT.YMIN) THEN
          YMIN=Y
        ELSE
          IF (Y.GT.YMAX) THEN
            YMAX=Y
          END IF
        END IF
C
        IF (Z.LT.ZMIN) THEN
          ZMIN=Z
        ELSE
          IF (Z.GT.ZMAX) THEN
            ZMAX=Z
          END IF
        END IF
C
  10  CONTINUE
C
      NXMAX=INT((XMAX-XMIN)*CUTIN)+1
      NYMAX=INT((YMAX-YMIN)*CUTIN)+1
      NZMAX=INT((ZMAX-ZMIN)*CUTIN)+1
      NXY=NXMAX*NYMAX
      NCE=NXY*NZMAX
C
      DO 20 I=1,NAT
        NX=INT((COORD(1,I)-XMIN)*CUTIN)+1
        NY=INT((COORD(2,I)-YMIN)*CUTIN)
        NZ=INT((COORD(3,I)-ZMIN)*CUTIN)
        ICELL(I)=NZ*NXY+NY*NXMAX+NX
  20  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE QSORT(NAT,NCE,ICELL,NBPERM,IPCE)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MA=2000)
C
      INTEGER ICELL(MA),NBPERM(MA),IPCE(MA)
      INTEGER ILST(100),IRST(100)
C
C NAT: NUMBER OF ATOMS, NCE: NUMBER OF CELLS
C ICELL(I): CELL NUMBER OF ATOM I
C NBPERM(INDEX): IF INDEX=IPCE(IC),IPCE(IC+1)-1
C                THEN NBPERM(INDEX) IN CELL WITH NUMBER IC
C
C ILST AND IRST ARE LEFT AND RIGHT INDICES OF A PARTITION WHICH
C STILL HAS TO BE TREATED.
C
C  INITILIAZE STACK
      IST=1
      ILST(1)=1
      IRST(1)=NAT
C
C LOOP OVER ALL PARTITIONS CREATED  UNTIL IST=0
C TAKE HIHGEST PARTITION FROM STACK
 10   ILEFT=ILST(IST)
      IRIGHT=IRST(IST)
      IST=IST-1
C
C  PARTITION THE RANGE FROM ILEFT TO IRIGHT IN A LEFT PART WITH
C  ALL ELEMENTS LESS THAN A NX AND A RIGHT PART WITH ALL ELEMENTS
C GREATER THAN NX. NX IS CHOSEN AS A MEDIUM ELEMENT
C
 20   I=ILEFT
      J=IRIGHT
      INM=(ILEFT+IRIGHT)/2
      NX=ICELL(NBPERM(INM))
C
C LOOK FOR THE FIRST ELEMENT FROM THE LEFT WHICH IS GREATER OR EQUAL NX
C
  25  DO 30 NL=1,NAT
      IF(ICELL(NBPERM(I)).GE.NX)GOTO 40
      I=I+1
  30  CONTINUE
C
C LOOK FOR THE FIRST ELEMENT FROM THE RIGHT WHICH IS SMALLER OR EQUAL NX
C
  40  DO 45 NL=1,NAT
      IF(NX.GE.ICELL(NBPERM(J)))GOTO 50
      J=J-1
  45  CONTINUE
C
C
C EXCHANGE ELEMENTS AT POSITION I AND J
C
  50  IF(I.LE.J) THEN
        IMP=NBPERM(I)
        NBPERM(I)=NBPERM(J)
        NBPERM(J)=IMP
        I=I+1
        J=J-1
      ENDIF
C
C
      IF(I.LE.J) GOTO 25
C
C
      LEL=J-ILEFT
      LER=IRIGHT-I
      IF(LEL.LT.LER)THEN
           IF(I.LT.IRIGHT)THEN
             IST=IST+1
             ILST(IST)=I
             IRST(IST)=IRIGHT
           ENDIF
        IRIGHT=J
        ELSE
            IF(ILEFT.LT.J)THEN
               IST=IST+1
               ILST(IST)=ILEFT
               IRST(IST)=J
             ENDIF
        ILEFT=I
       ENDIF
C
C
      IF(ILEFT.LT.IRIGHT)GOTO 20
      IF(IST.GT.0) GOTO 10
C
C
C DEFINE IPCE
C
       ICOLD=ICELL(NBPERM(1))
       DO 100 IC=1,ICOLD
 100     IPCE(IC)=1
C
C
         DO 110 L=2,NAT
         ICURR=ICELL(NBPERM(L))
         IF(ICURR.EQ.ICOLD)GOTO 110
           DO 120 IC=ICOLD+1,ICURR
 120         IPCE(IC)=L
           ICOLD=ICURR
 110     CONTINUE
        DO 130 IC=ICOLD+1,NCE+1
 130     IPCE(IC)=NAT+1
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE BOUND(NCE,NXMAX,NYMAX,NZMAX,NXY,NOLFT,RIGHT,BACK,FRONT)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MA=2000)
C
      LOGICAL*4 NOLFT(MA),RIGHT(MA),BACK(MA),FRONT(MA)
C
C--------
C
      NYZ=NYMAX*NZMAX
      NXM1=NXMAX-1
      NXY1=NXY-NXMAX
C
      DO 10 IND=1,NCE
        NOLFT(IND)=.TRUE.
        RIGHT(IND)=.FALSE.
        BACK(IND)=.FALSE.
        FRONT(IND)=.FALSE.
  10  CONTINUE
C
      L=1
C
      DO 20 IND=1,NYZ
        NOLFT(L)=.FALSE.
        LR=L+NXM1
        RIGHT(LR)=.TRUE.
        L=L+NXMAX
  20  CONTINUE
C
      L0=0
C
      DO 30 IND1=1,NZMAX
        L=L0
        DO 40 IND2=1,NXMAX
          L=L+1
          FRONT(L)=.TRUE.
          LB=L+NXY1
          BACK(LB)=.TRUE.
  40    CONTINUE
        L0=L0+NXY
  30  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE SST(IRI,TCYS,NP)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MSP=10)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/CYS/KCYS,NCYS,NPAIR(2,MSP)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
C
      LOGICAL*4 TCYS
C
C--------
C
      IF (NCYS   .GT.0) THEN
        IF (LIST(IRI)     .EQ.3) THEN
          DO 10  LS=1,NCYS
            IF (IRI.EQ.NPAIR(1,LS)) THEN
              TCYS=.TRUE.
              NP=NPAIR(2,LS)
              RETURN
            END IF
  10      CONTINUE
C
          DO 20 LS=1,NCYS
            IF (IRI.EQ.NPAIR(2,LS)) THEN
              TCYS=.TRUE.
              NP=NPAIR(1,LS)
              RETURN
            END IF
  20      CONTINUE
C
        END IF
      END IF
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE JLPSS(JSTRT,JEND,I,INDI,X1,Y1,Z1,IRI,RADI,
     *                 NP,NBPERM,FIN,EB)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1,MTR6=6*MTR)
C
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
      COMMON/NDIFF/NDIFF,NVAN,WVW
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
C
      REAL*8 FIN(MTR6)
      INTEGER NBPERM(MA),IHB(28)
      CHARACTER*3 ALPH
C
      DATA NTCB,NTSG/5,11/
      DATA IHB/0,1,0,1,8*0,2*2,2*0,3*2,9*0/
C
C--------
C
      II=NBTYPE(I)
C
      DO 10 ICJ=JSTRT,    JEND
        J=NBPERM(ICJ)
        JJ=NBTYPE(J)
        IF (IHB(II)+IHB(JJ)  .NE.3) THEN
          IRJ=NUMRE(J)
          ND=IABS(IRI-IRJ)
          IF (ND.GT.1) THEN
            IF (ND.LE.NVAN) THEN
              IF (IRJ.EQ.NP) THEN
                NPREI=NPRE(IRI)
                NI1=NPREI+NTCB
                NI2=NPREI+NTSG
                NPREJ=NPRE(IRJ)
                NJ1=NPREI+NTCB
                NJ2=NPREI+NTSG
                IS=(I-NI1)*(I-NI2)
                JS=(J-NJ1)*(J-NJ2)
                IF (IS .NE.0) THEN
                  ITRJ=NUNIT(J)
                  INDJ=6*ITRJ-5
                  X2=COORD(1,J)
                  Y2=COORD(2,J)
                  Z2=COORD(3,J)
                  RVW=RAD(J)+RADI
                  RVW=RVW*RVW
C
                  CALL  CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,INDI,
     *                        INDJ,FIN,EB)
C
                ELSE
                  IF (JS .NE.0) THEN
                    ITRJ=NUNIT(J)
                    INDJ=6*ITRJ-5
                    X2=COORD(1,J)
                    Y2=COORD(2,J)
                    Z2=COORD(3,J)
                    RVW=RAD(J)+RADI
                    RVW=RVW*RVW
C
                    CALL  CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,INDI,
     *                          INDJ,FIN,EB)
C
                  END IF
                END IF
              END IF
            END IF
          END IF
        END IF
  10  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE JLP(JSTRT,JEND,I,INDI,X1,Y1,Z1,IRI,RADI,NBPERM,FIN,EB)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MA=2000,MVAR=900,MPRO=10)
      PARAMETER (MTR=MVAR+2*MPRO+1,MTR6=6*MTR)
C
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
      COMMON/NDIFF/NDIFF,NVAN,WVW
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
C
      REAL*8 FIN(MTR6)
      INTEGER NBPERM(MA),IHB(28)
      CHARACTER*3 ALPH
C
      DATA IHB/0,1,0,1,8*0,2*2,2*0,3*2,9*0/
C
C--------
C
      II=NBTYPE(I)
C
      DO 10 ICJ=JSTRT,    JEND
        J=NBPERM(ICJ)
        JJ=NBTYPE(J)
        IF (IHB(II)+IHB(JJ)   .NE.3) THEN
          ND=IABS(IRI-NUMRE(J))
          IF (ND.GT.1) THEN
            IF (ND.LE.NVAN) THEN
              ITRJ=NUNIT(J)
              INDJ=6*ITRJ-5
              X2=COORD(1,J)
              Y2=COORD(2,J)
              Z2=COORD(3,J)
              RVW=RAD(J)+RADI
              RVW=RVW*RVW
C
              CALL  CALVW(I,J,X1,Y1,Z1,X2,Y2,Z2,RVW,INDI,INDJ,FIN,EB)
C
            END IF
          END IF
        END IF
  10  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE GRDJ(EB,GRDVAR)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MVAR=900,MPRO=10,MJC=100)
      PARAMETER (MTR=MVAR+2*MPRO+1)
C
      COMMON/JCON1/JRAN,NOJ,NORESJ(MJC),NJ(MJC)
      COMMON/JCON2/ANGJLO(MJC),ANGJUP(MJC),CENTJ(MVAR),HLJ(MVAR),
     *             VJ(MVAR),WJ
      COMMON/DHANGL/VAR(MVAR),VART(MTR)
C
      REAL*8 GRDVAR(MVAR)
C
      PI=3.141592653589793D0
      PI2=2*PI
C
C--------
C
      DO 10 I=1,NOJ
        DVC=VAR(NJ(I))-CENTJ(NJ(I))
        DVC=DMOD(DVC,PI2)
C
        IF (DVC.LT.0.0) THEN
          DVC=DVC+PI2
        END IF
C
        VJ(NJ(I))=DVC
  10  CONTINUE
C
      DO 20 I=1,NOJ
        NJI=NJ(I)
        DV=VJ(NJI)
        DVN=(DV-PI)/(PI-HLJ(NJI))
C
        IF (DABS(DVN).LT.1.0) THEN
          DVN2=DVN*DVN
          EB=EB+WJ*(DVN2*DVN2-2*DVN2+1)/4
          GRDVAR(NJI)=GRDVAR(NJI)+WJ*(DVN2*DVN-DVN)
        END IF
C
  20  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE GRDW(EB,GRDVAR)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MVAR=900,MPRO=10,MWC=100)
      PARAMETER (MTR=MVAR+2*MPRO+1)
C
      COMMON/WCON1/IWRAN,NOW,NORESW(MWC),NW(MWC)
      COMMON/WCON2/ANGWLO(MWC),ANGWUP(MWC),CENTW(MVAR),HLW(MVAR),
     *             VW(MVAR),WW
      COMMON/DHANGL/VAR(MVAR),VART(MTR)
C
      REAL*8 GRDVAR(MVAR)
C
      PI=3.141592653589793D0
      PI2=2*PI
C
C--------
C
      DO 10 I=1,NOW
        DVC=VAR(NW(I))-CENTW(NW(I))
        DVC=DMOD(DVC,PI2)
C
        IF (DVC.LT.0.0) THEN
          DVC=DVC+PI2
        END IF
C
        VW(NW(I))=DVC
  10  CONTINUE
C
      DO 20 I=1,NOW
        NWI=NW(I)
        DV=VW(NWI)
        DVN=(DV-PI)/(PI-HLW(NWI))
C
        IF (DABS(DVN).LT.1.0) THEN
          DVN2=DVN*DVN
          EB=EB+WW*(DVN2*DVN2-2*DVN2+1)/4
          GRDVAR(NWI)=GRDVAR(NWI)+WW*(DVN2*DVN-DVN)
        END IF
C
  20  CONTINUE
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE GENER
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE BACKBONE ATOMS OF
C THE POLYPEPTIDE, EXCEPT FOR PROLINE AND HYDROXYPROLINE RESIDUES.  IT
C CALLS GNAMIN AND GNCARB TO GENERATE END GROUP COORDINATES, GNSIDE FOR
C SIDECHAIN COORDINATES, AND GNPRO FOR PROLINE-TYPE RESIDUES.
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      REAL*8 A1(9),B1(9),MATA(3,3),MATB(3,3),MATC(9)
      REAL*8 ROT(9)
      REAL*8 IDENT(9)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     1             NV(MRES)
      COMMON/CHECK/KNDRES(26),KNDEND(20)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN001/XOORD(3,26,26),SNTH2(26),CSTH2(26),SDEL(26),
     1   CDEL(26)
      COMMON/GEN002/CHIANG(3,7,26),NATOMS(26),NCHI(26),NDPT1(7,26),
     1  NDPT2(7,26),NUM(7,26)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GEN005/IDENT
      COMMON/GNROU/MATA,MATB,ROT,K
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/PRINT/IPRNT
      DIMENSION TEMP(3)
      CHARACTER*3 ALPH,EALPHA
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA PI/ 3.141592653589793D0 /
      DATA ERROR / .0000001D0 /
C
C IFEVEN MUST BE RESET EVERY TIME A MOLECULE IS GENERATED.
C
      IFEVEN = 1
      CALL GNAMIN
      LASTFL = INUMRS - 1
      DO 110 I=1,9
      A1(I) = IDENT(I)
  110 CONTINUE
      DO 380 N=2,LASTFL
      IF (N.EQ.LASTFL) GO TO 120
      SNTH1 = FLOAT(IFEVEN)*0.857167
      CSTH1 = 0.515038
      LNEXT=LIST(N+1)
      LNEXT=IABS(LNEXT)
      KNEXT=KNDRES(LNEXT)
      KNEXT = IABS(KNEXT)
      IF (KNEXT.NE.13.AND.KNEXT.NE.22) GO TO 120
      IF (COS(ANGLES(3,N)).LE.0.0) GO TO 120
      SNTH1 = FLOAT(IFEVEN)*0.809017
      CSTH1 = 0.587785
      IF (IPRNT.EQ.1) WRITE(JPAR,400) N
  120 LISTN = LIST(N)
      NT = IABS(LISTN)
      KINDN = KNDRES(NT)
      KINDN = IABS(KINDN)
C
C SIGN INDICATES WHETHER THE D OR L CONFIGURATION IS REQUESTED.
C L IS POSITIVE; D IS NEGATIVE
C
      SIGN = 1.0
      IF (NT .NE. LISTN) SIGN = -1.0
C
C PHI, PSI, AND OMEGA ARE THE FIRST THREE ANGLES IN THE LIST FOR
C EACH RESIDUE.  THE REMAINING 7 ANGLES ARE POSSIBLE CHI'S.
C
      PHI = ANGLES(1,N) - PI
      PSI = ANGLES(2,N) - PI
      OMEGA = ANGLES(3,N) - PI
C
C PROLINE RESIDUES WILL BE HANDLED IN A SPECIAL SUBROUTINE
C
      IF (KINDN.NE.13.AND.KINDN.NE.22) GO TO 140
      CALL GNPRO
      IF (KINDN.EQ.13) GO TO 250
      DO 130 L=1,9
      ROT(L)=A1(L)
  130 CONTINUE
      GO TO 240
C
C IF RESIDUE IS ISOLEUCINE, CHI2 AND CHI3 NOT  EXCHANGED
C MOD W.B.
  140 CONTINUE
C 140  IF (KINDN.NE.8) GO TO 150
C      T = ANGLES(5,N)
C      ANGLES(5,N) = ANGLES(6,N)
C      ANGLES(6,N) = T
C 150  CONTINUE
C IF THIS IS THE SECOND RESIDUE IN THE LIST (THE FIRST RESIDUE BEING AN
C END GROUP), DO NOT ATTACH THE H AND C-ALPHA TO THE INITIAL N. THESE
C ATOMS WERE ATTACHED WITH THE END GROUP.
C
      IF (N.EQ.2) GO TO 170
C
C ATTACH THE H AND C-ALPHA TO N.
C
      DO 160 J=2,3
      CALL TRANSF(MATA,J,1)
  160 CONTINUE
C
  170 IF (DABS(PHI) .GT. ERROR) GO TO 190
      DO 180 L=1,9
      B1(L) = A1(L)
  180 CONTINUE
      GO TO 210
C
C IF PHI DOES NOT EQUAL ZERO, MODIFY THE ROTATION MATRIX.
C
  190 CSANG=DCOS(PHI)
      SNANG = DSIN(PHI)
      DO 200 J=1,3
      MATB(J,1) = MATA(J,1)
      MATB(J,2) = MATA(J,2)*CSANG + MATA(J,3)*SNANG
  200 MATB(J,3) = - MATA(J,2)*SNANG + MATA(J,3)*CSANG
C
C ATTACH THE H, C-BETA, AND C' TO C-ALPHA.
C
  210 DO 220 J=4,6
      CALL TRANSF(MATB,J,3)
  220 CONTINUE
C
      IF (KINDN.EQ.6) THEN
        CALL TRANSF(MATB,7,3)
      END IF
C
C THE FOLLOWING SECTION WILL ATTACH THE SIDECHAIN COORDINATES TO C-BETA.
C
      IF (KINDN.EQ.6) THEN
        K=9
      ELSE
        K=8
      END IF
C
      NX = NCHI(NT)
C
C IF THERE ARE NO SIDECHAIN ROTATIONS (IF THE RESIDUE IS PROLINE OR
C GLYCINE), THE NEXT SECTION IS BYPASSED.
C
      IF (NX.EQ.0) GO TO 250
      DO 230 L=1,9
      ROT(L) = B1(L)
  230 CONTINUE
  240 CALL GNSIDE
C
C IF IFEVEN EQUALS 1, THEN THE SIGNS OF SNTH2 AND SDEL (AS STORED FOR
C THE RESIDUE) MUST BE REVERSED.
C
  250 SNT = -FLOAT(IFEVEN)*SNTH2(NT)
      SDELTA = -FLOAT(IFEVEN)*SDEL(NT)
      CST = CSTH2(NT)
      CDELTA = CDEL(NT)
      IF(DABS(PSI).GT.ERROR) GO TO 270
      DO 260 L=1,9
      A1(L) = B1(L)
  260 CONTINUE
      GO TO 280
C
C IF PSI .NE.0.0, CALCULATE THE ROTATION MATRIX.
C
  270 CALL MATRIX(CST,SNT,PSI,MATC)
C
C MULTIPLY THIS BY THE PREVIOUS BACKBONE ROTATIONS.
C
      CALL DMM(MATB,MATC,MATA)
C
C IF THIS IS THE LAST RESIDUE, THEN SKIP THE OMEGA ROTATIONS. PUT THE
C CARBOXYL END GROUP ON.
C
  280 IF (N.NE.LASTFL) GO TO 300
C
      DO 290 L=1,9
      B1(L) = A1(L)
  290 CONTINUE
      CSANG = CST
      SNANG = SNT
      GO TO 360
C
C ATTACH THE O TO THE C'.
C
  300 CONTINUE
C
      IF (KINDN.EQ.6) THEN
        CALL TRANSF(MATA,8,7)
      ELSE
        CALL TRANSF(MATA,7,6)
      END IF
C
C POSITION THE N FOR THE NEXT RESIDUE.
C
      IF (KINDN.EQ.6) THEN
        CALL TRANSF(MATA,K,7)
      ELSE
        CALL TRANSF(MATA,K,6)
      END IF
C
      IF (KNEXT.NE.13.AND.KNEXT.NE.22) GO TO 320
      NA = NPRE(N+1) + 1
C
      IF (KINDN.EQ.6) THEN
        NB = NPRE(N) + 7
      ELSE
        NB = NPRE(N) + 6
      END IF
C
C THIS SECTION LENGTHENS THE AMIDE BOND TO 1.36 ANGSTROMS WHEN THE
C NEXT RESIDUE IS A PROLINE-TYPE.
C
      RAB = DST(COORD(1,NA),COORD(1,NB))
C
      RAN = .035
      DO 305 I=1,3
      TEMP(I) = COORD(I,NA) + RAN*(COORD(I,NA)-COORD(I,NB))/RAB
  305 CONTINUE
      DO 310 J = 1,3
      COORD(J,NA) = TEMP(J)
  310 CONTINUE
  320 IF(DABS(OMEGA).GT.ERROR) GO TO 340
      DO 330 L=1,9
      B1(L) = A1(L)
  330 CONTINUE
      GO TO 350
C
C IF OMEGA IS NOT EQUAL TO ZERO, CALCULATE THE ROTATION MATRIX.
C
  340 CALL MATRIX(CDELTA,SDELTA,OMEGA,MATC)
C
C MULTIPLY BY THE PREVIOUS TRANSFORMATION MATRIX.
C
      CALL DMM(MATA,MATC,MATB)
C
C CSANG IS THE COSINE OF DELTA (DIFFERENCE BETWEEN THETA 2 AND THETA 3)
C PLUS THETA 1.
C
  350 CSANG=CDELTA*CSTH1-SDELTA*SNTH1
      SNANG = SDELTA*CSTH1 + CDELTA*SNTH1
C
C MULTIPLY IFEVEN AND SNTH1 BY -1 SO THAT THE COORDINATES OF THE NEXT
C RESIDUE WILL BE FLIPPED ABOUT THE X-AXIS AND THE EXTENDED
C CONFORMATION WILL RESULT.
C
      IFEVEN = - IFEVEN
      SNTH1 = - SNTH1
C
C ADJUST THE MATRIX TO LINE UP THE COORDINATES OF THE NEXT RESIDUE IN
C THE ORIGINAL COORDINATE SYSTEM.
C
  360 DO 370 J=1,3
      MATA(J,1) = MATB(J,1)*CSANG + MATB(J,2)*SNANG
      MATA(J,2) = - MATB(J,1)*SNANG + MATB(J,2)*CSANG
      MATA(J,3) = MATB(J,3)
  370 CONTINUE
C      IF(KINDN.NE.8) GO TO 380
C      T = ANGLES(5,N)
C      ANGLES(5,N) = ANGLES(6,N)
C      ANGLES(6,N) = T
  380 CONTINUE
C
C ATTACH THE CARBOXYL END GROUP.
C
      CALL GNCARB
C
C GENERATION IS COMPLETE.
C
      RETURN
  400 FORMAT (//9H RESIDUE ,I3,46H  HAS CIS OMEGA AND NEXT RESIDUE IS A
     1PROLINE./66H PROLINE IS ATTACHED SO C-N-CA=126 DEGREES AND C-N-CD=
     2121 DEGREES.)
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE GNAMIN
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE AMINO END GROUP.
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      REAL*8 A1(9),B1(9),MATA(3,3),MATB(3,3)
      REAL*8 CIS(3)
      REAL*8 A5(3,3),ROT(9)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     1             NV(MRES)
      COMMON/CHECK/KNDRES(26),KNDEND(20)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GNROU/MATA,MATB,ROT,K
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/PRINT/IPRNT
      DIMENSION TEMP(3),TEMP2(3)
      CHARACTER*3 ALPH,EALPHA
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA PI/ 3.141592653589793D0 /
      DATA ERROR / .0000001D0 /
      DATA A5/ .99619D0,-.08716D0,.0D0,.08716D0,.99619D0,.0D0,.0D0,.0D0,
     1 1.0D0/
C
      LAMIN = LIST(1)
      KAMIN = KNDEND(LAMIN)
      KAMIN = IABS(KAMIN)
      LNEXT = LIST(2)
      LNEXT = IABS(LNEXT)
      KNEXT = KNDRES(LNEXT)
      KNEXT = IABS(KNEXT)
      NATOM=NDATOM(LAMIN)
      NX = NBOND(LAMIN)
C
C STORE THE COORDINATES FOR THE AMINO END GROUP.
C
      DO 110 M = 1,NATOM
      DO 110 MM = 1,3
      COORD(MM,M)=ENOORD(MM,M,LAMIN)
  110 CONTINUE
C
C THIS SECTION IS FOR A PROLINE-TYPE FIRST FULL RESIDUE.  FOR ALL END
C GROUPS EXCEPT THE NULL END GROUP 1) LENGTHEN THE C'-N BOND TO 1.36
C ANGSTROMS AND 2) IN THE CASE OF CIS-PROLINE ROTATE THE END GROUP
C 5 DEGREES IN THE X,Y PLANE.
C
      IF (KNEXT.NE.13.AND.KNEXT.NE.22.OR.KAMIN.EQ.10) GO TO 140
      NA = NPRE(2)
      NB = NPRE(2) + 1
C
      RAN = .035
      RAB = DST(COORD(1,NA),COORD(1,NB))
C
      DO 115 I=1,3
      TEMP(I) = COORD(I,NA) + RAN*(COORD(I,NA)-COORD(I,NB))/RAB
  115 CONTINUE
C
      DO 120 I=1,3
      TEMP2(I)=TEMP(I)-COORD(I,NA)
  120 CONTINUE
      DO 125 I=1,3
      COORD(I,NA) = TEMP(I)
  125 CONTINUE
      NN = NATOM-4
      DO 130 J=1,NN
      DO 130 I=1,3
      COORD(I,J) = TEMP2(I) + COORD(I,J)
  130 CONTINUE
C
      IF (COS(ANGLES(NX,1)).LE.0.0) GO TO 140
      N3 = NATOM - 3
      DO 134 M=1,N3
      DO 132 JJ=1,3
      TEMP(JJ)=0.0
      DO 132 L=1,3
      TEMP(JJ)=TEMP(JJ)+A5(JJ,L)*COORD(L,M)
  132 CONTINUE
      DO 134 JJ=1,3
      COORD(JJ,M)=TEMP(JJ)
  134 CONTINUE
      IF (IPRNT.EQ.1) WRITE (JPAR,240)
  140 CONTINUE
C
C IF THERE ARE NO ROTATABLE BONDS IN THE END GROUP, RETURN.
C
      IF (NX.EQ.0) RETURN
C
C THE REMAINDER OF THE SUBROUTINE PERFORMS ANY SPECIFIED ROTATIONS.
C
      ME=0
      DO 210 IBOND=1,NX
      ANG = -ANGLES(IBOND,1) - PI
      IF(DABS(ANG).LE.ERROR) GO TO 210
      ML=1
      MM=NNDPT2(IBOND,LAMIN)
      IF (MM .EQ. ME) ML = MB + 1
      ME = MM
      MB=NNDPT1(IBOND,LAMIN)
C
C THIS SECTION CALCULATES THE DIRECTION COSINES OF THE BOND.
C
      D = 0.0
      DO 150 L = 1,3
      CIS(L) = COORD(L,ME) - COORD(L,MB)
      D = D + CIS(L)*CIS(L)
  150 CONTINUE
      D = 1.0/SQRT(D)
      DO 160 L = 1,3
      CIS(L) = CIS(L)*D
  160 CONTINUE
C
      CALL ROTSET(CIS,ANG,A1)
      MN = MB - 1
      DO 200 J=ML,MN
      DO 170 JJ=1,3
      COORD(JJ,J)=COORD(JJ,J)-COORD(JJ,MB)
  170 CONTINUE
      DO 180 JJ=1,3
      TEMP(JJ)=MATA(JJ,1)*COORD(1,J)+MATA(JJ,2)*COORD(2,J)+
     1 MATA(JJ,3)*COORD(3,J)
  180 CONTINUE
      DO 190 JJ=1,3
      COORD(JJ,J)=TEMP(JJ)+COORD(JJ,MB)
  190 CONTINUE
  200 CONTINUE
  210 CONTINUE
      RETURN
  240 FORMAT (//65H FIRST FULL RESIDUE IS CIS-PROLINE.  END GROUP MOVED
     15 DEGREES SO/71H THAT C-N-CA=126 DEGREES AND C-N-CD=121 DEGREES IN
     2STEAD OF THE REVERSE.//)
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE GNCARB
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE CARBOXYL END GROUP.
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      REAL*8 A1(9),B1(9),MATA(3,3),MATB(3,3)
      REAL*8 CIS(3)
      REAL*8 ROT(9)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     1             NV(MRES)
      COMMON/CHECK/KNDRES(26),KNDEND(20)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      COMMON/GEN007/LBG(3),LEN(3)
      COMMON/GNROU/MATA,MATB,ROT,K
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      DIMENSION TEMP(3)
      CHARACTER*3 ALPH,EALPHA
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA ERROR/ .0001 /
      DATA PI/ 3.141592653589793D0 /
C
      N=INUMRS
      NT = LIST(N)
      KCARB = KNDEND(NT)
      KCARB = IABS(KCARB)
      SIGN = 1.0
C
C ATTACH THE O AND THE FIRST ATOM OF THE END GROUP TO THE C'.
C
      NL = 3
      IF (KCARB.EQ.20) NL = 2
      DO 110 J=2,NL
      CALL TRANSF(MATA,J,1)
  110 CONTINUE
      NL =  NDATOM(NT) + 1
      IF (NL .LT. 4) RETURN
C
C ADD ON THE REMAINING ATOMS WITHOUT ANY BOND ROTATIONS.
C
      DO 120 J=4,NL
      CALL TRANSF(MATA,J,3)
  120 CONTINUE
      NX=NBOND(NT)
      NATOM=NPRE(INUMRS)
C
C IF THERE ARE NO ROTATABLE BONDS IN THE END GROUP, RETURN.
C
      IF(NX.EQ.0)RETURN
C
C THE REMAINDER OF THE SUBROUTINE PERFORMS ANY SPECIFIED ROTATIONS.
C
      DO 190 IBOND=1,NX
      IF (IBOND.NE.1) GO TO 124
      ANG=ANGLES(3,INUMRS-1) - PI
      IF (KCARB.NE.16) GO TO 125
      ANGL=ANGLES(3,INUMRS-1)
      IF (COS(ANGL).LT.(-0.0001)) GO TO 125
      ANGL=57.29578*ANGL
      WRITE (JPAR,200) ANGL
      STOP
  124 ANG=ANGLES(IBOND-1,INUMRS)-PI
  125 IF (DABS(ANG).LT.ERROR) GO TO 190
C
C THE FIRST BOND IS DEFINED BY THE 6TH ATOM IN THE LAST FULL RESIDUE
C (C') AND THE FIRST ATOM IN THE END GROUP.  ALL OTHER  BONDS ARE
C DEFINED BY THE STORED NNDPT1 AND NNDPT2.
C
      MB = NNDPT1(IBOND,NT) + NATOM - 1
      IF (IBOND.EQ.1) THEN
        IF (LIST(INUMRS-1).EQ.6) THEN
          MB=NPRE(INUMRS-1)+7
        ELSE
          MB=NPRE(INUMRS-1)+6
        END IF
      END IF
      ME = NNDPT2(IBOND,NT) + NATOM - 1
      IF (IBOND.EQ.1) ME=NATOM+1
C
C THIS SECTION CALCULATES THE DIRECTION COSINES OF THE BOND.
C
      D = 0.0
      DO 130 L = 1,3
      CIS(L) = COORD(L,ME) - COORD(L,MB)
      D = D + CIS(L)*CIS(L)
  130 CONTINUE
      D = 1.0/SQRT(D)
      DO 140 L = 1,3
      CIS(L) = CIS(L)*D
  140 CONTINUE
C
      CALL ROTSET(CIS,ANG,A1)
C
C SPECIAL INDICES LBG AND LEN ARE NEEDED TO DEFINE THE ATOMS AFFECTED BY
C THE BOND ROTATION IN THE CASE OF N,N-DIMETHYLAMIDE.
C
      LL = ME+1
      IF (KCARB.EQ.16) LL = LBG(IBOND)+NATOM-1
      MN = NPRE(INUMRS+1)
      IF (KCARB.EQ.16) MN = NATOM+LEN(IBOND)-1
      DO 180 J = LL,MN
      DO 150 JJ=1,3
      COORD(JJ,J)=COORD(JJ,J)-COORD(JJ,ME)
  150 CONTINUE
      DO 160 JJ=1,3
      TEMP(JJ)=MATA(JJ,1)*COORD(1,J)+MATA(JJ,2)*COORD(2,J)+
     1 MATA(JJ,3)*COORD(3,J)
  160 CONTINUE
      DO 170 JJ=1,3
      COORD(JJ,J)=TEMP(JJ)+COORD(JJ,ME)
  170 CONTINUE
  180 CONTINUE
  190 CONTINUE
      RETURN
  200 FORMAT (/1X,54HFOR DIMETHYL AMIDE, THE OMEGA ANGLE MUST BE TRANS,
     1NOT,F8.3,9H DEGREES,/1X,55HBECAUSE THE TWO METHYLS HAVE NON-EQUIVA
     2LENT GEOMETRIES.)
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE GNPRO
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE PROLINE AND
C HYDROXYPROLINE RESIDUES, EXCEPT FOR THE CARBONYL O, AND THE HD1 OF
C HYDROXYPROLINE.
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      REAL*8 A1(9),B1(9),MATA(3,3),MATB(3,3)
      REAL*8 ROT(9)
      REAL*8 PROANG(3)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     1             NV(MRES)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN002/CHIANG(3,7,26),NATOMS(26),NCHI(26),NDPT1(7,26),
     1   NDPT2(7,26),NUM(7,26)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GEN006/PROANG
      COMMON/GEN008/NGEOM(26)
      COMMON/GNROU/MATA,MATB,ROT,K
      CHARACTER*3 ALPH
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA PI/ 3.141592653589793D0 /
C
C     PROANG(1) = 122.422*.0174532925
C     PROANG(2) = 112.419*.0174532925
C     PROANG(3) = 105.000*.0174532925
C
      NBT=NGEOM(NT)
      PHI=PROANG(NBT)
      ANGLES(1,N)=PHI-PI
C
C ATTACH THE C-DELTA AND C-ALPHA TO N.
C
      DO 110 J=2,3
      CALL TRANSF(MATA,J,1)
  110 CONTINUE
C
C PHI DOES NOT EQUAL ZERO, SO MODIFY THE ROTATION MATRIX.
C
      CSANG=DCOS(PHI)
      SNANG = DSIN(PHI)
      DO 120 J=1,3
      MATB(J,1) = MATA(J,1)
      MATB(J,2) = MATA(J,2)*CSANG + MATA(J,3)*SNANG
      MATB(J,3) = - MATA(J,2)*SNANG + MATA(J,3)*CSANG
  120 CONTINUE
C
C ATTACH THE C' TO C-ALPHA.
C
      CALL TRANSF(MATB,6,3)
C
C ATTACH THE REMAINING ATOMS TO THE NITROGEN ATOM, EXCEPT FOR THE
C CARBONYL O, AND THE HD1 OF HYDROXYPROLINE.
C
      DO 130 J=4,17
      IF (J.EQ.6.OR.J.EQ.7) GO TO 130
      CALL TRANSF(MATA,J,1)
  130 CONTINUE
      K=18
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE GNSIDE
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF THE SIDECHAIN ATOMS.
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      REAL*8 A1(9),B1(9),MATA(3,3),MATB(3,3)
      REAL*8 ROT(9),A(9),DABS
      REAL*8 CIS(3)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     1             NV(MRES)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN002/CHIANG(3,7,26),NATOMS(26),NCHI(26),NDPT1(7,26),
     1   NDPT2(7,26),NUM(7,26)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GNROU/MATA,MATB,ROT,K
      CHARACTER*3 ALPH
      EQUIVALENCE (A1(1),MATA(1,1)),(B1(1),MATB(1,1))
      DATA PI/ 3.141592653589793D0 /
      DATA ERROR / .0000001D0 /
C
      NX = NCHI(NT)
      DO 160 IBOND=1,NX
C
C MB IS THE BEGINNING OF THE BOND, LE IS THE END, AND MN INDICATES THE
C LAST ATOM TO BE AFFECTED BY THE BOND ROTATION.
C
      MB = NDPT1(IBOND,NT)
      LE = NDPT2(IBOND,NT)
      MN = NUM(IBOND,NT) + K - 1
      CHI = ANGLES(IBOND + 3,N) - PI
C
C IF NO CHI ROTATION IS CALLED FOR, ATTACH THE SIDECHAIN ATOMS.
C
      IF (DABS(CHI) .GT. ERROR) GO TO 120
      DO 110 L=K,MN
      CALL TRANSF(ROT,L,LE)
  110 CONTINUE
      GO TO 160
C
C STORE THE DIRECTION COSINES FOR THIS BOND IN CIS.
C
  120 DO 130 I=1,3
      CIS(I)=CHIANG(I,IBOND,NT)
  130 CONTINUE
C
C IF IFEVEN IS -1, THEN THE COORDINATES AS STORED WILL BE FLIPPED 180
C DEGREES ABOUT THE C'-N BOND WHEN THEY ARE ATTACHED.  THEREFORE THE
C DIRECTION COSINES OF THE BOND MUST ALSO BE ADJUSTED.
C
      CIS(2)=FLOAT(IFEVEN)*CIS(2)
      CIS(3)=FLOAT(IFEVEN)*CIS(3)
C
C ADJUST CIS(3) TO ACCOUNT FOR THE DIRECTION COSINE CHANGES IN THE
C SIDECHAIN WHEN GOING FROM L TO D CONFIGURATION.
C
      CIS(3) = CIS(3)*SIGN
C
C CALCULATE THE MATRIX FOR ROTATING ABOUT THE BOND.
C
      CALL ROTSET(CIS,CHI,A)
C
C UPDATE THE PREVIOUS ROTATION MATRIX TO INCLUDE THE LATEST ROTATION.
C
      CALL DMM(ROT,A,A1)
C
C CONNECT AND ROTATE THE ATOMS ATTACHED TO THIS BOND.
C
      DO 140 L=K,MN
      CALL TRANSF(A1,L,LE)
  140 CONTINUE
C
C MM IS THE BEGINNING OF THE NEXT BOND. IF MM EQUALS MB, THEN A BRANCH
C EXISTS AT THIS POINT IN THE SIDECHAIN. DO NOT UPDATE THE PREVIOUS
C ROTATION MATRIX TO INCLUDE THE LATEST ROTATION.
C
      IF(IBOND.EQ.NX) GO TO 160
      MM=NDPT1(IBOND+1,NT)
      IF(MM.EQ.MB) GO TO 160
      DO 150 L=1,9
      ROT(L) = A1(L)
  150 CONTINUE
C
C   UPDATE K TO INDICATE THE NEXT ATOM TO BE ATTACHED.
C
  160 K = MN + 1
C
C   THE SIDECHAIN GENERATION IS COMPLETE.
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE MATRIX(CSANG,SNANG,ROTATE,MATC)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE IS USED IN THE GENERATION OF COORDINATES WHICH
C DEPEND ON A PSI OR OMEGA DIHEDRAL ANGLE.  IT COMPUTES A ROTATION
C MATRIX MATC FROM 'ROTATE' (THE VALUE OF THE DIHEDRAL ANGLE MINUS PI),
C AND CSANG AND SNANG, THE COSINE AND SINE OF THE ANGLE BETWEEN THE
C ROTATABLE BOND AND THE X-AXIS.
C
      REAL*8 MATC
      DIMENSION MATC(9)
      CROT=DCOS(ROTATE)
      SROT=DSIN(ROTATE)
      CS1=1.0D0-CROT
      MATC(1)=CROT+CS1*CSANG**2
      MATC(2)=CS1*CSANG*SNANG
      MATC(3)=-SROT*SNANG
      MATC(4)=MATC(2)
      MATC(5)=CROT+CS1*SNANG**2
      MATC(6)=SROT*CSANG
      MATC(7)=-MATC(3)
      MATC(8)=-MATC(6)
      MATC(9)=CROT
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE ROTSET(CIS,CHI,A)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE IS USED IN THE GENERATION OF COORDINATES WHICH DEPEND
C ON A DIHEDRAL ANGLE IN A SIDE CHAIN OR END GROUP.  IT COMPUTES A
C ROTATION MATRIX 'A' FROM THE DIRECTION COSINES (CIS) OF THE
C ROTATABLE BOND, AND CHI, THE VALUE OF THE DIHEDRAL ANGLE MINUS PI.
C
      DIMENSION A(3,3),CIS(3)
      CS = DCOS(CHI)
      SN = DSIN(CHI)
      CS1 = 1.0 - CS
      A(1,1) = CS + CS1*CIS(1)*CIS(1)
      A(2,2) = CS + CS1*CIS(2)*CIS(2)
      A(3,3) = CS + CS1*CIS(3)*CIS(3)
      A1 = CS1*CIS(1)*CIS(2)
      A2 = SN*CIS(3)
      A(1,2) = A1 - A2
      A(2,1) = A1 + A2
      A1 = CS1*CIS(1)*CIS(3)
      A2 = SN*CIS(2)
      A(1,3) = A1 + A2
      A(3,1) = A1 - A2
      A1 = CS1*CIS(2)*CIS(3)
      A2 = SN*CIS(1)
      A(2,3) = A1 - A2
      A(3,2) = A1 + A2
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE TRANSF (T,J,K)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE GENERATES THE COORDINATES OF ATOM J WITH RESPECT TO TH
C AXES OF THE POLYPEPTIDE CHAIN.
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      REAL*8 T(9)
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN001/XOORD(2028),SNTH2(26),CSTH2(26),SDEL(26),CDEL(26)
      COMMON/GEN002/CHIANG(3,7,26),NATOMS(26),NUMCHI(26),NDPT1(7,26),
     1   NDPT2(7,26),NUM(7,26)
      COMMON/GEN003/SIGN,N,NT,IFEVEN
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     1   NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),NDTYPE(22,20)
      CHARACTER*3 ALPH,EALPHA
C
C L REFERS TO THE ATOM TO BE ADDED TO THE COORDINATE ARRAY.
C M IS THE ATOM TO WHICH THE NEW ATOM IS BEING ATTACHED.
C SINCE THE COORDINATES FOR N ARE NOT STORED, THE COUNT OF THE STORED
C COORDINATES IS OFF BY ONE.
C
      L = NPRE(N) + J
      M = NPRE(N) + K
      KK = K - 1
C
      IF(N.EQ.INUMRS) GO TO 130
C
C IF KK = 0, THEN THE POINT OF ATTACHMENT IS THE NITROGEN.
C DEFINE IT AS (0,0,0).
C
      IF (KK.GT.0) GO TO 110
      XT = 0.0
      YT = 0.0
      ZT = 0.0
      GO TO 120
C
C ELIMINATE 3 - DIMENSIONAL SUBSCRIPTS:
C
  110 KKNT = (KK - 1)*3 + (NT - 1)*78
      XT = XOORD(KKNT + 1)
      YT = XOORD(KKNT + 2)
      ZT = XOORD(KKNT + 3)
C
C X,Y,Z GIVE THE COORDINATES OF THE ATOM TO BE ADDED IN TERMS OF THE
C POINT OF ATTACHMENT.
C
  120 I = J - 1
      INT = (I - 1)*3 + (NT - 1)*78
      X = XOORD(INT + 1) - XT
      Y = XOORD(INT + 2) - YT
      Z = XOORD(INT + 3) - ZT
      GO TO 160
C
C L AND M ARE  OFF BY 2 BECAUSE OF THE WAY THE END GROUP IS STORED.
C IF KK=0, ATTACH THE O AND FIRST ATOM OF END GROUP TO C'.
C
  130 L = L-2
      IF (KK.GT.0) GO TO 140
      XT=0.0
      YT=0.0
      ZT=0.0
C
      IF (LIST(N-1).EQ.6) THEN
        M = NPRE(N - 1) + 7
      ELSE
        M = NPRE(N - 1) + 6
      END IF
C
      GO TO 150
C
  140 XT=ENOORD(1,KK,NT)
      YT=ENOORD(2,KK,NT)
      ZT=ENOORD(3,KK,NT)
      M=M-2
C
  150 I=J-1
      X=ENOORD(1,I,NT)-XT
      Y=ENOORD(2,I,NT)-YT
      Z=ENOORD(3,I,NT)-ZT
      IF(J.NE.2) GO TO 160
C
C POSITION OF O STORED IN END GROUP TO REPLACE O IN LAST RESIDUE.
C
      IF (LIST(N-1).EQ.6) THEN
        L = NPRE(N - 1) + 8
      ELSE
        L = NPRE(N - 1) + 7
      END IF
C
C IFEVEN INDICATES WHETHER TO INVERT THE STORED COORDINATES ABOUT X.
C SIGN INDICATES D OR L CONFIGURATION.
C
  160 Y = FLOAT(IFEVEN)*Y
      Z = FLOAT(IFEVEN)*SIGN*Z
C
C ATTACH THE L TH COORD TO THE M TH COORD.
      COORD(1,L) = T(1)*X + T(4)*Y + T(7)*Z + COORD(1,M)
      COORD(2,L) = T(2)*X + T(5)*Y + T(8)*Z + COORD(2,M)
      COORD(3,L) = T(3)*X + T(6)*Y + T(9)*Z + COORD(3,M)
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE DMM(A,B,C)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C THIS SUBROUTINE MULTIPLIES MATRIX A BY MATRIX B, AND RETURNS THE
C PRODUCT AS MATRIX C (ALL ARE 3X3 MATRICES).
C
      REAL*8 A,B,C
      DIMENSION A(3,3),B(3,3),C(3,3)
      DO 10 I = 1,3
      DO 10 J = 1,3
 10   C(I,J) = A(I,1)*B(1,J) + A(I,2)*B(2,J) + A(I,3)*B(3,J)
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      FUNCTION DST(A,B)
C
C THIS FUNCTION SUBPROGRAM COMPUTES THE DISTANCE BETWEEN TWO ATOMS,
C REPRESENTED BY COORDINATE ARRAYS A AND B.
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      DIMENSION A(3),B(3)
      T = A(1) - B(1)
      X = A(2) - B(2)
      Y = A(3) - B(3)
      DST = SQRT(T*T+X*X+Y*Y)
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
       SUBROUTINE MINCG(FUNCT,ACC,MAXFN,FC,G,F,JC,WC,JJ,WV)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10,ML=100)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1,MTR6=6*MTR)
C
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     1             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     2             NTPRE(MRES1),INDPSI(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/DHANGL/VAR(MVAR),VART(MTR)
      COMMON/TRGET1/NO(ML),NCALL(10,ML),IIER(ML)
      COMMON/TRGET2/FF(10,ML)
C
      REAL*8  G(MVAR),W(MTR6)
C
      INTEGER WC
C
      CHARACTER*1 WV
C
      DATA  MAXLIN/5/,MXFCON/2/
C
C--------
C
      IER = 0
C
      NN=0
C
      N=NVPRE(INUMRS)
C
      DFPRED=FC*F
C
      IRSDX = N
      IRSDG = IRSDX+N
      IGINIT = IRSDG+N
      IXOPT = IGINIT+N
      IGOPT = IXOPT+N
C
      ITERC = 0
      NCALLS = 0
      ITERFM = ITERC
C
    5 NCALLS = NCALLS+1
      CALL FUNCT (F,G,JC,WC,WV)
      IF (NCALLS.GE.2) GO TO 20
   10 DO 15 I=1,N
   15 W(I) = -G(I)
      ITERRS = 0
      IF (ITERC.GT.0) GO TO 80
C
   20 GNEW = 0.0
      SUM = 0.0
      DO 25 I=1,N
         GNEW = GNEW+W(I)*G(I)
   25 SUM = SUM+G(I)**2
      IF (NCALLS.EQ.1) GO TO 35
      FCH = F-FMIN
C
      IF (FCH) 35,30,50
   30 IF (GNEW/GMIN.LT.-1.0) GO TO 45
   35 FMIN = F
      GSQRD = SUM
      NFOPT = NCALLS
C
      DO 40 I=1,N
         W(IXOPT+I) = VAR(I)
   40 W(IGOPT+I) = G(I)
   45 IF (SUM.LE.ACC) GO TO 9005
C
   50 IF (NCALLS.NE.MAXFN) GO TO 55
      IER = 131
      GO TO 9000
   55 IF (NCALLS.GT.1) GO TO 100
C
      DFPR = DFPRED
      STMIN = DFPRED/GSQRD
C
   80 ITERC = ITERC+1
C
      FINIT = F
      GINIT = 0.0
      DO 85 I=1,N
         W(IGINIT+I) = G(I)
   85 GINIT = GINIT+W(I)*G(I)
      IF (GINIT.GE.0.0) GO TO 165
      GMIN = GINIT
      SBOUND = -1.0
      NFBEG = NCALLS
      IRETRY = -1
C
      STEPCH = DMIN1(STMIN,DABS(DFPR/GINIT))
      STMIN = 0.0
C
   90 STEP = STMIN+STEPCH
      WORK = 0.0
      DO 95 I=1,N
         VAR(I) = W(IXOPT+I)+STEPCH*W(I)
   95 WORK = DMAX1(WORK,DABS(VAR(I)-W(IXOPT+I)))
C
C--------------------------------------------------------------------
C
      N00=10
      LOW=MAXFN-40
      IF (NCALLS.LE.5) GOTO 9019
      IF (NCALLS.LT.LOW) GOTO 9018
      N01=MOD(NCALLS,N00)
      IF (N01.NE.0) GOTO 9018
 9019 NN=NN+1
      NCALL(NN,JJ)=NCALLS
      FF(NN,JJ)=F
      NO(JJ)=NN
 9018 CONTINUE
C
C--------------------------------------------------------------------
C
      IF (WORK.GT.0.0) GO TO 5
C
      IF (NCALLS.GT.NFBEG+1) GO TO 115
      IF (DABS(GMIN/GINIT)-0.2) 170,170,115
C
  100 WORK = (FCH+FCH)/STEPCH-GNEW-GMIN
      DDSPLN = (GNEW-GMIN)/STEPCH
      IF (NCALLS.GT.NFOPT) SBOUND = STEP
      IF (NCALLS.GT.NFOPT) GO TO 105
      IF (GMIN*GNEW.LE.0.0) SBOUND = STMIN
      STMIN = STEP
      GMIN = GNEW
      STEPCH = -STEPCH
  105 IF (FCH.NE.0.0) DDSPLN = DDSPLN+(WORK+WORK)/STEPCH
C
      IF (GMIN.EQ.0.0) GO TO 170
      IF (NCALLS.LE.NFBEG+1) GO TO 120
      IF (DABS(GMIN/GINIT).LE.0.2) GO TO 170
  110 IF (NCALLS.LT.NFOPT+MAXLIN) GO TO 120
  115 IER = 129
C
      GO TO 170
C
  120 STEPCH = 0.5*(SBOUND-STMIN)
      IF (SBOUND.LT.-0.5) STEPCH = 9.0*STMIN
      GSPLN = GMIN+STEPCH*DDSPLN
      IF (GMIN*GSPLN.LT.0.0) STEPCH = STEPCH*GMIN/(GMIN-GSPLN)
      GO TO 90
C
  125 SUM = 0.0
      DO 130 I=1,N
  130 SUM = SUM+G(I)*W(IGINIT+I)
      BETA = (GSQRD-SUM)/(GMIN-GINIT)
C
      IF (DABS(BETA*GMIN).LE.0.2*GSQRD) GO TO 135
C
      IRETRY = IRETRY+1
      IF (IRETRY.LE.0) GO TO 110
C
  135 IF (F.LT.FINIT) ITERFM = ITERC
      IF (ITERC.LT.ITERFM+MXFCON) GO TO 140
      IER = 132
      GO TO 9000
  140 DFPR = STMIN*GINIT
C
      IF (IRETRY.GT.0) GO TO 10
      IF (ITERRS.EQ.0) GO TO 155
      IF (ITERC-ITERRS.GE.N) GO TO 155
      IF (DABS(SUM).GE.0.2*GSQRD) GO TO 155
C
      GAMA = 0.0
      SUM = 0.0
      DO 145 I=1,N
         GAMA = GAMA+G(I)*W(IRSDG+I)
  145 SUM = SUM+G(I)*W(IRSDX+I)
      GAMA = GAMA/GAMDEN
C
      IF (DABS(BETA*GMIN+GAMA*SUM).GE.0.2*GSQRD) GO TO 155
C
      DO 150 I=1,N
  150 W(I) = -G(I)+BETA*W(I)+GAMA*W(IRSDX+I)
      GO TO 80
C
  155 GAMDEN = GMIN-GINIT
      DO 160 I=1,N
         W(IRSDX+I) = W(I)
         W(IRSDG+I) = G(I)-W(IGINIT+I)
  160 W(I) = -G(I)+BETA*W(I)
      ITERRS = ITERC
      GO TO 80
C
  165 IER = 130
C
  170 IF (NCALLS.EQ.NFOPT) GO TO 180
      F = FMIN
      DO 175 I=1,N
         VAR(I) = W(IXOPT+I)
  175 G(I) = W(IGOPT+I)
  180 IF (IER.EQ.0) GO TO 125
 9000 CONTINUE
C
 9005 NN=NN+1
      NCALL(NN,JJ)=NCALLS
      FF(NN,JJ)=F
      NO(JJ)=NN
      IIER(JJ)=IER
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
COM   SUBROUTINE OUTPAR(NUMCON,GRDVAR,TDIFF)
C
      SUBROUTINE OUTPAR(NUMCON,GRDVAR,IDIFF)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/DHANGL/VAR(MVAR),VART(MTR)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
C
      CHARACTER NAMRE*4,TIDA*80
      REAL*8 GRDVAR(MVAR),ANGL(MVAR)
COM      REAL TDIFF(2)
C
      INTEGER IDIFF
C
      DR=180.D0/3.141592653589793D0
C
C--------
C
      WRITE (JPAR,500) NUMCON
C
      DO 10 IR=2,   INUMRS-1
        NRE=IR-1
        K1=NVPRE(IR)+1
        K2=NVPRE(IR+1)
        NIN=K2-K1+1
C
        IF (NIN.GT.0) THEN
          DO 20 J=K1,K2
            ANGL(J)=DR*VAR(J)
            ANGL(J)=DMOD(ANGL(J),360.D0)
C
            IF (ANGL(J).GT.180.D0) THEN
              ANGL(J)=ANGL(J)-360.D0
            END IF
C
            IF (ANGL(J).LT.-180.D0) THEN
              ANGL(J)=ANGL(J)+360.D0
            END IF
C
  20      CONTINUE
C
          WRITE (JPAR,510) NAMRE(IR),NRE,(ANGL(J),J=K1,K2)
C
          WRITE (JPAR,520) (GRDVAR(J),J=K1,K2)
        END IF
C
  10  CONTINUE
C
COM      WRITE(JPAR,530) TDIFF(1),TDIFF(2)
C
         WRITE(JPAR,530) IDIFF
C
C--------
C
 500  FORMAT (/'NO. OF CONF =',I3)
 510  FORMAT (2X,A4,I5,3X,10F9.3)
 520  FORMAT (14X,10F9.3)
COM 530  FORMAT (/'USER TIME :',D12.3,'SEC SYSTEM TIME :',D12.3,'SEC')
C
 530  FORMAT (/'CPU TIME :',I8,' MSEC')
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTTGT(I,NLOOP,LIMIT,NAC)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (ML=100)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/TRGET1/NO(ML),NCALL(10,ML),IIER(ML)
      COMMON/TRGET2/FF(10,ML)
      COMMON/NDIFF/NDIFF,NVAN,WVW
C
      INTEGER LIMIT(ML),NAC(ML)
C
C--------
C
      WRITE (JTGT,500) I
C
      DO 10 K=1,NLOOP
        WRITE (JTGT,510) FF(1,K),NAC(K)
        DO 20 L=1,NO(K)
          WRITE (JTGT,520) NCALL(L,K),FF(L,K)
  20    CONTINUE
        WRITE (JTGT,530) FF(NO(K),K),NCALL(NO(K),K),LIMIT(K),IIER(K)
  10  CONTINUE
C
C--------
C
 500  FORMAT('NO. OF CONF =',I3)
 510  FORMAT(/' ERROR AT BEGIN :',D12.3,'  RANGE OF CONSTR: ',I5)
 520  FORMAT('  NC:',I5,'   F=',E12.3)
 530  FORMAT(' ERROR :',D12.3,' AFTER ',I5,' CYCLES ( LIMIT =',I5,
     *       ' ); SMODE :',I5)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTVD(CUT1,CUT2,NUMCON)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10,MCL=10000,MCU=10000)
      PARAMETER (MRES1=MRES+1,MTR=MVAR+2*MPRO+1,MTR1=MTR+1)
      PARAMETER (MCU2=2*MCU,MCL2=2*MCL)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/DSTR/IAL1(MCL2),IAL2(MCL2),BL(MCL2),IAU1(MCU2),IAU2(MCU2),
     *            BU(MCU2),NDIFFL(MCL2),NDIFFU(MCU2),DLW(MCL2),DUW(MCU2)
      COMMON/PRCON/NDLOW(MTR1),NDUP(MTR1),NACLOW(MTR),NACUP(MTR)
      COMMON/PRDHD/NABEG(MVAR),NAEND(MVAR),IRBEG(MTR),IREND(MTR),
     *             NBR(MTR),NPOINT(2,MTR),NVPRE(MRES1),INODE(MVAR),
     *             NTPRE(MRES1),INDPSI(MTR)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
C
      CHARACTER NAMRE*4,TIDA*80,NRE1*4,NRE2*4,ALPH*3
      INTEGER NVIODL(6),NVIODU(6)
      REAL*8 X1(3),X2(3)
C
C--------
C
      SUMDL=0
      SUMDU=0
C
      DO 5 N=1,6
        NVIODL(N)=0
        NVIODU(N)=0
   5  CONTINUE
C
C--------
C
      WRITE (JVIO,500) NUMCON
C
      WRITE (JVIO,510) CUT1
C
      DO 10 IVAR=1,NTPRE(INUMRS)
C
        IF (NACLOW(IVAR) .GT.0) THEN
          LLOW=NDLOW(IVAR)+1
          LUP=LLOW+NACLOW(IVAR)-1
C
          DO 20 L=LLOW ,LUP
            IF (IAL1(L) .LT.IAL2(L)) THEN
              BLD=DSQRT(BL(L))
C
              DO 30 K=1,3
                X1(K)=COORD(K,IAL1(L))
                X2(K)=COORD(K,IAL2(L))
  30          CONTINUE
C
              D=0
C
              DO 40 K=1,3
                DIFF=X1(K)-X2(K)
                D=D+DIFF*DIFF
  40          CONTINUE
C
              D=DSQRT(D)
              DVIOL=BLD-D
C
              IF (DVIOL .GT.0.0D0) THEN
                NVIODL(1)=NVIODL(1)+1
                SUMDL=SUMDL+DVIOL
                IF (DVIOL .LT.0.1D0) THEN
                  NVIODL(2)=NVIODL(2)+1
                ELSE
                  IF (DVIOL .LT.0.3D0) THEN
                    NVIODL(3)=NVIODL(3)+1
                  ELSE
                    IF (DVIOL .LT.0.5D0) THEN
                      NVIODL(4)=NVIODL(4)+1
                    ELSE
                      IF (DVIOL .LT.1.0D0) THEN
                        NVIODL(5)=NVIODL(5)+1
                      ELSE
                        NVIODL(6)=NVIODL(6)+1
                      END IF
                    END IF
                  END IF
                END IF
              END IF
C
              IF (DVIOL.GT.CUT1) THEN
                N1=IAL1(L)
                N2=IAL2(L)
C
                DO 50 IR=2,INUMRS+1
                  IF (N1.LE.NPRE(IR)) THEN
                    NURE1=IR-2
                    NRE1=NAMRE(NURE1+1)
C
                    DO 60 JR=2,INUMRS+1
                      IF (N2.LE.NPRE(JR)) THEN
                        NURE2=JR-2
                        NRE2=NAMRE(NURE2+1)
C
                        WRITE(JVIO,520) NRE1,NURE1,ALPH(IAL1(L)),NRE2,
     *                                  NURE2,ALPH(IAL2(L)),BLD,D,DVIOL
                        GOTO 55
C
                      END IF
  60                CONTINUE
C
                  END IF
  50            CONTINUE
  55            CONTINUE
C
              END IF
C
            END IF
  20      CONTINUE
C
        END IF
C
  10  CONTINUE
C
      WRITE (JVIO,530) (NVIODL(N),N=1,6),SUMDL
C
C--------
C
      WRITE (JVIO,540) CUT2
C
      DO 70 IVAR=1,NTPRE(INUMRS)
        IF (NACUP (IVAR) .GT.0) THEN
          LLOW=NDUP(IVAR)+1
          LUP=LLOW+NACUP(IVAR)-1
C
          DO 80 L=LLOW ,LUP
            IF (IAU1(L) .LT.IAU2(L)) THEN
              BUD=DSQRT(BU(L))
C
              DO 90 K=1,3
                X1(K)=COORD(K,IAU1(L))
                X2(K)=COORD(K,IAU2(L))
  90          CONTINUE
C
              D=0
C
              DO 100 K=1,3
                DIFF=X1(K)-X2(K)
                D=D+DIFF*DIFF
 100          CONTINUE
C
              D=DSQRT(D)
              DVIOU=D-BUD
C
              IF (DVIOU .GT.0.0D0) THEN
                NVIODU(1)=NVIODU(1)+1
                SUMDU=SUMDU+DVIOU
                IF (DVIOU .LT.0.1D0) THEN
                  NVIODU(2)=NVIODU(2)+1
                ELSE
                  IF (DVIOU .LT.0.3D0) THEN
                    NVIODU(3)=NVIODU(3)+1
                  ELSE
                    IF (DVIOU .LT.0.5D0) THEN
                      NVIODU(4)=NVIODU(4)+1
                    ELSE
                      IF (DVIOU .LT.1.0D0) THEN
                        NVIODU(5)=NVIODU(5)+1
                      ELSE
                        NVIODU(6)=NVIODU(6)+1
                      END IF
                    END IF
                  END IF
                END IF
              END IF
C
              IF (DVIOU.GT.CUT2) THEN
                N1=IAU1(L)
                N2=IAU2(L)
                DO 110 IR=2,INUMRS+1
                  IF (N1.LE.NPRE(IR)) THEN
                    NURE1=IR-2
                    NRE1=NAMRE(NURE1+1)
C
                    DO 120 JR=2,INUMRS+1
                      IF (N2.LE.NPRE(JR)) THEN
                        NURE2=JR-2
                        NRE2=NAMRE(NURE2+1)
C
                        WRITE(JVIO,520) NRE1,NURE1,ALPH(IAU1(L)),NRE2,
     *                                  NURE2,ALPH(IAU2(L)),BUD,D,DVIOU
                        GOTO 115
C
                      END IF
 120                CONTINUE
                  END IF
 110            CONTINUE
 115            CONTINUE
C
              END IF
C
            END IF
  80      CONTINUE
C
        END IF
  70  CONTINUE
C
      WRITE (JVIO,530) (NVIODU(N),N=1,6),SUMDU
C
C--------
C
 500   FORMAT (/'NO. OF CONF =',I3)
 510   FORMAT (//,' VIOLATION OF LOWER LIMITS GE THAN',F8.3,' A',//,8X,
     *         'ATOM1',12X,'ATOM2',12X,' LIMIT    DISTANCE VIOLATION')
 520   FORMAT (5X,A4,I3,1X,A3,6X,A4,I3,1X,A3,4X,3F10.2)
 530   FORMAT (//,5X,'TOTAL <0.1 <0.3 <0.5 <1.0 1.0<    SUM OF VIO',
     *         //,5X,6(1X,I4),F10.2)
 540   FORMAT (//,' VIOLATION OF UPPER LIMITS GE THAN',F8.3,' A',//,8X,
     *         'ATOM1',12X,'ATOM2',12X,' LIMIT    DISTANCE VIOLATION')
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTVV(CUT3,NCON,ICON)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MVAR=900,MPRO=10,MCH=100,MSP=10)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
      COMMON/NDIFF/NDIFF,NVAN,WVW
      COMMON/HBND1/NH,NUMH1(MCH),NUMH2(MCH)
      COMMON/HBND2/AMH1(MCH),AMH2(MCH)
      COMMON/CYS/KCYS,NCYS,NPAIR(2,MSP)
C
      CHARACTER NAMRE*4,TIDA*80,NRE1*4,NRE2*4,ALPH*3,AMH1*3,AMH2*3
      CHARACTER*3 AI,AJ,AM
      INTEGER NCON(MA),ICON(4,MA),NVIODV(6)
      REAL*8 X1(3),X2(3)
C
C--------
C
      SUMDV=0
C
      DO 5 N=1,6
        NVIODV(N)=0
   5  CONTINUE
C
C--------
C
      WRITE (JVIO,500) CUT3,NVAN
C
      IF (NVAN.LT.0) THEN
        RETURN
      END IF
C
      NAT=NPRE(INUMRS)
      IL=NPRE(2)+1
      IU=NAT-1
C
      DO 10 I= IL,IU
        IR=I-NPRE(2)
        NCI=NCON(IR)
        NI=NBTYPE(I)
C
        IF (NI.NE.12) THEN
C
          DO 20 K=1,3
            X1(K)=COORD(K,I)
  20      CONTINUE
C
          RADI=RAD(I)
C
          DO 30 J=I+1,  NAT
            NJ=NBTYPE(J)
            IF (NJ.NE.12) THEN
              IND=0
              JR=J-NPRE(2)
              IF (NCI.NE.0) THEN
                DO 40 L=1, NCI
                  ICI1=ICON(L,IR)
                  IF (JR.EQ. ICI1) THEN
                    IND=1
                    GOTO 45
                  ELSE
                    NCI1=NCON(ICI1)
                    IF (NCI1.NE.0) THEN
                      DO 50 K=1,NCI1
                        ICI2=ICON(K,ICI1)
                        IF (JR.EQ. ICI2) THEN
                          IND=1
                          GOTO 45
                        END IF
  50                  CONTINUE
                    END IF
                  END IF
  40            CONTINUE
  45            CONTINUE
              END IF
C
              IF (NCYS .GT.0) THEN
                IF (ALPH(I).EQ.'SG ') THEN
                  IF (ALPH(J).EQ.'SG ') THEN
                    NUR1=NUMRE(I)
                    NUR2=NUMRE(J)
                    IF (NUR1.GT.NUR2) THEN
                      NURM=NUR1
                      NUR1=NUR2
                      NUR2=NURM
                    END IF
C
                    DO 60 II=1,NCYS
                      IF (NUR1.EQ.NPAIR(1,II)) THEN
                        IF (NUR2.EQ.NPAIR(2,II)) THEN
                          IND=1
                        END IF
                      END IF
  60                CONTINUE
C
                  END IF
                END IF
              END IF
C
              IF (NH.GT.0) THEN
                AI=ALPH(I)
                AJ=ALPH(J)
                NUR1=NUMRE(I)
                NUR2=NUMRE(J)
C
                IF (NUR1.GT.NUR2) THEN
                  NURM=NUR1
                  NUR1=NUR2
                  NUR2=NURM
                  AM=AI
                  AI=AJ
                  AJ=AM
                END IF
C
                DO 70 II=1,NH
                  IF (NUR1.EQ.NUMH1(II)) THEN
                    IF (NUR2.EQ.NUMH2(II)) THEN
                      IF (AI.EQ.AMH1(II)) THEN
                        IF (AJ.EQ.AMH2(II)) THEN
                          IND=1
                        END IF
                      END IF
                    END IF
                  END IF
  70            CONTINUE
C
              END IF
C
              IF (IND .EQ.0) THEN
                DO 80 K=1,3
                  X2(K)=COORD(K,J)
  80            CONTINUE
C
                D=0
C
                DO 90 K=1,3
                  DIFF=X1(K)-X2(K)
                  D=D+DIFF*DIFF
  90            CONTINUE
C
                D=DSQRT(D)
                RVW=RADI+RAD(J)
                DVIOV=RVW-D
C
                IF (DVIOV .GT.0.0D0) THEN
                  NVIODV(1)=NVIODV(1)+1
                  SUMDV=SUMDV+DVIOV
                  IF (DVIOV .LT.0.1D0) THEN
                    NVIODV(2)=NVIODV(2)+1
                  ELSE
                    IF (DVIOV .LT.0.3D0) THEN
                      NVIODV(3)=NVIODV(3)+1
                    ELSE
                      IF (DVIOV .LT.0.5D0) THEN
                        NVIODV(4)=NVIODV(4)+1
                      ELSE
                        IF (DVIOV .LT.1.0D0) THEN
                          NVIODV(5)=NVIODV(5)+1
                        ELSE
                          NVIODV(6)=NVIODV(6)+1
                        END IF
                      END IF
                    END IF
                  END IF
                END IF
C
                IF (DVIOV.GT.CUT3) THEN
                  DO 100 IRES=2,INUMRS+1
                    IF (I.LE. NPRE(IRES)) THEN
                      NURE1=IRES-2
                      NRE1=NAMRE(NURE1+1)
C
                      DO 110 JRES=2,INUMRS+1
                        IF (J.LE. NPRE(JRES)) THEN
                          NURE2=JRES-2
                          NRE2=NAMRE(NURE2+1)
C
                          NDF=IABS(NURE2-NURE1)
                          IF (NDF.LE.NVAN) THEN
C
                            WRITE(JVIO,510) NRE1,NURE1,ALPH(I),NRE2,
     *                                      NURE2,ALPH(J),RVW,D,DVIOV
C
                          END IF
                          GOTO 105
C
                        END IF
 110                  CONTINUE
                    END IF
 100              CONTINUE
 105              CONTINUE
                END IF
C
              END IF
            END IF
  30      CONTINUE
C
        END IF
C
  10  CONTINUE
C
      WRITE (JVIO,520) (NVIODV(N),N=1,6),SUMDV
C
C--------
C
 500  FORMAT (//,' VIOLATION OF VAN DER WAALS GE THAN',F8.3,
     *        ' A  IN THE RANGE: ',I5,//,8X,'ATOM1',12X,'ATOM2',12X,
     *        ' LIMIT    DISTANCE VIOLATION')
 510  FORMAT (5X,A4,I3,1X,A3,6X,A4,I3,1X,A3,4X,3F10.2)
 520  FORMAT (//,5X,'TOTAL <0.1 <0.3 <0.5 <1.0 1.0<    SUM OF VIO',
     *         //,5X,6(1X,I4),F10.2)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTVJ(CUT4)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MVAR=900,MPRO=10,MJC=100)
      PARAMETER (MTR=MVAR+2*MPRO+1)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/NAMPR/TIDA,NAMRE(MRES)
      COMMON/DHANGL/VAR(MVAR),VART(MTR)
      COMMON/JCON1/JRAN,NOJ,NORESJ(MJC),NJ(MJC)
      COMMON/JCON2/ANGJLO(MJC),ANGJUP(MJC),CENTJ(MVAR),HLJ(MVAR),
     *             VJ(MVAR),WJ
      COMMON/JCON3/ANGJ(MJC)
C
      CHARACTER ANGJ*4,NAMRE*4,TIDA*80,NRE*4
      REAL*8 LIM
C
      DR=180.D0/3.141592653589793D0
      RD=3.141592653589793D0/180.D0
      PI=3.141592653589793D0
      PI2=2*PI
C
C--------
C
      RDCUT4=CUT4*RD
C
      WRITE (JVIO,500) CUT4
C
      DO 10 I=1,NOJ
        LIM=HLJ(NJ(I))+RDCUT4
        AVJ=VJ(NJ(I))
C
        IF (AVJ.GT.PI) THEN
          AVJ=DABS(AVJ-PI2)
        END IF
C
        IF (AVJ.GT.LIM) THEN
          VJT=DR*(AVJ-HLJ(NJ(I)))
          ANGF=DR*VAR(NJ(I))
          NRE=NAMRE(NORESJ(I)+1)
          WRITE (JVIO,510) NORESJ(I),NRE,ANGJ(I),ANGJLO(I),
     *                     ANGJUP(I),ANGF,VJT
        END IF
C
  10  CONTINUE
C
C--------
C
 500  FORMAT(//' VIOLATION OF THE COUPLING CONSTANT GE THAN',F8.3,' A',
     *       //,10X,'RESIDUE',5X,'ANGLE',11X,'RANGE',10X,
     *       'VALUE',9X,'VIOLATION')
 510  FORMAT(10X,I2,1X,A4,6X,A4,4X,2(1X,F7.2),4X,F7.2,10X,F7.2)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C
      SUBROUTINE OUTVW(CUT5)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MVAR=900,MPRO=10,MWC=100)
      PARAMETER (MTR=MVAR+2*MPRO+1)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/NAMPR/TIDA,NAMRE(MRES)
      COMMON/DHANGL/VAR(MVAR),VART(MTR)
      COMMON/WCON1/IWRAN,NOW,NORESW(MWC),NW(MWC)
      COMMON/WCON2/ANGWLO(MWC),ANGWUP(MWC),CENTW(MVAR),HLW(MVAR),
     *             VW(MVAR),WW
C
      CHARACTER NAMRE*4,TIDA*80,NRE*4
      REAL*8 LIM
C
      DR=180.D0/3.141592653589793D0
      RD=3.141592653589793D0/180.D0
      PI=3.141592653589793D0
      PI2=2*PI
C
C--------
C
      RDCUT5=CUT5*RD
C
      WRITE (JVIO,500) CUT5
C
      DO 10 I=1,NOJ
        LIM=HLW(NW(I))+RDCUT5
        AVW=VW(NW(I))
C
        IF (AVW.GT.PI) THEN
          AVW=DABS(AVW-PI2)
        END IF
C
        IF (AVW.GT.LIM) THEN
          VWT=DR*(AVW-HLW(NW(I)))
          ANGF=DR*VAR(NW(I))
          NRE=NAMRE(NORESW(I)+1)
          WRITE (JVIO,510) NORESW(I),NRE,ANGWLO(I),ANGWUP(I),ANGF,VWT
        END IF
C
  10  CONTINUE
C
C--------
C
 500  FORMAT(//' VIOLATION OF CONSTRAINT OF W-ANGLE GE THAN',F8.3,' A',
     *       //,10X,'RESIDUE',21X,'RANGE',10X,'VALUE',9X,'VIOLATION')
 510  FORMAT(10X,I2,1X,A4,14X,2(1X,F7.2),4X,F7.2,10X,F7.2)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTANG
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     *             NV(MRES)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
C
      REAL*8 ANGF(10)
C
      DR=180.D0/3.141592653589793D0
C--------
C
      DO 10 I=2,INUMRS-1
        DO 20 J=1,10
          ANGL=DR*ANGLES(J,I)
          ANGL=DMOD(ANGL,360.D0)
          IF (ANGL.GT.180.D0) THEN
            ANGL=ANGL-360.D0
          END IF
          IF (ANGL.LT.-180.D0) THEN
            ANGL=ANGL+360.D0
          END IF
          ANGF(J)=ANGL
  20    CONTINUE
C
        WRITE (JANG,500) (ANGF(J),J=1,10)
  10  CONTINUE
C
C--------
C
 500  FORMAT(10F8.3)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTANE
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/BONDS/ANGLES(10,MRES),UTOR(10,MRES),NDXARR(10,MRES),
     *             NV(MRES)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
C
      REAL*8 ANGF(10)
C
      DR=180.D0/3.141592653589793D0
C
C--------
C
      DO 5 J=1,10
        ANGLES(J,1)=0.0D0
        ANGLES(J,INUMRS)=0.0D0
   5  CONTINUE
C
      DO 10 I=1,INUMRS
        DO 20 J=1,10
          ANGL=DR*ANGLES(J,I)
          ANGL=DMOD(ANGL,360.D0)
          IF (ANGL.GT.180.D0) THEN
            ANGL=ANGL-360.D0
          END IF
          IF (ANGL.LT.-180.D0) THEN
            ANGL=ANGL+360.D0
          END IF
          ANGF(J)=ANGL
  20    CONTINUE
C
        WRITE (JANG,500) (ANGF(J),J=1,10)
  10  CONTINUE
C
C--------
C
 500  FORMAT(10F8.3)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTCRD(CRDID,NUMCON)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/CHARM1/IND(26,26),INDC(22,20),NOATM(26),NTATOM(2,20)
      COMMON/CHARM2/ATMNAM(26,26),ATMNME(20,20),ID
      COMMON/CHARM3/VAL
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN002/CHANG(3,7,26),NATOMS(26),NCHI(26),NDPT1(7,26),
     *              NDPT2(7,26),NUM(7,26)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     *              NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),
     *              NDTYPE(22,20)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
C
      CHARACTER NAMRE*4,TIDA*80,ALPH*3,EALPHA*3,DATE*24,NUMBER*11
      CHARACTER*4 NARE(MA),ATM(MA),NRE(MA),ATMNAM,ATMNME,ID,CRDID
      CHARACTER*1 A,B,C,D
      INTEGER NURE(MA),INDE(26,MRES)
      REAL*8 CRDX(MA),CRDY(MA),CRDZ(MA)
C
C--------
C
      DATA NUMBER/' 0123456789'/
C
      IF (CRDID.NE.'    ') THEN
        ID=CRDID
      END IF
C
      NCO=0
      NIND=0
      L1=LIST(1)
      LL=LIST(INUMRS)
      NUMEA=NDATOM(L1)
      NUMEC=NDATOM(LL)
      NINDL=NPRE(INUMRS)
C
      DO 10 I=1,NUMEA
        NIND=NIND+1
        INDE(I,1)=NIND
  10  CONTINUE
C
      NIND=NINDL
C
      DO 20 I=2,NUMEC
        NIND=NIND+1
        INDE(I,INUMRS)=NIND
  20  CONTINUE
C
      DO 30 IR=2,     INUMRS-1
        L=LIST(IR)
        NIND=NPRE(IR)
        NUMF=NATOMS(L)
        DO 40 I=1,NUMF
          NIND=NIND+1
          INDE(I,IR)=NIND
  40    CONTINUE
  30  CONTINUE
C
      NUMA=NTATOM(1,L1)
      NUMS=NTATOM(2,L1)
      L2=LIST(2)
      NUMC=NOATM(L2)
C
      DO 50 I=1,NUMA
        NCO=NCO+1
        N=INDE(INDC(I,L1),1)
        ATM(NCO)=ATMNME(I,L1)
        NURE(NCO)=1
        CRDX(NCO)=COORD(1,N)
        CRDY(NCO)=COORD(2,N)
        CRDZ(NCO)=COORD(3,N)
        NARE(NCO)=NAMRE(2)
  50  CONTINUE
C
      DO 60 I=NUMS,NUMC
        NCO=NCO+1
        N=INDE(IND(I,L2),2)
        ATM(NCO)=ATMNAM(I,L2)
        NURE(NCO)=1
        CRDX(NCO)=COORD(1,N)
        CRDY(NCO)=COORD(2,N)
        CRDZ(NCO)=COORD(3,N)
        NARE(NCO)=NAMRE(2)
  60  CONTINUE
C
      DO 70 IR=3,INUMRS-1
        L=LIST(IR)
        NUMC=NOATM(L)
        DO 80 I=1,NUMC
          NCO=NCO+1
          N=INDE(IND(I,L),IR)
          ATM(NCO)=ATMNAM(I,L)
          NURE(NCO)=NUMRE(N)-1
          CRDX(NCO)=COORD(1,N)
          CRDY(NCO)=COORD(2,N)
          CRDZ(NCO)=COORD(3,N)
          NARE(NCO)=NAMRE(NUMRE(N))
  80    CONTINUE
  70  CONTINUE
C
      ATM(NCO)=ATMNME(1,LL)
      NUMCC=NTATOM(1,LL)
      NUMCS=NTATOM(2,LL)
      NCO=NCO+NUMCS
C
      DO 90 I=2,NUMCC
        NCO=NCO+1
        N=INDE(INDC(I,LL),INUMRS)
        ATM(NCO)=ATMNME(I,LL)
        NURE(NCO)=INUMRS-2
        CRDX(NCO)=COORD(1,N)
        CRDY(NCO)=COORD(2,N)
        CRDZ(NCO)=COORD(3,N)
        NARE(NCO)=NAMRE(INUMRS-1)
  90  CONTINUE
C
C--------
C
COM      CALL  FDATE(DATE)
C
      DO 100 I=1,NCO
        N1=1
        N2=1
        N3=1
        N4=1
        NN=NURE(I)
C
        IF (NN.LT.10) THEN
          N4=NN+2
        END IF
C
        IF (NN.GT.9) THEN
          N4=INT(NN/10)+2
          N3=MOD(NN,10)+2
        END IF
C
        IF (NN.GT.99) THEN
          N4=INT(NN/100)+2
          N3=INT(NN/10)-N3*10+22
          N2=NN-N2*10-N3*100+222
        END IF
C
        IF (NN.GT.999) THEN
          N4=INT(NN/1000)+2
          N3=INT(NN/100)-N4*10+22
          N2=INT(NN/10)-N3*10-N4*100+222
          N1=NN-N2*10-N3*100-N4*1000+2222
        END IF
C
        A=NUMBER(N4:N4)
        B=NUMBER(N3:N3)
        C=NUMBER(N2:N2)
        D=NUMBER(N1:N1)
C
        NRE(I)=A//B//C//D
 100  CONTINUE
C
      WRITE (JCO,500) TIDA
      WRITE (JCO,510) NUMCON
      WRITE (JCO,520) DATE
      WRITE (JCO,530)
      WRITE (JCO,540) NCO
C
      DO 110 I=1,NCO
        WRITE (JCO,550) I,NURE(I),NARE(I),ATM(I),CRDX(I),CRDY(I),
     *                  CRDZ(I),ID,NRE(I),VAL
 110  CONTINUE
C
C--------
C
 500  FORMAT ('* ',A80)
 510  FORMAT ('* NUMBER OF CONFORMATION :',I5)
 520  FORMAT ('* DATE : ',A24)
 530  FORMAT ('*')
 540  FORMAT (I5)
 550  FORMAT (2I5,1X,A4,1X,A4,3F10.5,1X,A4,1X,A4,F10.5)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTPDB(CRDID,NUMCON)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/CHARM1/IND(26,26),INDC(22,20),NOATM(26),NTATOM(2,20)
      COMMON/CHARM2/ATMNAM(26,26),ATMNME(20,20),ID
      COMMON/CHARM3/VAL
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/GEN002/CHANG(3,7,26),NATOMS(26),NCHI(26),NDPT1(7,26),
     *              NDPT2(7,26),NUM(7,26)
      COMMON/GEN004/ENOORD(3,22,20),ECHG(22,20),EALPHA(22,20),
     *              NDATOM(20),NBOND(20),NNDPT1(6,20),NNDPT2(6,20),
     *              NDTYPE(22,20)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
C
      CHARACTER NAMRE*4,TIDA*80,ALPH*3,EALPHA*3,DATE*24,NUMBER*11
      CHARACTER*4 NARE(MA),ATM(MA),NRE(MA),ATMNAM,ATMNME,ID,CRDID
      INTEGER NURE(MA),INDE(26,MRES)
      REAL*8 CRDX(MA),CRDY(MA),CRDZ(MA)
C
C--------
C
      DATA NUMBER/' 0123456789'/
C
      IF (CRDID.NE.'    ') THEN
        ID=CRDID
      END IF
C
      NCO=0
      NIND=0
      L1=LIST(1)
      LL=LIST(INUMRS)
      NUMEA=NDATOM(L1)
      NUMEC=NDATOM(LL)
      NINDL=NPRE(INUMRS)
C
      DO 10 I=1,NUMEA
        NIND=NIND+1
        INDE(I,1)=NIND
  10  CONTINUE
C
      NIND=NINDL
C
      DO 20 I=2,NUMEC
        NIND=NIND+1
        INDE(I,INUMRS)=NIND
  20  CONTINUE
C
      DO 30 IR=2,     INUMRS-1
        L=LIST(IR)
        NIND=NPRE(IR)
        NUMF=NATOMS(L)
        DO 40 I=1,NUMF
          NIND=NIND+1
          INDE(I,IR)=NIND
  40    CONTINUE
  30  CONTINUE
C
      NUMA=NTATOM(1,L1)
      NUMS=NTATOM(2,L1)
      L2=LIST(2)
      NUMC=NOATM(L2)
C
      DO 50 I=1,NUMA
        NCO=NCO+1
        N=INDE(INDC(I,L1),1)
        ATM(NCO)=ATMNME(I,L1)
        NURE(NCO)=1
        CRDX(NCO)=COORD(1,N)
        CRDY(NCO)=COORD(2,N)
        CRDZ(NCO)=COORD(3,N)
        NARE(NCO)=NAMRE(2)
  50  CONTINUE
C
      DO 60 I=NUMS,NUMC
        NCO=NCO+1
        N=INDE(IND(I,L2),2)
        ATM(NCO)=ATMNAM(I,L2)
        NURE(NCO)=1
        CRDX(NCO)=COORD(1,N)
        CRDY(NCO)=COORD(2,N)
        CRDZ(NCO)=COORD(3,N)
        NARE(NCO)=NAMRE(2)
  60  CONTINUE
C
      DO 70 IR=3,INUMRS-1
        L=LIST(IR)
        NUMC=NOATM(L)
        DO 80 I=1,NUMC
          NCO=NCO+1
          N=INDE(IND(I,L),IR)
          ATM(NCO)=ATMNAM(I,L)
          NURE(NCO)=NUMRE(N)-1
          CRDX(NCO)=COORD(1,N)
          CRDY(NCO)=COORD(2,N)
          CRDZ(NCO)=COORD(3,N)
          NARE(NCO)=NAMRE(NUMRE(N))
  80    CONTINUE
  70  CONTINUE
C
      ATM(NCO)=ATMNME(1,LL)
      NUMCC=NTATOM(1,LL)
      NUMCS=NTATOM(2,LL)
      NCO=NCO+NUMCS
C
      DO 90 I=2,NUMCC
        NCO=NCO+1
        N=INDE(INDC(I,LL),INUMRS)
        ATM(NCO)=ATMNME(I,LL)
        NURE(NCO)=INUMRS-2
        CRDX(NCO)=COORD(1,N)
        CRDY(NCO)=COORD(2,N)
        CRDZ(NCO)=COORD(3,N)
        NARE(NCO)=NAMRE(INUMRS-1)
  90  CONTINUE
C
C--------
C
COM      CALL  FDATE(DATE)
C
      WRITE (JCO,500) TIDA
      WRITE (JCO,510) NUMCON
      WRITE (JCO,520) DATE
C
      NRES=INUMRS-1
      NUML=INT(NRES/13)
      I=2
      DO 100 J=1,NUML
        WRITE (JCO,530)  J,NRES,(NAMRE(K),K=I,I+12)
        I=I+13
 100  CONTINUE
      IF (I.LE.NRES) THEN
        WRITE (JCO,530)  J,NRES,(NAMRE(K),K=I,NRES)
      ENDIF
C
      DO 110 I=1,NCO
        WRITE (JCO,540) I,ATM(I),NARE(I),NURE(I),CRDX(I),CRDY(I),
     *                  CRDZ(I)
 110  CONTINUE
C
      WRITE (JCO,550)
C
C--------
C
 500  FORMAT ('COMPND',4X,A80)
 510  FORMAT ('REMARK   1 NUMBER OF CONFORMATION :',I5)
 520  FORMAT ('REMARK   2 DATE : ',A24)
 530  FORMAT ('SEQRES',I4,3X,I4,2X,13A4)
 540  FORMAT ('ATOM',2X,I5,2X,A4,A4,1X,I4,4X,3F8.3)
 550  FORMAT ('TER   '/'END   ')
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE UNIXIO
C
C     THIS SUB. OPENS I/O FILES FOR CALCULATION ON UNIX MACHINE.
C
C--------
C
      CHARACTER FORMF*1,FILNAM*72
C
C--------
C
      OPEN(UNIT=1,
     *     FILE='C53827.INSPIDA2.DADAS.UNIXIO.UNIT',
     *     ACCESS='SEQUENTIAL',
     *     FORM='FORMATTED')
C
      READ (1,500) NUMF
      DO 10  I=1,NUMF
        READ (1,510) II,FORMF,FILNAM
        CALL  SRWEND(FILNAM,IFLEND)
        IF (FORMF .EQ. 'F') THEN
          OPEN(UNIT=II,FILE=FILNAM(1:IFLEND),
     *         ACCESS='SEQUENTIAL',FORM='FORMATTED')
        ELSE
          OPEN(UNIT=II,FILE=FILNAM(1:IFLEND),
     *           ACCESS='SEQUENTIAL',FORM='UNFORMATTED')
        END IF
  10  CONTINUE
C
C--------
C
 500  FORMAT(I2)
 510  FORMAT(I2,1X,1A,1X,A72)
C
C--------
C
      RETURN
      END
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      SUBROUTINE OUTFLX(CRDID,NUMCON)
C
C--------
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      PARAMETER (MRES=90,MA=2000,MSP=10)
      PARAMETER (MRES1=MRES+1)
C
      COMMON/OUNIT/JPAR,JTGT,JVIO,JANG,JCO
      COMMON/ATOMS/ALPH(MA),CHARGE(MA),COORD(3,MA),NBTYPE(MA)
      COMMON/GEN100/INUMRS,LIST(MRES),NPRE(MRES1)
      COMMON/NAMPR/TIDA,NAMRE(MRES)
      COMMON/VWAAL/RAD(MA),NUMRE(MA),NUNIT(MA)
      COMMON/CYS/KCYS,NCYS,NPAIR(2,MSP)
      COMMON/GEN000/CHG(26,26),ALPHA(26,26),TITLE(4,46),LTYPE(26,26)
C
      CHARACTER NAMRE*4,TIDA*80,ALPH*3
      CHARACTER ALPH1*1,ALPH4*4,ALPHA*3,TITLE*4
C
C--------
C
      NAT=NPRE(INUMRS+1)
C
      WRITE (JCO,510) NUMCON
      WRITE (JCO,511)
      WRITE (JCO,512)
      WRITE (JCO,513)
C
C--------
C
      WRITE (JCO,520)  1,NAMRE(2)
C
        NEND=NPRE(3)
C
        DO 10 L=1,NEND
          IF (NBTYPE(L).NE.12) THEN
C
            ALPH1=ALPH(L)(1:1)
            ALPH4=(ALPH(L)(1:2)//' ')//ALPH(L)(3:3)
            IF (ALPH(L).EQ.ALPHA(6,1)) ALPH4='C   '
            WRITE(JCO,530) ALPH4,ALPH1,(COORD(J,L),J=1,3)
C
          ENDIF
C
 10     CONTINUE
C
        IF (NAMRE(2).EQ.'CYS ') THEN
          DO 20 J=1,NCYS
            IF (2.EQ.NPAIR(1,J)) NUMCYS=NPAIR(2,J)-1
            IF (2.EQ.NPAIR(2,J)) NUMCYS=NPAIR(1,J)-1
 20       CONTINUE
          WRITE(JCO,540) NUMCYS
        ENDIF
C
C--------
C
      DO 100 I=3,INUMRS-1
C
        WRITE (JCO,520)  I-1,NAMRE(I)
C
        NBEG=NPRE(I)+1
        NEND=NPRE(I+1)
C
        DO 110 L=NBEG,NEND
          IF (NBTYPE(L).NE.12) THEN
C
            ALPH1=ALPH(L)(1:1)
            ALPH4=(ALPH(L)(1:2)//' ')//ALPH(L)(3:3)
            IF (ALPH(L).EQ.ALPHA(6,1)) ALPH4='C   '
            WRITE(JCO,530) ALPH4,ALPH1,(COORD(J,L),J=1,3)
C
          ENDIF
C
 110    CONTINUE
C
        IF (I.NE.(INUMRS-1)) THEN
          IF (NAMRE(I).EQ.'CYS ') THEN
            DO 120 J=1,NCYS
              IF (I.EQ.NPAIR(1,J)) NUMCYS=NPAIR(2,J)-1
              IF (I.EQ.NPAIR(2,J)) NUMCYS=NPAIR(1,J)-1
 120        CONTINUE
            WRITE(JCO,540) NUMCYS
          ENDIF
        ENDIF
C
 100  CONTINUE
C
C--------
C
      NBEG=NPRE(INUMRS)
C
      DO 200 L=NBEG,NAT
        IF (NBTYPE(L).NE.12) THEN
C
          ALPH1=ALPH(L)(1:1)
          ALPH4=(ALPH(L)(1:2)//' ')//ALPH(L)(3:3)
          IF (ALPH(L).EQ.ALPHA(6,1)) ALPH4='C   '
          WRITE(JCO,530) ALPH4,ALPH1,(COORD(J,L),J=1,3)
C
        ENDIF
C
        I=INUMRS-1
        IF (NAMRE(I).EQ.'CYS ') THEN
          DO 210 J=1,NCYS
            IF (I.EQ.NPAIR(1,J)) NUMCYS=NPAIR(2,J)-1
            IF (I.EQ.NPAIR(2,J)) NUMCYS=NPAIR(1,J)-1
 210      CONTINUE
          WRITE(JCO,540) NUMCYS
        ENDIF
C
 200  CONTINUE
C
      WRITE(JCO,550)
C
C--------
C
 510  FORMAT ('0        NUMBER OF CONFORMATION :',I5)
 511  FORMAT ('1       ')
 512  FORMAT ('2       ')
 513  FORMAT ('3       ')
 520  FORMAT ('4       ',I4,4X,A4)
 530  FORMAT ('5       ',A4,4X,A1,23X,'COODT',3X,3F8.3)
 540  FORMAT ('        SSBCNN3 SG',6X,I4)
 550  FORMAT ('END   ')
C
C--------
C
      RETURN
      END
