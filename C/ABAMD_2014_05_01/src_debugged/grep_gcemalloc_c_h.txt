ABA_Nose-Hoover.c:138:  temp=(double *)gcemalloc(sizeof(double)*6*6);
ABA_Nose-Hoover.c:139:  inv=(double *)gcemalloc(sizeof(double)*6*6);
ABA_Nose-Hoover_new.c:184:  temp=(double *)gcemalloc(sizeof(double)*6*6);
ABA_Nose-Hoover_new.c:185:  inv=(double *)gcemalloc(sizeof(double)*6*6);
ABA_Nose-Hoover_new_mvV.c:110:  temp=(double *)gcemalloc(sizeof(double)*6*6);
ABA_Nose-Hoover_new_mvV.c:111:  inv=(double *)gcemalloc(sizeof(double)*6*6);
ABA_calcKineE.c:25:  vec=(double *)gcemalloc(sizeof(double)*6);
ABA_calcKineE.c:26:  mat=(double *)gcemalloc(sizeof(double)*6*6);
ABA_calcKineE.c:57:  vec=(double *)gcemalloc(sizeof(double)*6);
ABA_calcKineE.c:58:  mat=(double *)gcemalloc(sizeof(double)*6*6);
ABA_calcKineE.c:87:  vec=(double *)gcemalloc(sizeof(double)*6);
ABA_calcKineE.c:88:  mat=(double *)gcemalloc(sizeof(double)*6*6);
ABA_calcKineE.c:112:  vec=(double *)gcemalloc(sizeof(double)*6);
ABA_calcKineE.c:113:  mat=(double *)gcemalloc(sizeof(double)*6*6);
ABA_calcKineE.c:137:  vec=(double *)gcemalloc(sizeof(double)*6);
ABA_calcKineE.c:138:  mat=(double *)gcemalloc(sizeof(double)*6*6);
ABA_calcKineE.c:170:  vec=(double *)gcemalloc(sizeof(double)*6);
ABA_calcKineE.c:171:  mat=(double *)gcemalloc(sizeof(double)*6*6);
ABA_mainpass.c:205:  temp=(double *)gcemalloc(sizeof(double)*6*6);
ABA_mainpass.c:206:  inv=(double *)gcemalloc(sizeof(double)*6*6);
ABA_pick_data.c:18:  clt=(CLT *)gcemalloc(sizeof(CLT)*(*numclut));
ABA_pick_data.c:32:  IndexOfABICycle=(int *)gcemalloc(sizeof(int)*(*numclut));
ABA_pick_data.c:36:    clt[i].frc_e=(double *)gcemalloc(sizeof(double)*clt[i].num_atom_clust*3);
ABA_pick_data.c:37:    clt[i].frc_LJ=(double *)gcemalloc(sizeof(double)*clt[i].num_atom_clust*3);
ABA_pick_data.c:38:    clt[i].frc_1_4_e=(double *)gcemalloc(sizeof(double)*clt[i].num_atom_clust*3);
ABA_pick_data.c:39:    clt[i].frc_1_4_LJ=(double *)gcemalloc(sizeof(double)*clt[i].num_atom_clust*3);
ABA_set_frc.c:16:  f_clust=(double **)gcemalloc(sizeof(double *)*numclut);
ABA_set_frc.c:17:  f_clust_trans=(double **)gcemalloc(sizeof(double *)*numclut);
ABA_set_frc.c:19:    f_clust[i]=(double *)gcemalloc(sizeof(double)*3);
ABA_set_frc.c:20:    f_clust_trans[i]=(double *)gcemalloc(sizeof(double)*3);
ABA_set_frc.c:22:  f_atom=(double ***)gcemalloc(sizeof(double **)*numclut);
ABA_set_frc.c:23:  f_atom_trans=(double ***)gcemalloc(sizeof(double **)*numclut);
ABA_set_frc.c:25:    f_atom[i]=(double **)gcemalloc(sizeof(double *)*clt[i].num_atom_clust);
ABA_set_frc.c:26:    f_atom_trans[i]=(double **)gcemalloc(sizeof(double *)*clt[i].num_atom_clust);
ABA_set_frc.c:28:      f_atom[i][j]=(double *)gcemalloc(sizeof(double)*3);
ABA_set_frc.c:29:      f_atom_trans[i][j]=(double *)gcemalloc(sizeof(double)*3);
ABA_set_imat.c:18:    clt[nNumClut].mass=(double *)gcemalloc(sizeof(double)*clt[nNumClut].num_atom_clust);
ABA_set_imatb.c:17:/*     clt[nNumClut].mass=(double *)gcemalloc(sizeof(double)*clt[nNumClut].num_atom_clust);		  */
ABA_set_lref.c:26:      clt[nNumClut].xoord=(double *)gcemalloc(sizeof(double)*num_atom_all*3);
ABA_set_lref.c:37:      clt[nNumClut].xoord=(double *)gcemalloc(sizeof(double)*num_atom_all*3);
ABA_set_lref.c:46:      clt[nNumClut].xoord=(double *)gcemalloc(sizeof(double)*num_atom_all*3);
ABA_set_lref.c:91:  mat=(double *)gcemalloc(sizeof(double)*num_atom*3);
ABA_set_trans.c:16:  transMat=(double *)gcemalloc(sizeof(double)*6*6);
ABA_set_trans.c:40:  TMatt=(double *)gcemalloc(sizeof(double)*6*6);
ABA_set_trans.c:41:  TMP=(double *)gcemalloc(sizeof(double)*6*6);
ABA_set_trans.c:52:  transMattemp=(double *)gcemalloc(sizeof(double)*6*6);
ABA_set_trans.c:53:  temp=(double *)gcemalloc(sizeof(double)*6*6);
ABA_update.c:127:  dbmat=(double *)gcemalloc(sizeof(double)*3*3);
ABA_update.c:128:  invmat=(double *)gcemalloc(sizeof(double)*3*3);
ABAb.c:12:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:27:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:42:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:58:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:74:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:90:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:106:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:122:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:138:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
ABAb.c:152:  abi=(ABI *)gcemalloc(sizeof(ABI)*numclt);
EF.c:30:void *gcemalloc(size_t n){
EF.h:10:void *gcemalloc(size_t n);
FF.c:487:  n1=(double *)gcemalloc(sizeof(double)*3);
FF.c:488:  n2=(double *)gcemalloc(sizeof(double)*3);
FF.c:732:  f_temp=(double *)gcemalloc(sizeof(double)*3*3);
FF.c:876:  (*ene).parm.indexnb=(int *)gcemalloc(sizeof(int)*numnb*2);
FF.c:877:  (*ene).parm.ele=(double *)gcemalloc(sizeof(double)*numatom);
FF.c:878:  (*ene).parm.ALJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FF.c:879:  (*ene).parm.BLJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FF.c:880:  (*ene).parm.index14=(int *)gcemalloc(sizeof(int)*num14*2);
FF.c:881:  (*ene).p_e=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:882:  (*ene).p_LJ=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:883:  (*ene).p_e_14=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:884:  (*ene).p_LJ_14=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:885:  (*ene).p_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA));
FF.c:886:  (*ene).p_a=(double *)gcemalloc(sizeof(double)*(AP.NTHETH+AP.MTHETA));
FF.c:887:  (*ene).p_b=(double *)gcemalloc(sizeof(double)*(AP.NBONH+AP.MBONA));
FF.c:913:  (*ene).parm.indexnb=(int *)gcemalloc(sizeof(int)*numnb*2);
FF.c:914:  (*ene).parm.index14=(int *)gcemalloc(sizeof(int)*num14*2);
FF.c:918:  (*ene).parm.ele=(double *)gcemalloc(sizeof(double)*numatom);
FF.c:919:  (*ene).parm.ALJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FF.c:920:  (*ene).parm.BLJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FF.c:921:  (*ene).p_e=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:922:  (*ene).p_LJ=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:923:  (*ene).p_e_14=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:924:  (*ene).p_LJ_14=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:925:  (*ene).p_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA));
FF.c:926:  (*ene).p_a=(double *)gcemalloc(sizeof(double)*(AP.NTHETH+AP.MTHETA));
FF.c:927:  (*ene).p_b=(double *)gcemalloc(sizeof(double)*(AP.NBONH+AP.MBONA));
FF.c:944:  (*ene).parm.indexnb=(int *)gcemalloc(sizeof(int)*numnb*2);
FF.c:945:  (*ene).parm.index14=(int *)gcemalloc(sizeof(int)*num14*2);
FF.c:949:  (*ene).parm.ele=(double *)gcemalloc(sizeof(double)*numatom);
FF.c:950:  (*ene).parm.ALJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FF.c:951:  (*ene).parm.BLJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FF.c:952:  (*ene).p_e=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:953:  (*ene).p_LJ=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:954:  (*ene).p_e_14=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:955:  (*ene).p_LJ_14=(double *)gcemalloc(sizeof(double)*numnb);
FF.c:956:  (*ene).p_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA));
FF.c:957:  (*ene).p_a=(double *)gcemalloc(sizeof(double)*(AP.NTHETH+AP.MTHETA));
FF.c:958:  (*ene).p_b=(double *)gcemalloc(sizeof(double)*(AP.NBONH+AP.MBONA));
FF.c:962:  (*f).f_t=(double *)gcemalloc(sizeof(double)*numatom*3);
FF.c:963:  (*f).f_e=(double *)gcemalloc(sizeof(double)*numatom*3);
FF.c:964:  (*f).f_LJ=(double *)gcemalloc(sizeof(double)*numatom*3);
FF.c:965:  (*f).f_e_14=(double *)gcemalloc(sizeof(double)*numatom*3);
FF.c:966:  (*f).f_LJ_14=(double *)gcemalloc(sizeof(double)*numatom*3);
FF.c:967:  (*f).f_d=(double *)gcemalloc(sizeof(double)*numatom*3);
FF.c:968:  (*f).f_a=(double *)gcemalloc(sizeof(double)*numatom*3);
FF.c:969:  (*f).f_b=(double *)gcemalloc(sizeof(double)*numatom*3);
FF.c:983:  f_e=(double *)gcemalloc(sizeof(double)*numatom*3);           // 2014-07-09
FF.c:984:  f_LJ=(double *)gcemalloc(sizeof(double)*numatom*3);          // 2014-07-09
FF.c:985:  f_e_14=(double *)gcemalloc(sizeof(double)*numatom*3);        // 2014-07-09
FF.c:986:  f_LJ_14=(double *)gcemalloc(sizeof(double)*numatom*3);       // 2014-07-09
FF.c:987:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FF.c:1043:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FF.c:1107:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FF.c:1330:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FF.c:1438:  n1=(double *)gcemalloc(sizeof(double)*3);
FF.c:1439:  n2=(double *)gcemalloc(sizeof(double)*3);
FF.c:1529:  f_temp=(double *)gcemalloc(sizeof(double)*3*3);
FF.c:1723:  indexclut=(int *)gcemalloc(sizeof(int)*(AP.NPHIH+AP.MPHIA));
FF.c:1724:  //  inpindex=(int *)gcemalloc(sizeof(int)*1);
FF.c:1778:  atom_dihed_pair=(int *)gcemalloc(sizeof(int)*(AP.NPHIH+AP.MPHIA)*6);
FF.c:1779:  inpindexH=(int *)gcemalloc(sizeof(int)*1);
FF.c:1780:  inpindexA=(int *)gcemalloc(sizeof(int)*1);
FF.c:1908:  inpindex=(int *)gcemalloc(sizeof(int)*((*inpnumH)+(*inpnumA)));
FFL.c:855:  n1=(double *)gcemalloc(sizeof(double)*3);
FFL.c:856:  n2=(double *)gcemalloc(sizeof(double)*3);
FFL.c:1106:  f_temp=(double *)gcemalloc(sizeof(double)*3*3);
FFL.c:1250:  (*ene).parm.indexnb=(int *)gcemalloc(sizeof(int)*numnb*2);
FFL.c:1251:  (*ene).parm.ele=(double *)gcemalloc(sizeof(double)*numatom);
FFL.c:1252:  (*ene).parm.ALJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FFL.c:1253:  (*ene).parm.BLJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FFL.c:1254:  (*ene).parm.index14=(int *)gcemalloc(sizeof(int)*num14*2);
FFL.c:1255:  (*ene).p_e=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1256:  (*ene).p_LJ=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1257:  (*ene).p_e_14=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1258:  (*ene).p_LJ_14=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1259:  (*ene).p_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA));
FFL.c:1260:  (*ene).p_a=(double *)gcemalloc(sizeof(double)*(AP.NTHETH+AP.MTHETA));
FFL.c:1261:  (*ene).p_b=(double *)gcemalloc(sizeof(double)*(AP.NBONH+AP.MBONA));
FFL.c:1287:  (*ene).parm.indexnb=(int *)gcemalloc(sizeof(int)*numnb*2);
FFL.c:1288:  (*ene).parm.index14=(int *)gcemalloc(sizeof(int)*num14*2);
FFL.c:1292:  (*ene).parm.ele=(double *)gcemalloc(sizeof(double)*numatom);
FFL.c:1293:  (*ene).parm.ALJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FFL.c:1294:  (*ene).parm.BLJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FFL.c:1295:  (*ene).p_e=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1296:  (*ene).p_LJ=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1297:  (*ene).p_e_14=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1298:  (*ene).p_LJ_14=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1299:  (*ene).p_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA));
FFL.c:1300:  (*ene).p_a=(double *)gcemalloc(sizeof(double)*(AP.NTHETH+AP.MTHETA));
FFL.c:1301:  (*ene).p_b=(double *)gcemalloc(sizeof(double)*(AP.NBONH+AP.MBONA));
FFL.c:1316:  (*ene).parm.indexnb=(int *)gcemalloc(sizeof(int)*numnb*2);
FFL.c:1317:  (*ene).parm.index14=(int *)gcemalloc(sizeof(int)*num14*2);
FFL.c:1321:  (*ene).parm.ele=(double *)gcemalloc(sizeof(double)*numatom);
FFL.c:1322:  (*ene).parm.ALJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FFL.c:1323:  (*ene).parm.BLJ=(double *)gcemalloc(sizeof(double)*numatom*numatom);
FFL.c:1324:  (*ene).p_e=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1325:  (*ene).p_LJ=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1326:  (*ene).p_e_14=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1327:  (*ene).p_LJ_14=(double *)gcemalloc(sizeof(double)*numnb);
FFL.c:1328:  (*ene).p_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA));
FFL.c:1329:  (*ene).p_a=(double *)gcemalloc(sizeof(double)*(AP.NTHETH+AP.MTHETA));
FFL.c:1330:  (*ene).p_b=(double *)gcemalloc(sizeof(double)*(AP.NBONH+AP.MBONA));
FFL.c:1334:  (*f).f_t=(double *)gcemalloc(sizeof(double)*numatom*3);
FFL.c:1335:  (*f).f_e=(double *)gcemalloc(sizeof(double)*numatom*3);
FFL.c:1336:  (*f).f_LJ=(double *)gcemalloc(sizeof(double)*numatom*3);
FFL.c:1337:  (*f).f_e_14=(double *)gcemalloc(sizeof(double)*numatom*3);
FFL.c:1338:  (*f).f_LJ_14=(double *)gcemalloc(sizeof(double)*numatom*3);
FFL.c:1339:  (*f).f_d=(double *)gcemalloc(sizeof(double)*numatom*3);
FFL.c:1340:  (*f).f_a=(double *)gcemalloc(sizeof(double)*numatom*3);
FFL.c:1341:  (*f).f_b=(double *)gcemalloc(sizeof(double)*numatom*3);
FFL.c:1355:  f_e=(double *)gcemalloc(sizeof(double)*numatom*3);           // 2014-07-09
FFL.c:1356:  f_LJ=(double *)gcemalloc(sizeof(double)*numatom*3);          // 2014-07-09
FFL.c:1357:  f_e_14=(double *)gcemalloc(sizeof(double)*numatom*3);        // 2014-07-09
FFL.c:1358:  f_LJ_14=(double *)gcemalloc(sizeof(double)*numatom*3);       // 2014-07-09
FFL.c:1359:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:1415:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:1486:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:1557:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:1626:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:1668:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:1735:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:1796:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:2020:  n_d=(double *)gcemalloc(sizeof(double)*(AP.NPHIH+AP.MPHIA)); // 2014-07-09
FFL.c:2128:  n1=(double *)gcemalloc(sizeof(double)*3);
FFL.c:2129:  n2=(double *)gcemalloc(sizeof(double)*3);
FFL.c:2202:  n1=(double *)gcemalloc(sizeof(double)*3);
FFL.c:2203:  n2=(double *)gcemalloc(sizeof(double)*3);
FFL.c:2301:  f_temp=(double *)gcemalloc(sizeof(double)*3*3);
FFL.c:2578:  indexclut=(int *)gcemalloc(sizeof(int)*(AP.NPHIH+AP.MPHIA));
FFL.c:2579:  //  inpindex=(int *)gcemalloc(sizeof(int)*1);
FFL.c:2638:  indexclut=(int *)gcemalloc(sizeof(int)*(AP.NPHIH+AP.MPHIA));
FFL.c:2639:  //  inpindex=(int *)gcemalloc(sizeof(int)*1);
FFL.c:2743:  indexclut=(int *)gcemalloc(sizeof(int)*(AP.NPHIH+AP.MPHIA));
FFL.c:2744:  //  inpindex=(int *)gcemalloc(sizeof(int)*1);
FFL.c:2847:  indexclut=(int *)gcemalloc(sizeof(int)*(AP.NPHIH+AP.MPHIA));
FFL.c:2848:  //  inpindex=(int *)gcemalloc(sizeof(int)*1);
FFL.c:2886:  atom_dihed_pair=(int *)gcemalloc(sizeof(int)*(AP.NPHIH+AP.MPHIA)*6);
FFL.c:2887:  inpindexH=(int *)gcemalloc(sizeof(int)*1);
FFL.c:2888:  inpindexA=(int *)gcemalloc(sizeof(int)*1);
FFL.c:3016:  inpindex=(int *)gcemalloc(sizeof(int)*((*inpnumH)+(*inpnumA)));
FFL.c:3033:  inpindexA=(int *)gcemalloc(sizeof(int)*AP.MPHIA);
LA.c:37:  mat=(double *)gcemalloc(sizeof(double)*3*3);
LA.c:138:  mattemp=gcemalloc(sizeof(double)*m*n);
LA.c:139:  test=gcemalloc(sizeof(double)*m*n);
LA.c:167:  mattemp=(double *)gcemalloc(sizeof(double)*m*n);
LA.c:189:  matvec2=(double *)gcemalloc(sizeof(double)*num);   // 11_04_11
LA.c:214:  matT=(double *)gcemalloc(sizeof(double)*m*n);
LA.c:217:  U=(double *)gcemalloc(sizeof(double)*m*m);
LA.c:218:  VT=(double *)gcemalloc(sizeof(double)*n*n);
LA.c:223:  V=gcemalloc(sizeof(double)*n*n);
LA.c:228:  /* sigma=gcemalloc(sizeof(double)*n*m);			        */
LA.c:229:  /* Usigma=gcemalloc(sizeof(double)*n*m);			        */
LA.c:230:  /* UT=gcemalloc(sizeof(double)*m*m);				        */
LA.c:232:  /* A=gcemalloc(sizeof(double)*m*n);				        */
LA.c:233:  /* A1=gcemalloc(sizeof(double)*m*n);				        */
LA.c:234:  /* A2=gcemalloc(sizeof(double)*m*n);				        */
LA.c:235:  /* A3=gcemalloc(sizeof(double)*m*n);				        */
LA.c:236:  /* A4=gcemalloc(sizeof(double)*m*n);				        */
LA.c:282:  matU=gcemalloc(sizeof(double)*m*m);
LA.c:283:  matUT=gcemalloc(sizeof(double)*m*m);
LA.c:284:  matVT=gcemalloc(sizeof(double)*n*n);
LA.c:285:  matV=gcemalloc(sizeof(double)*n*n);
LA.c:288:  sv=gcemalloc(sizeof(double)*minmn);
LA.c:294:  sigma=gcemalloc(sizeof(double)*n*m);
LA.c:295:  VTsigma=gcemalloc(sizeof(double)*n*m);
LA.c:305:  AAP=gcemalloc(sizeof(double)*m*m);
LA.c:306:  AAPA=gcemalloc(sizeof(double)*m*n);
LA.c:335:  matU=gcemalloc(sizeof(double)*m*m);
LA.c:336:  matUT=gcemalloc(sizeof(double)*m*m);
LA.c:337:  matVT=gcemalloc(sizeof(double)*n*n);
LA.c:338:  matV=gcemalloc(sizeof(double)*n*n);
LA.c:341:  sv=gcemalloc(sizeof(double)*minmn);
LA.c:347:  sigma=gcemalloc(sizeof(double)*n*m);
LA.c:348:  VTsigma=gcemalloc(sizeof(double)*n*m);
LA.c:359:  /* AAP=gcemalloc(sizeof(double)*m*m);	 */
LA.c:360:  /* AAPA=gcemalloc(sizeof(double)*m*n); */
PTL.c:74:  //  a=(double *)gcemalloc(sizeof(double)*2); // 2014-07-15
PTL.c:75:  //AP_test.CHRG=(double *)gcemalloc(sizeof(double)*10); // 2014-07-15
PTL.c:76:  //  a=(double *)gcemalloc(sizeof(double)*AP.NATOM); // 2014-07-17
PTL.c:77:  //  AP.CHRG=(double *)gcemalloc(sizeof(double)*AP.NATOM);
PTL.c:87:  AP.AMASS=(double *)gcemalloc(sizeof(double)*AP.NATOM);
PTL.c:95:  AP.IAC=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*AP.NATOM); // 0811
PTL.c:103:  AP.NUMEX=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*AP.NATOM); // 0811
PTL.c:111:  AP.ICO=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*(AP.NTYPES)*(AP.NTYPES)); // 0811
PTL.c:129:  AP.IPRES=(int *)gcemalloc(sizeof(int)*AP.NRES);
PTL.c:137:  AP.RK=(double *)gcemalloc(sizeof(double)*AP.NUMBND);
PTL.c:145:  AP.REQ=(double *)gcemalloc(sizeof(double)*AP.NUMBND);
PTL.c:153:  AP.TK=(double *)gcemalloc(sizeof(double)*AP.NUMANG);
PTL.c:161:  AP.TEQ=(double *)gcemalloc(sizeof(double)*AP.NUMANG);
PTL.c:169:  AP.PK=(double *)gcemalloc(sizeof(double)*AP.NPTRA);
PTL.c:177:  AP.PN=(double *)gcemalloc(sizeof(double)*AP.NPTRA);
PTL.c:185:  AP.PHASE=(double *)gcemalloc(sizeof(double)*AP.NPTRA);
PTL.c:193:  AP.SOLTY=(double *)gcemalloc(sizeof(double)*AP.NATYP);
PTL.c:201:  AP.CN1=(double *)gcemalloc(sizeof(double)*(AP.NTYPES)*(AP.NTYPES+1)/2);
PTL.c:209:  AP.CN2=(double *)gcemalloc(sizeof(double)*(AP.NTYPES)*(AP.NTYPES+1)/2);
PTL.c:217:  AP.BH=(int/*double*/ **)gcemalloc(sizeof(int/*double*/ *)*AP.NBONH); // 0811
PTL.c:218:  for (i=0;i<AP.NBONH;++i) AP.BH[i]=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*3);
PTL.c:228:  AP.BA=(int/*double*/ **)gcemalloc(sizeof(int/*double*/ *)*AP.NBONA);
PTL.c:229:  for (i=0;i<AP.NBONA;++i) AP.BA[i]=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*3);
PTL.c:239:  AP.TH=(int/*double*/ **)gcemalloc(sizeof(int/*double*/ *)*AP.NTHETH);
PTL.c:240:  for (i=0;i<AP.NTHETH;++i) AP.TH[i]=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*4);
PTL.c:250:  AP.TA=(int/*double*/ **)gcemalloc(sizeof(int/*double*/ *)*AP.NTHETA);
PTL.c:251:  for (i=0;i<AP.NTHETA;++i) AP.TA[i]=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*4);
PTL.c:261:  AP.PH=(int/*double*/ **)gcemalloc(sizeof(int/*double*/ *)*AP.NPHIH);
PTL.c:262:  for (i=0;i<AP.NPHIH;++i) AP.PH[i]=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*5);
PTL.c:272:  AP.PA=(int/*double*/ **)gcemalloc(sizeof(int/*double*/ *)*AP.NPHIA);
PTL.c:273:  for (i=0;i<AP.NPHIA;++i) AP.PA[i]=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*5);
PTL.c:283:  AP.NATEX=(int *)gcemalloc(sizeof(int)*AP.NEXT);
PTL.c:291:  AP.ASOL=(double *)gcemalloc(sizeof(double)*AP.NPHB);
PTL.c:299:  AP.BSOL=(double *)gcemalloc(sizeof(double)*AP.NPHB);
PTL.c:307:  AP.HBCUT=(double *)gcemalloc(sizeof(double)*AP.NPHB);
PTL.c:335:  AP.JOIN=(int *)gcemalloc(sizeof(int)*AP.NATOM);
PTL.c:343:  AP.IROTAT=(int *)gcemalloc(sizeof(int)*AP.NATOM);
PTL.c:358:    AP.NSP=(int *)gcemalloc(sizeof(int)*AP.NSPM);
PTL.c:390:    AP.BPER=(int **)gcemalloc(sizeof(int *)*AP.NBPER);
PTL.c:391:    for (i=0;i<AP.NBPER;++i) AP.BPER[i]=(int *)gcemalloc(sizeof(int)*2);
PTL.c:398:    AP.ICBPER=(int *)gcemalloc(sizeof(int)*AP.NBPER*1);
PTL.c:403:    AP.TPER=(int **)gcemalloc(sizeof(int *)*AP.NGPER);
PTL.c:404:    for (i=0;i<AP.NGPER;++i) AP.TPER[i]=(int *)gcemalloc(sizeof(int)*3);
PTL.c:411:    AP.ICTPER=(int *)gcemalloc(sizeof(int)*AP.NGPER*2);
PTL.c:416:    AP.PPER=(int **)gcemalloc(sizeof(int *)*AP.NDPER);
PTL.c:417:    //    for (i=0;i<AP.NDPER;++i)   AP.PPER=(int *)gcemalloc(sizeof(int)*4);
PTL.c:418:    for (i=0;i<AP.NDPER;++i)   AP.PPER=(int **)gcemalloc(sizeof(int *)*4); // 2014-06-17
PTL.c:425:    AP.ICTPER=(int *)gcemalloc(sizeof(int)*AP.NDPER*2);
PTL.c:455:    //    AP.IAPER=(int *)gcemalloc(sizeof(int)*AP.NATOM);
PTL.c:456:    AP.IAPER=(double *)gcemalloc(sizeof(double)*AP.NATOM); // 2014-06-17
PTL.c:461:    AP.IACPER=(int *)gcemalloc(sizeof(int)*AP.NATOM);
PTL.c:466:    //    AP.CGPER=(int *)gcemalloc(sizeof(int)*AP.NATOM);
PTL.c:467:    AP.CGPER=(double *)gcemalloc(sizeof(double)*AP.NATOM); // 2014-06-17
PTL.c:482:    AP.LES_TYPE=(int/*double*/ *)gcemalloc(sizeof(int/*double*/)*AP.NATOM);
PTL.c:488:    AP.LES_FAC=(double *)gcemalloc(sizeof(double)*AP.NATOM);
PTL.c:493:    AP.LES_CNUM=(double *)gcemalloc(sizeof(double)*AP.NATOM);
PTL.c:498:    AP.LES_ID=(double *)gcemalloc(sizeof(double)*AP.NATOM);
PTL.c:1518:/*   index_ca_res=(int *)gcemalloc(sizeof(int)*1);		      */
SBFF.c:67:  (*ene).BEQ=(double *)gcemalloc(sizeof(double)*AP.MBONA);
SBFF.c:68:  (*ene).AEQ=(double *)gcemalloc(sizeof(double)*AP.MTHETA);
SBFF.c:69:  (*ene).DEQ=(double *)gcemalloc(sizeof(double)*AP.MPHIA);
SBFF.c:71:  (*ene).p_cnb=(double *)gcemalloc(sizeof(double)*numatom);
SBFF.c:72:  (*ene).p_nnb=(double *)gcemalloc(sizeof(double)*numatom);
SBFF.c:73:  (*ene).p_d=(double *)gcemalloc(sizeof(double)*AP.MPHIA);
SBFF.c:74:  (*ene).p_a=(double *)gcemalloc(sizeof(double)*AP.MTHETA);
SBFF.c:75:  (*ene).p_b=(double *)gcemalloc(sizeof(double)*AP.MBONA);
SBFF.c:80:  (*ene).cradii=(double *)gcemalloc(sizeof(double)*(*ene).numcnb*2);
SBFF.c:81:  (*ene).indexcnb=(int *)gcemalloc(sizeof(int)*(*ene).numcnb*2);
SBFF.c:91:  (*ene).ALJ=(double *)gcemalloc(sizeof(double)*(*ene).numcnb);
SBFF.c:92:  (*ene).BLJ=(double *)gcemalloc(sizeof(double)*(*ene).numcnb);
SBFF.c:104:  (*ene).BEQ=(double *)gcemalloc(sizeof(double)*AP.MBONA);
SBFF.c:105:  (*ene).AEQ=(double *)gcemalloc(sizeof(double)*AP.MTHETA);
SBFF.c:106:  (*ene).DEQ=(double *)gcemalloc(sizeof(double)*AP.MPHIA);
SBFF.c:108:  (*ene).p_cnb=(double *)gcemalloc(sizeof(double)*numatom);
SBFF.c:109:  (*ene).p_nnb=(double *)gcemalloc(sizeof(double)*numatom);
SBFF.c:110:  (*ene).p_d=(double *)gcemalloc(sizeof(double)*AP.MPHIA);
SBFF.c:111:  (*ene).p_a=(double *)gcemalloc(sizeof(double)*AP.MTHETA);
SBFF.c:112:  (*ene).p_b=(double *)gcemalloc(sizeof(double)*AP.MBONA);
SBFF.c:117:  (*ene).cradii=(double *)gcemalloc(sizeof(double)*(*ene).numcnb*2);
SBFF.c:118:  (*ene).indexcnb=(int *)gcemalloc(sizeof(int)*(*ene).numcnb*2);
SBFF.c:128:  (*ene).ALJ=(double *)gcemalloc(sizeof(double)*(*ene).numcnb);
SBFF.c:129:  (*ene).BLJ=(double *)gcemalloc(sizeof(double)*(*ene).numcnb);
SBFF.c:280:  indexcnb_cradii=(double *)gcemalloc(sizeof(double)*3);
SBFF.c:313:  indexcnb_cradii=(double *)gcemalloc(sizeof(double)*3);
SBFF.c:343:  indexnnb=(int *)gcemalloc(sizeof(int)*2);
SBFF.c:374:  indexnnb=(int *)gcemalloc(sizeof(int)*2);
main.c:201:  mass=(double *)gcemalloc(sizeof(double)*numatom);
main.c:204:  crd=(double *)gcemalloc(sizeof(double)*numatom*3);
main.c:205:  crd_Term=(double *)gcemalloc(sizeof(double)*numatom*3); // 2014-06-30
main.c:221:  clt=(CLT *)gcemalloc(sizeof(CLT)*(numclut));
main.c:235:  IndexOfABICycle=(int *)gcemalloc(sizeof(int)*(numclut));
main.c:239:    clt[i].frc_e=(double *)gcemalloc(sizeof(double)*clt[i].num_atom_clust*3);
main.c:240:    clt[i].frc_LJ=(double *)gcemalloc(sizeof(double)*clt[i].num_atom_clust*3);
main.c:241:    clt[i].frc_1_4_e=(double *)gcemalloc(sizeof(double)*clt[i].num_atom_clust*3);
main.c:242:    clt[i].frc_1_4_LJ=(double *)gcemalloc(sizeof(double)*clt[i].num_atom_clust*3);
main.c:247:  numclutparent=(int *)gcemalloc(sizeof(int)*numclut);
main.c:248:  terminal=(int *)gcemalloc(sizeof(int)*numclut);
main.c:249:  origin=(int *)gcemalloc(sizeof(int)*numclut);
main.c:260:  Q=(double *)gcemalloc(sizeof(double)*numclut);
main.c:261:  frc=(double *)gcemalloc(sizeof(double)*numatom*3);
main.c:264:  q=(double *)gcemalloc(sizeof(double)*numclut);
main.c:265:  qacc=(double *)gcemalloc(sizeof(double)*numclut);
main.c:266:  qvel=(double *)gcemalloc(sizeof(double)*numclut);
main.c:267:  qrot=(double *)gcemalloc(sizeof(double)*numclut);
main.c:268:  predict=(double *)gcemalloc(sizeof(double)*numclut*6/**6*/);
main.c:269:  correct=(double *)gcemalloc(sizeof(double)*numclut*6/**6*/);
main.c:271:  delta_Term=(double *)gcemalloc(sizeof(double)*6);
main.c:272:  vel_Term=(double *)gcemalloc(sizeof(double)*6);
main.c:273:  acc_Term=(double *)gcemalloc(sizeof(double)*6);
main.c:274:  acc_Term2=(double *)gcemalloc(sizeof(double)*6);
main.c:275:  predict_Term=(double **)gcemalloc(sizeof(double *)*6);
main.c:276:  predict_Term2=(double **)gcemalloc(sizeof(double *)*6);
main.c:277:  correct_Term=(double **)gcemalloc(sizeof(double *)*6);
main.c:278:  correct_Term2=(double **)gcemalloc(sizeof(double *)*6);
main.c:280:    predict_Term[i]=(double *)gcemalloc(sizeof(double)*6);
main.c:281:    predict_Term2[i]=(double *)gcemalloc(sizeof(double)*6);
main.c:282:    correct_Term[i]=(double *)gcemalloc(sizeof(double)*6);
main.c:283:    correct_Term2[i]=(double *)gcemalloc(sizeof(double)*6);
main.c:294:  trans_A_to_CN_terminal=(double *)gcemalloc(sizeof(double)*3*3); // 2014-06-29
main.c:295:  l_Term=(double *)gcemalloc(sizeof(double)*3); // 2014-06-29
mymath.c:93:  ave=(double *)gcemalloc(sizeof(double)*numv);
mymath.c:94:  var=(double *)gcemalloc(sizeof(double)*numv);
mymath.c:132:  timeseriesnorm=(double *)gcemalloc(sizeof(double)*nums);
mymath.c:156:  ave=(double *)gcemalloc(sizeof(double)*numv);
mymath.c:157:  var=(double *)gcemalloc(sizeof(double)*numv);
mymath.c:183:  ave=(double *)gcemalloc(sizeof(double)*numv);
netcdf_mineL.c:544:  crd=(double *)gcemalloc(sizeof(double)/**numatom*3*/);
netcdf_mineL.c:545:  mass=(double *)gcemalloc(sizeof(double));
netcdf_mineL.c:546:  traj=(double *)gcemalloc(sizeof(double));
netcdf_mineL.c:606:  crd=(double *)gcemalloc(sizeof(double)/**numatom*3*/);
netcdf_mineL.c:607:  //  mass=(double *)gcemalloc(sizeof(double));
netcdf_mineL.c:608:  traj=(double *)gcemalloc(sizeof(double));
