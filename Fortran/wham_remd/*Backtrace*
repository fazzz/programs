Debugger entered--Lisp error: (void-variable maxh)
  eval(maxh nil)
  eval-last-sexp-1(nil)
  eval-last-sexp(nil)
  call-interactively(eval-last-sexp nil nil)
  command-execute(eval-last-sexp)
  read-from-minibuffer("Insert file: " "~/onedrive/Research/work/programs/Fortran/wham_remd/" (keymap (keymap (18 . anything-minibuffer-history) (32)) keymap (18 . anything-minibuffer-history) (10 . minibuffer-complete-and-exit) (13 . minibuffer-complete-and-exit) keymap (18 . anything-minibuffer-history) (menu-bar keymap (minibuf "Minibuf" keymap (tab menu-item "Complete" minibuffer-complete :help "Complete as far as possible") (space menu-item "Complete Word" minibuffer-complete-word :help "Complete at most one word") (63 menu-item "List Completions" minibuffer-completion-help :help "Display all possible completions") "Minibuf")) (27 keymap (118 . switch-to-completions)) (prior . switch-to-completions) (63 . minibuffer-completion-help) (32 . minibuffer-complete-word) (9 . minibuffer-complete) keymap (18 . anything-minibuffer-history) (menu-bar keymap (minibuf "Minibuf" keymap (previous menu-item "Previous History Item" previous-history-element :help "Put previous minibuffer history element in the minibuffer") (next menu-item "Next History Item" next-history-element :help "Put next minibuffer history element in the minibuffer") (isearch-backward menu-item "Isearch History Backward" isearch-backward :help "Incrementally search minibuffer history backward") (isearch-forward menu-item "Isearch History Forward" isearch-forward :help "Incrementally search minibuffer history forward") (return menu-item "Enter" exit-minibuffer :key-sequence "" :help "Terminate input and exit minibuffer") (quit menu-item "Quit" abort-recursive-edit :help "Abort input and exit minibuffer") "Minibuf")) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . abort-recursive-edit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-history-element) (next . next-history-element) (27 keymap (114 . previous-matching-history-element) (115 . next-matching-history-element) (112 . previous-history-element) (110 . next-history-element))) nil file-name-history "~/onedrive/Research/work/programs/Fortran/wham_remd/PTwham.f90" nil)
  completing-read-default("Insert file: " read-file-name-internal file-exists-p lambda "~/onedrive/Research/work/programs/Fortran/wham_remd/" file-name-history "~/onedrive/Research/work/programs/Fortran/wham_remd/PTwham.f90" nil)
  completing-read("Insert file: " read-file-name-internal file-exists-p lambda "~/onedrive/Research/work/programs/Fortran/wham_remd/" file-name-history "~/onedrive/Research/work/programs/Fortran/wham_remd/PTwham.f90")
  read-file-name-default("Insert file: " nil nil lambda nil nil)
  read-file-name("Insert file: " nil nil lambda nil nil)
  call-interactively(insert-file nil nil)
  command-execute(insert-file)
